
// File: index.xml

// File: classCasADi_1_1AcadoFunction.xml
%feature("docstring") CasADi::AcadoFunction "

CasADi to ACADO function interface.

C++ includes: acado_function.hpp ";

%feature("docstring")  CasADi::AcadoFunction::AcadoFunction "";

%feature("docstring")  CasADi::AcadoFunction::~AcadoFunction "";

%feature("docstring")  CasADi::AcadoFunction::init "";

%feature("docstring")  CasADi::AcadoFunction::fcn "";

%feature("docstring")  CasADi::AcadoFunction::fcn_fwd "";

%feature("docstring")  CasADi::AcadoFunction::fcn_adj "";


// File: classCasADi_1_1AcadoIntegrator.xml
%feature("docstring") CasADi::AcadoIntegrator "

Interface to ACADO Integrator from the ACADO Toolkit.

Creates an integrator instance which solves initial value problems in
differential-algebraic equations of the semi-explicit form:

der(xd) = fd(t,[xd,xa],p)       0   = fa(t,[xd,xa],p)

The DAE thus consists of an differential part (fd) and an algebraic part
(fa). In the same way, the state vector is also composed of two parts, the
differential states xd and the algebraic states xa. The complete state is
thus x := [xd,xa]

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| num_algebrai | OT_INTEGER   | 0            | Number of    | CasADi::Acad |
| c            |              |              | algebraic    | oIntegratorI |
|              |              |              | states       | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| num_grid_poi | OT_INTEGER   | 2            | Number of    | CasADi::Acad |
| nts          |              |              | uniformly    | oIntegratorI |
|              |              |              | distributed  | nternal      |
|              |              |              | grid points  |              |
|              |              |              | for          |              |
|              |              |              | obtaining    |              |
|              |              |              | the          |              |
|              |              |              | solution,    |              |
|              |              |              | does not     |              |
|              |              |              | influence    |              |
|              |              |              | the          |              |
|              |              |              | integration  |              |
|              |              |              | steps        |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| time_depende | OT_BOOLEAN   | true         | Explicit     | CasADi::Acad |
| nce          |              |              | depencency   | oIntegratorI |
|              |              |              | of time in   | nternal      |
|              |              |              | the DAE      |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: acado_integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::AcadoIntegrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::AcadoIntegrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::AcadoIntegrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::AcadoIntegrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::AcadoIntegrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::AcadoIntegrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::AcadoIntegrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::AcadoIntegrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::AcadoIntegrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::AcadoIntegrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::AcadoIntegrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::AcadoIntegrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::AcadoIntegrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOption "

get an option value ";

%feature("docstring")  CasADi::AcadoIntegrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::AcadoIntegrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::AcadoIntegrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::AcadoIntegrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::AcadoIntegrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::AcadoIntegrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::AcadoIntegrator::makeUnique "";

%feature("docstring")  CasADi::AcadoIntegrator::AcadoIntegrator "

Default constructor. ";

%feature("docstring")  CasADi::AcadoIntegrator::AcadoIntegrator "

Create an integrator for a fully implicit DAE with quadrature states (nz is
the number of states not to be included in the state vector) ";

%feature("docstring")  CasADi::AcadoIntegrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::AcadoIntegrator::freeze "

Freeze the grid from now on. ";

%feature("docstring")  CasADi::AcadoIntegrator::unfreeze "

Unfreeze. ";

%feature("docstring")  CasADi::AcadoIntegrator::clone "

Clone. ";

%feature("docstring")  CasADi::AcadoIntegrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::AcadoIntegrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::AcadoIntegrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::AcadoIntegrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::AcadoIntegrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::AcadoIntegrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::AcadoIntegrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::AcadoIntegrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::AcadoIntegrator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::AcadoIntegrator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::AcadoIntegrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::AcadoIntegrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::AcadoIntegrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::AcadoIntegrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::AcadoIntegrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::AcadoIntegrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::AcadoIntegrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::AcadoIntegrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::AcadoIntegrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::AcadoIntegrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::AcadoIntegrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::AcadoIntegrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::AcadoIntegrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::AcadoIntegrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::AcadoIntegrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::AcadoIntegrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoIntegrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoIntegrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::AcadoIntegrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::AcadoIntegrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoIntegrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::AcadoIntegrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoIntegrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::AcadoIntegrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoIntegrator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoIntegrator::indexed_one_based "";

%feature("docstring")  CasADi::AcadoIntegrator::indexed_zero_based "";

%feature("docstring")  CasADi::AcadoIntegrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoIntegrator::input "

Access input argument. ";

%feature("docstring")  CasADi::AcadoIntegrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoIntegrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::AcadoIntegrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::AcadoIntegrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::AcadoIntegrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::AcadoIntegrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::AcadoIntegrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoIntegrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoIntegrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::AcadoIntegrator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::AcadoIntegrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::AcadoIntegrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::AcadoIntegrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::AcadoIntegrator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegrator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::AcadoIntegrator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::AcadoIntegrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::AcadoIntegrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::AcadoIntegrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::AcadoIntegrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::AcadoIntegrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::AcadoIntegrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::AcadoIntegrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::AcadoIntegrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::AcadoIntegrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::AcadoIntegrator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::AcadoIntegrator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::AcadoIntegrator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1AcadoIntegratorBackend.xml
%feature("docstring") CasADi::AcadoIntegratorBackend "C++ includes:
acado_integrator_backend.hpp ";

%feature("docstring")
CasADi::AcadoIntegratorBackend::AcadoIntegratorBackend "

Constructor. ";

%feature("docstring")
CasADi::AcadoIntegratorBackend::~AcadoIntegratorBackend "

Destructor. ";

%feature("docstring")
CasADi::AcadoIntegratorBackend::AcadoIntegratorBackend "

Default constructor. ";

%feature("docstring")
CasADi::AcadoIntegratorBackend::AcadoIntegratorBackend "

Copy constructor (deep copy). ";

%feature("docstring")  CasADi::AcadoIntegratorBackend::clone "

The (virtual) copy constructor ";

%feature("docstring")  CasADi::AcadoIntegratorBackend::freezeMesh "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::freezeAll "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::unfreeze "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::step "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::stop "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::setDxInitialization "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::getNumberOfSteps "";

%feature("docstring")
CasADi::AcadoIntegratorBackend::getNumberOfRejectedSteps "";

%feature("docstring")  CasADi::AcadoIntegratorBackend::getStepSize "";


// File: classCasADi_1_1AcadoIntegratorInternal.xml
%feature("docstring") CasADi::AcadoIntegratorInternal "

Creates an integrator instance which solves initial value problems in
differential-algebraic equations of the semi-explicit form:

der(xd) = fd(t,[xd,xa],p)       0   = fa(t,[xd,xa],p)

The DAE thus consists of an differential part (fd) and an algebraic part
(fa). In the same way, the state vector is also composed of two parts, the
differential states xd and the algebraic states xa. The complete state is
thus x := [xd,xa]

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| num_algebrai | OT_INTEGER   | 0            | Number of    | CasADi::Acad |
| c            |              |              | algebraic    | oIntegratorI |
|              |              |              | states       | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| num_grid_poi | OT_INTEGER   | 2            | Number of    | CasADi::Acad |
| nts          |              |              | uniformly    | oIntegratorI |
|              |              |              | distributed  | nternal      |
|              |              |              | grid points  |              |
|              |              |              | for          |              |
|              |              |              | obtaining    |              |
|              |              |              | the          |              |
|              |              |              | solution,    |              |
|              |              |              | does not     |              |
|              |              |              | influence    |              |
|              |              |              | the          |              |
|              |              |              | integration  |              |
|              |              |              | steps        |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| time_depende | OT_BOOLEAN   | true         | Explicit     | CasADi::Acad |
| nce          |              |              | depencency   | oIntegratorI |
|              |              |              | of time in   | nternal      |
|              |              |              | the DAE      |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: acado_integrator_internal.hpp ";

%feature("docstring")
CasADi::AcadoIntegratorInternal::AcadoIntegratorInternal "

Constructor. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::clone "

Clone. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::create "

Create a new integrator. ";

%feature("docstring")
CasADi::AcadoIntegratorInternal::~AcadoIntegratorInternal "

Destructor. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setNull "

Set all pointers to NULL. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::freeMem "

Deallocate memory. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::init "

Initialize. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setStopTime "

Set the stop time of the forward integration. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getJacobian "

Get the Jacobian. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::evaluate "

evaluate ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::print "

Print. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::repr "

Print. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::AcadoIntegratorInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::AcadoIntegratorInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOptionDescription
"

Get the description of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::AcadoIntegratorInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1AcadoOCP.xml
%feature("docstring") CasADi::AcadoOCP "

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| absolute_tol | OT_REAL      |              |              | CasADi::Acad |
| erance       |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| auto_init    | OT_BOOLEAN   | false        | initialize   | CasADi::Acad |
|              |              |              | differential | oOCPInternal |
|              |              |              | and          |              |
|              |              |              | angebraic    |              |
|              |              |              | states by a  |              |
|              |              |              | forward      |              |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| dynamic_sens | OT_STRING    |              | forward_sens | CasADi::Acad |
| itivity      |              |              | itivities or | oOCPInternal |
|              |              |              | backward_sen |              |
|              |              |              | sitivities   |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | true         |              | CasADi::Acad |
| an           |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::Acad |
|              |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    |              |              | CasADi::Acad |
| oximation    |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_STRING    |              |              | CasADi::Acad |
|              |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| integrator_t | OT_REAL      |              |              | CasADi::Acad |
| olerance     |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| kkt_toleranc | OT_REAL      |              |              | CasADi::Acad |
| e            |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| max_num_inte | OT_INTEGER   |              |              | CasADi::Acad |
| grator_steps |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| max_num_iter | OT_INTEGER   |              |              | CasADi::Acad |
| ations       |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_sh | OT_INTEGER   | 20           |              | CasADi::Acad |
| ooting_nodes |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| periodic_bou | OT_INTEGERVE |              |              | CasADi::Acad |
| nds          | CTOR         |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_STRING    | \"low\"        | \"none\",      | CasADi::Acad |
|              |              |              | \"low\",       | oOCPInternal |
|              |              |              | \"medium\",    |              |
|              |              |              | \"high\",      |              |
|              |              |              | \"debug\"      |              |
+--------------+--------------+--------------+--------------+--------------+
| relaxation_p | OT_REAL      |              |              | CasADi::Acad |
| arameter     |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| start_time   | OT_REAL      | 0            |              | CasADi::Acad |
|              |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: acado_ocp.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::AcadoOCP::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::AcadoOCP::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::AcadoOCP::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::AcadoOCP::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::AcadoOCP::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::AcadoOCP::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::AcadoOCP::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::AcadoOCP::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::AcadoOCP::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::AcadoOCP::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::AcadoOCP::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::AcadoOCP::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::AcadoOCP::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::AcadoOCP::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::AcadoOCP::getOption "

get an option value ";

%feature("docstring")  CasADi::AcadoOCP::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::AcadoOCP::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::AcadoOCP::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::AcadoOCP::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::AcadoOCP::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::AcadoOCP::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::AcadoOCP::makeUnique "";

%feature("docstring")  CasADi::AcadoOCP::AcadoOCP "

Default constructor. ";

%feature("docstring")  CasADi::AcadoOCP::AcadoOCP "

Constructor taking a DAE rhs function, an objective function and a
constraint function -- for use with ACADO integrators. ";

%feature("docstring")  CasADi::AcadoOCP::setIntegrators "

Set a user-provided integrator. ";

%feature("docstring")  CasADi::AcadoOCP::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::AcadoOCP::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::AcadoOCP::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::AcadoOCP::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::AcadoOCP::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::AcadoOCP::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::AcadoOCP::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::AcadoOCP::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::AcadoOCP::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::AcadoOCP::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::AcadoOCP::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::AcadoOCP::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::AcadoOCP::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::AcadoOCP::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::AcadoOCP::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::AcadoOCP::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::AcadoOCP::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::AcadoOCP::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::AcadoOCP::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::AcadoOCP::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::AcadoOCP::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoOCP::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoOCP::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::AcadoOCP::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::AcadoOCP::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoOCP::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::AcadoOCP::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::AcadoOCP::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::AcadoOCP::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoOCP::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoOCP::indexed_one_based "";

%feature("docstring")  CasADi::AcadoOCP::indexed_zero_based "";

%feature("docstring")  CasADi::AcadoOCP::input "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoOCP::input "

Access input argument. ";

%feature("docstring")  CasADi::AcadoOCP::output "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoOCP::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::AcadoOCP::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::AcadoOCP::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::AcadoOCP::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCP::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCP::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::AcadoOCP::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::AcadoOCP::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCP::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCP::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoOCP::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoOCP::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::AcadoOCP::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::AcadoOCP::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::AcadoOCP::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::AcadoOCP::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::AcadoOCP::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::AcadoOCP::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::AcadoOCP::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::AcadoOCP::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::AcadoOCP::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::AcadoOCP::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::AcadoOCP::clone "

Deep copy. ";

%feature("docstring")  CasADi::AcadoOCP::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::AcadoOCP::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::AcadoOCP::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::AcadoOCP::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::AcadoOCP::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::AcadoOCP::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::AcadoOCP::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::AcadoOCP::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::AcadoOCP::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::AcadoOCP::isInit "

Is initialized? ";

%feature("docstring")  CasADi::AcadoOCP::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::AcadoOCP::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::AcadoOCP::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::AcadoOCP::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1AcadoOCPInternal.xml
%feature("docstring") CasADi::AcadoOCPInternal "

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| absolute_tol | OT_REAL      |              |              | CasADi::Acad |
| erance       |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| auto_init    | OT_BOOLEAN   | false        | initialize   | CasADi::Acad |
|              |              |              | differential | oOCPInternal |
|              |              |              | and          |              |
|              |              |              | angebraic    |              |
|              |              |              | states by a  |              |
|              |              |              | forward      |              |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| dynamic_sens | OT_STRING    |              | forward_sens | CasADi::Acad |
| itivity      |              |              | itivities or | oOCPInternal |
|              |              |              | backward_sen |              |
|              |              |              | sitivities   |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | true         |              | CasADi::Acad |
| an           |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::Acad |
|              |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    |              |              | CasADi::Acad |
| oximation    |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_STRING    |              |              | CasADi::Acad |
|              |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| integrator_t | OT_REAL      |              |              | CasADi::Acad |
| olerance     |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| kkt_toleranc | OT_REAL      |              |              | CasADi::Acad |
| e            |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| max_num_inte | OT_INTEGER   |              |              | CasADi::Acad |
| grator_steps |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| max_num_iter | OT_INTEGER   |              |              | CasADi::Acad |
| ations       |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_sh | OT_INTEGER   | 20           |              | CasADi::Acad |
| ooting_nodes |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| periodic_bou | OT_INTEGERVE |              |              | CasADi::Acad |
| nds          | CTOR         |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_STRING    | \"low\"        | \"none\",      | CasADi::Acad |
|              |              |              | \"low\",       | oOCPInternal |
|              |              |              | \"medium\",    |              |
|              |              |              | \"high\",      |              |
|              |              |              | \"debug\"      |              |
+--------------+--------------+--------------+--------------+--------------+
| relaxation_p | OT_REAL      |              |              | CasADi::Acad |
| arameter     |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| start_time   | OT_REAL      | 0            |              | CasADi::Acad |
|              |              |              |              | oOCPInternal |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: acado_ocp_internal.hpp ";

%feature("docstring")  CasADi::AcadoOCPInternal::~AcadoOCPInternal "

Destructor. ";

%feature("docstring")  CasADi::AcadoOCPInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::AcadoOCPInternal::init "

Initialize the solver. ";

%feature("docstring")  CasADi::AcadoOCPInternal::evaluate "

Solve the problem. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getRef "";

%feature("docstring")  CasADi::AcadoOCPInternal::returnRef "";

%feature("docstring")  CasADi::AcadoOCPInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::AcadoOCPInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::AcadoOCPInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::AcadoOCPInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::AcadoOCPInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::AcadoOCPInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::AcadoOCPInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::AcadoOCPInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::AcadoOCPInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::AcadoOCPInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::AcadoOCPInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::AcadoOCPInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::AcadoOCPInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::AcadoOCPInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::AcadoOCPInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::AcadoOCPInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::AcadoOCPInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::AcadoOCPInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::AcadoOCPInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::AcadoOCPInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::AcadoOCPInternal::print "

Print. ";

%feature("docstring")  CasADi::AcadoOCPInternal::repr "

Print. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::AcadoOCPInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::AcadoOCPInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::AcadoOCPInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::AcadoOCPInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoOCPInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::AcadoOCPInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::AcadoOCPInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::AcadoOCPInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::AcadoOCPInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCPInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCPInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::AcadoOCPInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::AcadoOCPInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCPInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::AcadoOCPInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::AcadoOCPInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::AcadoOCPInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::AcadoOCPInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoOCPInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoOCPInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::AcadoOCPInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::AcadoOCPInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::AcadoOCPInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::AcadoOCPInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::AcadoOCPInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::AcadoOCPInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::AcadoOCPInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::AcadoOCPInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::AcadoOCPInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::AcadoOCPInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::AcadoOCPInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::AcadoOCPInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::AcadoOCPInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::AcadoOCPInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::AcadoOCPInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::AcadoOCPInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::AcadoOCPInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::AcadoOCPInternal::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1AddBinaryOperation.xml
%feature("docstring") CasADi::AddBinaryOperation "C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1AuxOutputSX.xml
%feature("docstring") CasADi::AuxOutputSX "

Represents an auxillary output of a function.

Joel Andersson

C++ includes: aux_output_sx.hpp ";

%feature("docstring")  CasADi::AuxOutputSX::isConstant "

check properties of a node ";

%feature("docstring")  CasADi::AuxOutputSX::isInteger "";

%feature("docstring")  CasADi::AuxOutputSX::isSymbolic "";

%feature("docstring")  CasADi::AuxOutputSX::isZero "";

%feature("docstring")  CasADi::AuxOutputSX::isOne "";

%feature("docstring")  CasADi::AuxOutputSX::isMinusOne "";

%feature("docstring")  CasADi::AuxOutputSX::isNan "";

%feature("docstring")  CasADi::AuxOutputSX::isInf "";

%feature("docstring")  CasADi::AuxOutputSX::isMinusInf "";

%feature("docstring")  CasADi::AuxOutputSX::getValue "

Get value of a constant node. ";

%feature("docstring")  CasADi::AuxOutputSX::getIntValue "";

%feature("docstring")  CasADi::AuxOutputSX::~AuxOutputSX "

Destructor This might need fixing to avoid stack overflow due to recursive
calling. ";

%feature("docstring")  CasADi::AuxOutputSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::AuxOutputSX::hasDep "";

%feature("docstring")  CasADi::AuxOutputSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::AuxOutputSX::dep "

get the reference of a dependency ";

%feature("docstring")  CasADi::AuxOutputSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::AuxOutputSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::AuxOutputSX::print "

Print the expression (recursively with a maximum number of levels) ";

%feature("docstring")  CasADi::AuxOutputSX::getName "";

%feature("docstring")  CasADi::AuxOutputSX::isEqual "

comparison ";

%feature("docstring")  CasADi::AuxOutputSX::isEqual "

comparison ";

%feature("docstring")  CasADi::AuxOutputSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::AuxOutputSX::print "

print ";

%feature("docstring")  CasADi::AuxOutputSX::marked "";

%feature("docstring")  CasADi::AuxOutputSX::mark "";


// File: structCasADi_1_1BinaryChecker.xml
%feature("docstring") CasADi::BinaryChecker "

Is the operation binary as opposed to unary.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__ADD_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_ADD > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__ATAN2_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_ATAN2 > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__CONSTPOW_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_CONSTPOW > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__DIV_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_DIV > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__EQUALITY_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_EQUALITY > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__FMAX_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_FMAX > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__FMIN_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_FMIN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__MUL_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_MUL > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__POW_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_POW > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__PRINTME_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_PRINTME > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryChecker_3_01OP__SUB_01_4.xml
%feature("docstring") CasADi::BinaryChecker< OP_SUB > " C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1BinaryMX.xml
%feature("docstring") CasADi::BinaryMX "

Represents any binary operation that involves two matrices.

Joel Andersson

C++ includes: binary_mx.hpp ";

%feature("docstring")  CasADi::BinaryMX::BinaryMX "

Constructor. ";

%feature("docstring")  CasADi::BinaryMX::~BinaryMX "

Destructor. ";

%feature("docstring")  CasADi::BinaryMX::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::BinaryMX::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::BinaryMX::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::BinaryMX::clone "

Clone function. ";

%feature("docstring")  CasADi::BinaryMX::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::BinaryMX::repr "

Print a representation. ";

%feature("docstring")  CasADi::BinaryMX::print "

Print a description. ";

%feature("docstring")  CasADi::BinaryMX::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::BinaryMX::evaluateD "

Evaluate the function. ";

%feature("docstring")  CasADi::BinaryMX::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::BinaryMX::evaluateSX "

Evaluate symbolically ( SX) ";

%feature("docstring")  CasADi::BinaryMX::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::BinaryMX::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::BinaryMX::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::BinaryMX::getName "

Get the name. ";

%feature("docstring")  CasADi::BinaryMX::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::BinaryMX::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::BinaryMX::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::BinaryMX::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::BinaryMX::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::BinaryMX::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::BinaryMX::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::BinaryMX::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::BinaryMX::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::BinaryMX::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::BinaryMX::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::BinaryMX::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::BinaryMX::dep "";

%feature("docstring")  CasADi::BinaryMX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::BinaryMX::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::BinaryMX::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::BinaryMX::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::BinaryMX::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::BinaryMX::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::BinaryMX::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::BinaryMX::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::BinaryMX::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::BinaryMX::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::BinaryMX::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::BinaryMX::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::BinaryMX::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::BinaryMX::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::BinaryMX::numel "

Number of elements. ";

%feature("docstring")  CasADi::BinaryMX::size "

Get size. ";

%feature("docstring")  CasADi::BinaryMX::size1 "

Get size. ";

%feature("docstring")  CasADi::BinaryMX::size2 "

Get size. ";

%feature("docstring")  CasADi::BinaryMX::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::BinaryMX::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::BinaryMX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::BinaryMX::init "

Initialize the object. ";

%feature("docstring")  CasADi::BinaryMX::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::BinaryMX::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1BinaryOperation.xml
%feature("docstring") CasADi::BinaryOperation "C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__ADD_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_ADD > "

Addition.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__ATAN2_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_ATAN2 > "

Arctan2.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__CONSTPOW_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_CONSTPOW > "

Power, defined only for y constant.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__DIV_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_DIV > "

Division.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__EQUALITY_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_EQUALITY > "

Equality.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__FMAX_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_FMAX > "

Maximum.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__FMIN_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_FMIN > "

Minimum.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__MUL_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_MUL > "

Multiplication.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__POW_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_POW > "

Power, defined only for x>=0.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__PRINTME_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_PRINTME > "

Identity operator with the side effect of printing.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperation_3_01OP__SUB_01_4.xml
%feature("docstring") CasADi::BinaryOperation< OP_SUB > "

Subtraction.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1BinaryOperationE.xml
%feature("docstring") CasADi::BinaryOperationE "C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1BinarySX.xml
%feature("docstring") CasADi::BinarySX "

Represents a basic binary operation on two SX nodes.

Joel Andersson

C++ includes: binary_sx.hpp ";

%feature("docstring")  CasADi::BinarySX::isConstant "

check properties of a node ";

%feature("docstring")  CasADi::BinarySX::isInteger "";

%feature("docstring")  CasADi::BinarySX::isSymbolic "";

%feature("docstring")  CasADi::BinarySX::isZero "";

%feature("docstring")  CasADi::BinarySX::isOne "";

%feature("docstring")  CasADi::BinarySX::isMinusOne "";

%feature("docstring")  CasADi::BinarySX::isNan "";

%feature("docstring")  CasADi::BinarySX::isInf "";

%feature("docstring")  CasADi::BinarySX::isMinusInf "";

%feature("docstring")  CasADi::BinarySX::getValue "

Get value of a constant node. ";

%feature("docstring")  CasADi::BinarySX::getIntValue "";

%feature("docstring")  CasADi::BinarySX::~BinarySX "

Destructor This is a rather complex destructor which is necessary since the
default destructor can cause stack overflow due to recursive calling. ";

%feature("docstring")  CasADi::BinarySX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::BinarySX::hasDep "";

%feature("docstring")  CasADi::BinarySX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::BinarySX::dep "

get the reference of a dependency ";

%feature("docstring")  CasADi::BinarySX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::BinarySX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::BinarySX::print "

Print the expression (recursively with a maximum number of levels) ";

%feature("docstring")  CasADi::BinarySX::getName "";

%feature("docstring")  CasADi::BinarySX::isEqual "

comparison ";

%feature("docstring")  CasADi::BinarySX::isEqual "

comparison ";

%feature("docstring")  CasADi::BinarySX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::BinarySX::print "

print ";

%feature("docstring")  CasADi::BinarySX::marked "";

%feature("docstring")  CasADi::BinarySX::mark "";


// File: classCasADi_1_1CachedObject.xml
%feature("docstring") CasADi::CachedObject "

A cached reference counted object.

Joel Andersson

C++ includes: cached_object.hpp ";

%feature("docstring")  CasADi::CachedObject::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::CachedObject::makeUnique "";

%feature("docstring")  CasADi::CachedObject::CachedObject "

Default constructor. ";

%feature("docstring")  CasADi::CachedObject::~CachedObject "

Destructor. ";

%feature("docstring")  CasADi::CachedObject::checkNode "

Assert that the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::CachedObject::clone "

Deep copy. ";

%feature("docstring")  CasADi::CachedObject::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::CachedObject::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::CachedObject::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::CachedObject::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::CachedObject::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CachedObject::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::CachedObject::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::CachedObject::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::CachedObject::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::CachedObject::isInit "

Is initialized? ";

%feature("docstring")  CasADi::CachedObject::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::CachedObject::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::CachedObject::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::CachedObject::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1CachedObjectNode.xml
%feature("docstring") CasADi::CachedObjectNode "

Internal class.

Joel Andersson

C++ includes: cached_object.hpp ";

%feature("docstring")  CasADi::CachedObjectNode::CachedObjectNode "

Constructor. ";

%feature("docstring")  CasADi::CachedObjectNode::~CachedObjectNode "

Destructor (marks the element as deleted in any lingering references) ";

%feature("docstring")  CasADi::CachedObjectNode::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::CachedObjectNode::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::CachedObjectNode::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::CachedObjectNode::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::CachedObjectNode::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CachedObjectNode::init "

Initialize the object. ";

%feature("docstring")  CasADi::CachedObjectNode::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::CachedObjectNode::assertInit "

Assert that the object has been initialized. ";

%feature("docstring")  CasADi::CachedObjectNode::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::CachedObjectNode::print "

Print a destription of the object. ";


// File: classCasADi_1_1casadi__limits.xml
%feature("docstring") CasADi::casadi_limits "C++ includes:
casadi_limits.hpp ";


// File: classCasADi_1_1casadi__limits_3_01SX_01_4.xml
%feature("docstring") CasADi::casadi_limits< SX > " C++ includes: sx.hpp ";


// File: structCasADi_1_1casadi__math.xml
%feature("docstring") CasADi::casadi_math "

Easy access to all the functions for a particular type.

C++ includes: casadi_math.hpp ";


// File: structCasADi_1_1casadi__math_3_01int_01_4.xml
%feature("docstring") CasADi::casadi_math< int > "

Specialize the class so that it can be used with integer type.

C++ includes: casadi_math.hpp ";


// File: classCasADi_1_1CasadiException.xml
%feature("docstring") CasADi::CasadiException "

Casadi exception class.

Joel Andersson

C++ includes: casadi_exception.hpp ";

%feature("docstring")  CasADi::CasadiException::CasadiException "

Default constructor. ";

%feature("docstring")  CasADi::CasadiException::CasadiException "

Form message string. ";

%feature("docstring")  CasADi::CasadiException::~CasadiException "throw ()
Destructor. ";

%feature("docstring")  CasADi::CasadiException::what "throw () Display
error. ";


// File: classCasADi_1_1Interfaces_1_1CasadiLifter.xml
%feature("docstring") CasADi::Interfaces::CasadiLifter "C++ includes:
casadi_lifter.hpp ";

%feature("docstring")  CasADi::Interfaces::CasadiLifter::CasadiLifter "";

%feature("docstring")  CasADi::Interfaces::CasadiLifter::~CasadiLifter "";

%feature("docstring")  CasADi::Interfaces::CasadiLifter::evalUserFcn "";


// File: classCasADi_1_1CasadiOptions.xml
%feature("docstring") CasADi::CasadiOptions "

Collects global CasADi options.

Note to developers: use sparingly. Global options are - in general - a
rather bad idea

this class must never be instantiated. Access its static members directly

Joris Gillis

C++ includes: casadi_options.hpp ";


// File: classCasADi_1_1CFunction.xml
%feature("docstring") CasADi::CFunction "

Interface to function implemented as plain code.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: c_function.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::CFunction::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::CFunction::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::CFunction::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::CFunction::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::CFunction::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::CFunction::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::CFunction::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::CFunction::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::CFunction::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::CFunction::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::CFunction::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::CFunction::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::CFunction::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::CFunction::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::CFunction::getOption "

get an option value ";

%feature("docstring")  CasADi::CFunction::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::CFunction::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::CFunction::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::CFunction::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::CFunction::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::CFunction::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::CFunction::makeUnique "";

%feature("docstring")  CasADi::CFunction::CFunction "

default constructor ";

%feature("docstring")  CasADi::CFunction::CFunction "

Create a function with input/output schemes given. ";

%feature("docstring")  CasADi::CFunction::CFunction "

Create a function, user sets inputs outputs manually. ";

%feature("docstring")  CasADi::CFunction::checkNode "

Check if the pointer points towards a valid object. ";

%feature("docstring")  CasADi::CFunction::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::CFunction::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::CFunction::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::CFunction::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::CFunction::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::CFunction::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::CFunction::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::CFunction::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::CFunction::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::CFunction::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::CFunction::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::CFunction::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::CFunction::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::CFunction::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::CFunction::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::CFunction::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::CFunction::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::CFunction::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::CFunction::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::CFunction::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CFunction::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CFunction::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::CFunction::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::CFunction::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CFunction::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::CFunction::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CFunction::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::CFunction::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CFunction::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CFunction::indexed_one_based "";

%feature("docstring")  CasADi::CFunction::indexed_zero_based "";

%feature("docstring")  CasADi::CFunction::input "

Const access input argument. ";

%feature("docstring")  CasADi::CFunction::input "

Access input argument. ";

%feature("docstring")  CasADi::CFunction::output "

Const access input argument. ";

%feature("docstring")  CasADi::CFunction::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::CFunction::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::CFunction::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::CFunction::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CFunction::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CFunction::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::CFunction::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::CFunction::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CFunction::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CFunction::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CFunction::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CFunction::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::CFunction::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::CFunction::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CFunction::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CFunction::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CFunction::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::CFunction::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::CFunction::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::CFunction::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::CFunction::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::CFunction::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::CFunction::clone "

Deep copy. ";

%feature("docstring")  CasADi::CFunction::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::CFunction::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::CFunction::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::CFunction::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::CFunction::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CFunction::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::CFunction::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::CFunction::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::CFunction::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::CFunction::isInit "

Is initialized? ";

%feature("docstring")  CasADi::CFunction::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::CFunction::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::CFunction::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::CFunction::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1CFunctionInternal.xml
%feature("docstring") CasADi::CFunctionInternal "

Internal class for CFunction.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: c_function_internal.hpp ";

%feature("docstring")  CasADi::CFunctionInternal::CFunctionInternal "

Create a function. ";

%feature("docstring")  CasADi::CFunctionInternal::~CFunctionInternal "

Destructor. ";

%feature("docstring")  CasADi::CFunctionInternal::clone "

Cloning. ";

%feature("docstring")  CasADi::CFunctionInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::CFunctionInternal::init "

Initialize. ";

%feature("docstring")  CasADi::CFunctionInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::CFunctionInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::CFunctionInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::CFunctionInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::CFunctionInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::CFunctionInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::CFunctionInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::CFunctionInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::CFunctionInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::CFunctionInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::CFunctionInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::CFunctionInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::CFunctionInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::CFunctionInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::CFunctionInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::CFunctionInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::CFunctionInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::CFunctionInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::CFunctionInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::CFunctionInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::CFunctionInternal::print "

Print. ";

%feature("docstring")  CasADi::CFunctionInternal::repr "

Print. ";

%feature("docstring")  CasADi::CFunctionInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::CFunctionInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::CFunctionInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::CFunctionInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::CFunctionInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::CFunctionInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::CFunctionInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::CFunctionInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::CFunctionInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::CFunctionInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CFunctionInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CFunctionInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::CFunctionInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::CFunctionInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CFunctionInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CFunctionInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::CFunctionInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::CFunctionInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::CFunctionInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::CFunctionInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::CFunctionInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::CFunctionInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CFunctionInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CFunctionInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CFunctionInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CFunctionInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CFunctionInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::CFunctionInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::CFunctionInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::CFunctionInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::CFunctionInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::CFunctionInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::CFunctionInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::CFunctionInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::CFunctionInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::CFunctionInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::CFunctionInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::CFunctionInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::CFunctionInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::CFunctionInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::CFunctionInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::CFunctionInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::CFunctionInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::CFunctionInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::CFunctionInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::CFunctionInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::CFunctionInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::CFunctionInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::CFunctionInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::CFunctionInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CFunctionInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::CFunctionInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1OptimalControl_1_1Collocation.xml
%feature("docstring") CasADi::OptimalControl::Collocation "

Direct collocation.

Joel Andersson

>Input scheme: CasADi::OCPInput (OCP_NUM_IN = 17)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| OCP_T                              | Time grid: ((ns+1) x 1) - default: |
|                                    | linspace(0,t_final,ns+1)           |
+------------------------------------+------------------------------------+
| OCP_LBX                            | States lower bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_UBX                            | States upper bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_X_INIT                         | States initial guess (nx x (ns+1)) |
+------------------------------------+------------------------------------+
| OCP_LBXP                           | States deriatives lower bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_UBXP                           | States deriatives upper bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_XP_INIT                        | States deriatives initial guess    |
|                                    | (nx x (ns+1))                      |
+------------------------------------+------------------------------------+
| OCP_LBU                            | Controls lower bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_UBU                            | Controls upper bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_U_INIT                         | Controls initial guess (nu x ns)   |
+------------------------------------+------------------------------------+
| OCP_LBP                            | Parameters lower bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_UBP                            | Parameters upper bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_P_INIT                         | Parameters initial guess (np x 1)  |
+------------------------------------+------------------------------------+
| OCP_LBH                            | Point constraint lower bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_UBH                            | Point constraint upper bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_LBG                            | Lower bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+
| OCP_UBG                            | Upper bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::OCPOutput (OCP_NUM_OUT = 4)
+------------+--------------------------------------+
|    Name    |             Description              |
+============+======================================+
| OCP_X_OPT  | Optimal state trajectory.            |
+------------+--------------------------------------+
| OCP_U_OPT  | Optimal control trajectory.          |
+------------+--------------------------------------+
| OCP_XP_OPT | Optimal state derivative trajectory. |
+------------+--------------------------------------+
| OCP_P_OPT  | Optimal parameters.                  |
+------------+--------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::OCPS |
|              |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_INTEGRATO | GenericType( | An           | CasADi::Opti |
|              | R            | )            | integrator   | malControl:: |
|              |              |              | creator      | CollocationI |
|              |              |              | function     | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| integrator_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the          | CollocationI |
|              |              |              | integrator   | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver   | OT_NLPSOLVER | GenericType( | An NLPSolver | CasADi::Opti |
|              |              | )            | creator      | malControl:: |
|              |              |              | function     | CollocationI |
|              |              |              |              | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the NLP      | CollocationI |
|              |              |              | Solver       | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_gr | OT_INTEGER   | 20           |              | CasADi::OCPS |
| id_points    |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_pa | OT_INTEGER   | 0            |              | CasADi::OCPS |
| rameters     |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parallelizat | OT_STRING    | GenericType( | Passed on to | CasADi::Opti |
| ion          |              | )            | CasADi::Para | malControl:: |
|              |              |              | llelizer     | CollocationI |
|              |              |              |              | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: collocation.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::OptimalControl::Collocation::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::OptimalControl::Collocation::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::OptimalControl::Collocation::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getOption "

get an option value ";

%feature("docstring")  CasADi::OptimalControl::Collocation::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::OptimalControl::Collocation::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::OptimalControl::Collocation::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::makeUnique "";

%feature("docstring")  CasADi::OptimalControl::Collocation::Collocation "

Default constructor. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::Collocation "

Constructor. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getGuess "

Get the variables. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getVariableBounds "

Get the variables. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getConstraintBounds "

Get the constraints. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::setOptimalSolution "

Set the optimal solution. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getNLPSolver "

Access the underlying NLPSolver object. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::reportConstraints "

Prints out a human readable report about possible constraint violations,
after solving. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getReportConstraints "

Return the report as a string. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getFfcn "";

%feature("docstring")  CasADi::OptimalControl::Collocation::getMfcn "";

%feature("docstring")  CasADi::OptimalControl::Collocation::getCfcn "";

%feature("docstring")  CasADi::OptimalControl::Collocation::getRfcn "";

%feature("docstring")  CasADi::OptimalControl::Collocation::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getNumOutputs "

Get number of outputs. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::OptimalControl::Collocation::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::indexed_one_based "";

%feature("docstring")
CasADi::OptimalControl::Collocation::indexed_zero_based "";

%feature("docstring")  CasADi::OptimalControl::Collocation::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::input "

Const access input argument. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::input "

Access input argument. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::output "

Const access input argument. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::OptimalControl::Collocation::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::symbolicInputSX
"

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::clone "

Deep copy. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")
CasADi::OptimalControl::Collocation::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::OptimalControl::Collocation::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::isInit "

Is initialized? ";

%feature("docstring")  CasADi::OptimalControl::Collocation::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::OptimalControl::Collocation::isNull "

Is a null pointer? ";

%feature("docstring")
CasADi::OptimalControl::Collocation::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::OptimalControl::Collocation::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1CollocationIntegrator.xml
%feature("docstring") CasADi::CollocationIntegrator "

Collocation integrator ODE/DAE integrator based on collocation.

The method is still under development

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| collocation_ | OT_STRING    | \"radau\"      | Collocation  | CasADi::Coll |
| scheme       |              |              | scheme (rada | ocationInteg |
|              |              |              | u|legendre)  | ratorInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::Coll |
|              |              |              | ODE/DAE      | ocationInteg |
|              |              |              | residual     | ratorInterna |
|              |              |              | function in  | l            |
|              |              |              | an SX graph  |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_q     | OT_BOOLEAN   | false        | Expand the   | CasADi::Coll |
|              |              |              | quadrature   | ocationInteg |
|              |              |              | function in  | ratorInterna |
|              |              |              | an SX graph  | l            |
+--------------+--------------+--------------+--------------+--------------+
| hotstart     | OT_BOOLEAN   | true         | Initialize   | CasADi::Coll |
|              |              |              | the          | ocationInteg |
|              |              |              | trajectory   | ratorInterna |
|              |              |              | at the       | l            |
|              |              |              | previous     |              |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| implicit_sol | OT_IMPLICITF | GenericType( | An implicit  | CasADi::Coll |
| ver          | UNCTION      | )            | function     | ocationInteg |
|              |              |              | solver       | ratorInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| implicit_sol | OT_DICTIONAR | GenericType( | Options to   | CasADi::Coll |
| ver_options  | Y            | )            | be passed to | ocationInteg |
|              |              |              | the NLP      | ratorInterna |
|              |              |              | Solver       | l            |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_INTEGER   | 3            | Order of the | CasADi::Coll |
| n_order      |              |              | interpolatin | ocationInteg |
|              |              |              | g            | ratorInterna |
|              |              |              | polynomials  | l            |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fi | OT_INTEGER   | 20           | Number of    | CasADi::Coll |
| nite_element |              |              | finite       | ocationInteg |
| s            |              |              | elements     | ratorInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quadrature_s | OT_LINEARSOL | GenericType( | An linear    | CasADi::Coll |
| olver        | VER          | )            | solver to    | ocationInteg |
|              |              |              | solver the   | ratorInterna |
|              |              |              | quadrature   | l            |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| quadrature_s | OT_DICTIONAR | GenericType( | Options to   | CasADi::Coll |
| olver_option | Y            | )            | be passed to | ocationInteg |
| s            |              |              | the          | ratorInterna |
|              |              |              | quadrature   | l            |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| startup_inte | OT_INTEGRATO | GenericType( | An ODE/DAE   | CasADi::Coll |
| grator       | R            | )            | integrator   | ocationInteg |
|              |              |              | that can be  | ratorInterna |
|              |              |              | used to      | l            |
|              |              |              | generate a   |              |
|              |              |              | startup      |              |
|              |              |              | trajectory   |              |
+--------------+--------------+--------------+--------------+--------------+
| startup_inte | OT_DICTIONAR | GenericType( | Options to   | CasADi::Coll |
| grator_optio | Y            | )            | be passed to | ocationInteg |
| ns           |              |              | the startup  | ratorInterna |
|              |              |              | integrator   | l            |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: collocation_integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::CollocationIntegrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::CollocationIntegrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::CollocationIntegrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::CollocationIntegrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::CollocationIntegrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::CollocationIntegrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::CollocationIntegrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::CollocationIntegrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::CollocationIntegrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::CollocationIntegrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::CollocationIntegrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::CollocationIntegrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::CollocationIntegrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOption "

get an option value ";

%feature("docstring")  CasADi::CollocationIntegrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::CollocationIntegrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::CollocationIntegrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::CollocationIntegrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::CollocationIntegrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::CollocationIntegrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::CollocationIntegrator::makeUnique "";

%feature("docstring")  CasADi::CollocationIntegrator::CollocationIntegrator
"

Default constructor. ";

%feature("docstring")  CasADi::CollocationIntegrator::CollocationIntegrator
"

Create an integrator for explicit ODEs.

Parameters:
-----------

f:  dynamical system >Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

>Output scheme: CasADi::DAEOutput (DAE_NUM_OUT = 3)
+----------+------------------------------------------+
|   Name   |               Description                |
+==========+==========================================+
| DAE_ODE  | Right hand side of the implicit ODE      |
+----------+------------------------------------------+
| DAE_ALG  | Right hand side of algebraic equations   |
+----------+------------------------------------------+
| DAE_QUAD | Right hand side of quadratures equations |
+----------+------------------------------------------+
";

%feature("docstring")  CasADi::CollocationIntegrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::CollocationIntegrator::clone "

Clone. ";

%feature("docstring")  CasADi::CollocationIntegrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::CollocationIntegrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::CollocationIntegrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::CollocationIntegrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::CollocationIntegrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::CollocationIntegrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::CollocationIntegrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::CollocationIntegrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::CollocationIntegrator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::CollocationIntegrator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::CollocationIntegrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::CollocationIntegrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::CollocationIntegrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::CollocationIntegrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::CollocationIntegrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::CollocationIntegrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::CollocationIntegrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::CollocationIntegrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::CollocationIntegrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::CollocationIntegrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::CollocationIntegrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::CollocationIntegrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::CollocationIntegrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::CollocationIntegrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::CollocationIntegrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::CollocationIntegrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CollocationIntegrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CollocationIntegrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::CollocationIntegrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::CollocationIntegrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CollocationIntegrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::CollocationIntegrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CollocationIntegrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::CollocationIntegrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CollocationIntegrator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CollocationIntegrator::indexed_one_based "";

%feature("docstring")  CasADi::CollocationIntegrator::indexed_zero_based "";

%feature("docstring")  CasADi::CollocationIntegrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::CollocationIntegrator::input "

Access input argument. ";

%feature("docstring")  CasADi::CollocationIntegrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::CollocationIntegrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::CollocationIntegrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::CollocationIntegrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::CollocationIntegrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::CollocationIntegrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::CollocationIntegrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CollocationIntegrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CollocationIntegrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::CollocationIntegrator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::CollocationIntegrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CollocationIntegrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CollocationIntegrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CollocationIntegrator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegrator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::CollocationIntegrator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::CollocationIntegrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::CollocationIntegrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::CollocationIntegrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CollocationIntegrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::CollocationIntegrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::CollocationIntegrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::CollocationIntegrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::CollocationIntegrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::CollocationIntegrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::CollocationIntegrator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::CollocationIntegrator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::CollocationIntegrator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1CollocationIntegratorInternal.xml
%feature("docstring") CasADi::CollocationIntegratorInternal "

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| collocation_ | OT_STRING    | \"radau\"      | Collocation  | CasADi::Coll |
| scheme       |              |              | scheme (rada | ocationInteg |
|              |              |              | u|legendre)  | ratorInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::Coll |
|              |              |              | ODE/DAE      | ocationInteg |
|              |              |              | residual     | ratorInterna |
|              |              |              | function in  | l            |
|              |              |              | an SX graph  |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_q     | OT_BOOLEAN   | false        | Expand the   | CasADi::Coll |
|              |              |              | quadrature   | ocationInteg |
|              |              |              | function in  | ratorInterna |
|              |              |              | an SX graph  | l            |
+--------------+--------------+--------------+--------------+--------------+
| hotstart     | OT_BOOLEAN   | true         | Initialize   | CasADi::Coll |
|              |              |              | the          | ocationInteg |
|              |              |              | trajectory   | ratorInterna |
|              |              |              | at the       | l            |
|              |              |              | previous     |              |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| implicit_sol | OT_IMPLICITF | GenericType( | An implicit  | CasADi::Coll |
| ver          | UNCTION      | )            | function     | ocationInteg |
|              |              |              | solver       | ratorInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| implicit_sol | OT_DICTIONAR | GenericType( | Options to   | CasADi::Coll |
| ver_options  | Y            | )            | be passed to | ocationInteg |
|              |              |              | the NLP      | ratorInterna |
|              |              |              | Solver       | l            |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_INTEGER   | 3            | Order of the | CasADi::Coll |
| n_order      |              |              | interpolatin | ocationInteg |
|              |              |              | g            | ratorInterna |
|              |              |              | polynomials  | l            |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fi | OT_INTEGER   | 20           | Number of    | CasADi::Coll |
| nite_element |              |              | finite       | ocationInteg |
| s            |              |              | elements     | ratorInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quadrature_s | OT_LINEARSOL | GenericType( | An linear    | CasADi::Coll |
| olver        | VER          | )            | solver to    | ocationInteg |
|              |              |              | solver the   | ratorInterna |
|              |              |              | quadrature   | l            |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| quadrature_s | OT_DICTIONAR | GenericType( | Options to   | CasADi::Coll |
| olver_option | Y            | )            | be passed to | ocationInteg |
| s            |              |              | the          | ratorInterna |
|              |              |              | quadrature   | l            |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| startup_inte | OT_INTEGRATO | GenericType( | An ODE/DAE   | CasADi::Coll |
| grator       | R            | )            | integrator   | ocationInteg |
|              |              |              | that can be  | ratorInterna |
|              |              |              | used to      | l            |
|              |              |              | generate a   |              |
|              |              |              | startup      |              |
|              |              |              | trajectory   |              |
+--------------+--------------+--------------+--------------+--------------+
| startup_inte | OT_DICTIONAR | GenericType( | Options to   | CasADi::Coll |
| grator_optio | Y            | )            | be passed to | ocationInteg |
| ns           |              |              | the startup  | ratorInterna |
|              |              |              | integrator   | l            |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: collocation_integrator_internal.hpp ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::CollocationIntegratorInternal "

Constructor. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::clone "

Clone. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::create "

Create a new integrator. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::~CollocationIntegratorInternal "

Destructor. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::init "

Initialize stage. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::initAdj "

Initialize the adjoint problem (can only be called after the first
integration) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::evaluate "

Overload this method, since the number of derivative directions currently
aren't passed. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getJacobian "

Get the jacobian in the nonlinear iteration. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::printStats "

Print statistics. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::setStopTime "

Set the stop time of the forward integration. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::updateNumSens
"

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::spCanEvaluate
"

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getDerivative
"

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::print "

Print. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::repr "

Print. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::setNumOutputs
"

Set the number of function outputs. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getNumOutputs
"

Get the number of function outputs. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getJacSparsity
"

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::setJacSparsity
"

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::symbolicInput
"

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")
CasADi::CollocationIntegratorInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::CollocationIntegratorInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getOptionNames
"

Get a list of all option names. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getOptionType
"

Get the type of a certain option. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")
CasADi::CollocationIntegratorInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getBestMatches
"

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::CollocationIntegratorInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1OptimalControl_1_1CollocationInternal.xml
%feature("docstring") CasADi::OptimalControl::CollocationInternal "

>Input scheme: CasADi::OCPInput (OCP_NUM_IN = 17)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| OCP_T                              | Time grid: ((ns+1) x 1) - default: |
|                                    | linspace(0,t_final,ns+1)           |
+------------------------------------+------------------------------------+
| OCP_LBX                            | States lower bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_UBX                            | States upper bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_X_INIT                         | States initial guess (nx x (ns+1)) |
+------------------------------------+------------------------------------+
| OCP_LBXP                           | States deriatives lower bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_UBXP                           | States deriatives upper bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_XP_INIT                        | States deriatives initial guess    |
|                                    | (nx x (ns+1))                      |
+------------------------------------+------------------------------------+
| OCP_LBU                            | Controls lower bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_UBU                            | Controls upper bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_U_INIT                         | Controls initial guess (nu x ns)   |
+------------------------------------+------------------------------------+
| OCP_LBP                            | Parameters lower bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_UBP                            | Parameters upper bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_P_INIT                         | Parameters initial guess (np x 1)  |
+------------------------------------+------------------------------------+
| OCP_LBH                            | Point constraint lower bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_UBH                            | Point constraint upper bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_LBG                            | Lower bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+
| OCP_UBG                            | Upper bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::OCPOutput (OCP_NUM_OUT = 4)
+------------+--------------------------------------+
|    Name    |             Description              |
+============+======================================+
| OCP_X_OPT  | Optimal state trajectory.            |
+------------+--------------------------------------+
| OCP_U_OPT  | Optimal control trajectory.          |
+------------+--------------------------------------+
| OCP_XP_OPT | Optimal state derivative trajectory. |
+------------+--------------------------------------+
| OCP_P_OPT  | Optimal parameters.                  |
+------------+--------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::OCPS |
|              |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_INTEGRATO | GenericType( | An           | CasADi::Opti |
|              | R            | )            | integrator   | malControl:: |
|              |              |              | creator      | CollocationI |
|              |              |              | function     | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| integrator_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the          | CollocationI |
|              |              |              | integrator   | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver   | OT_NLPSOLVER | GenericType( | An NLPSolver | CasADi::Opti |
|              |              | )            | creator      | malControl:: |
|              |              |              | function     | CollocationI |
|              |              |              |              | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the NLP      | CollocationI |
|              |              |              | Solver       | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_gr | OT_INTEGER   | 20           |              | CasADi::OCPS |
| id_points    |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_pa | OT_INTEGER   | 0            |              | CasADi::OCPS |
| rameters     |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parallelizat | OT_STRING    | GenericType( | Passed on to | CasADi::Opti |
| ion          |              | )            | CasADi::Para | malControl:: |
|              |              |              | llelizer     | CollocationI |
|              |              |              |              | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: collocation_internal.hpp ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::CollocationInternal "";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::~CollocationInternal "";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::init "

Initialize. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::evaluate
"

Evaluate. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::getGuess
"";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getVariableBounds "";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getConstraintBounds "";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::setOptimalSolution "";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::reportConstraints "";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::jacobian
"

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::hessian
"

Hessian of output oind with respect to input iind. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::iStruct
"

Access an input. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::iStruct
"

Const access an input. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::oStruct
"

Access an output. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::oStruct
"

Const access an output. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::print "

Print. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::repr "

Print. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::verbose
"

Verbose mode? ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::fwdSeed
"

Access forward seed. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::fwdSeed
"

Const access forward seed. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::fwdSens
"

Access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::fwdSens
"

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::adjSeed
"

Access adjoint seed. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::adjSeed
"

Const access adjoint seed. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::adjSens
"

Access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::adjSens
"

Const access forward sensitivity. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::getStats
"

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::getStat
"

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::hasOption "

check if there is an option str ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::printOptions "

Print options to a stream. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getOption "

get an option value ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::dictionary "

Get the dictionary. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::unregRef
"

Unregister a weak reference. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::getCount
"

Get the reference count. ";

%feature("docstring")  CasADi::OptimalControl::CollocationInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")
CasADi::OptimalControl::CollocationInternal::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1CommChecker.xml
%feature("docstring") CasADi::CommChecker "

Is commutative.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1CommChecker_3_01OP__ATAN2_01_4.xml
%feature("docstring") CasADi::CommChecker< OP_ATAN2 > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1CommChecker_3_01OP__CONSTPOW_01_4.xml
%feature("docstring") CasADi::CommChecker< OP_CONSTPOW > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1CommChecker_3_01OP__DIV_01_4.xml
%feature("docstring") CasADi::CommChecker< OP_DIV > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1CommChecker_3_01OP__POW_01_4.xml
%feature("docstring") CasADi::CommChecker< OP_POW > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1CommChecker_3_01OP__PRINTME_01_4.xml
%feature("docstring") CasADi::CommChecker< OP_PRINTME > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1CommChecker_3_01OP__SUB_01_4.xml
%feature("docstring") CasADi::CommChecker< OP_SUB > " C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1ConstantMX.xml
%feature("docstring") CasADi::ConstantMX "

Represents an MX that is only composed of a constant.

Joel Andersson  A regular user is not supposed to work with this Node class.
This user can call MX(double) directly, or even rely on implicit
typecasting. See:  zeros , ones

C++ includes: constant_mx.hpp ";

%feature("docstring")  CasADi::ConstantMX::ConstantMX "

Constructor. ";

%feature("docstring")  CasADi::ConstantMX::clone "

Clone function. ";

%feature("docstring")  CasADi::ConstantMX::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::ConstantMX::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::ConstantMX::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::ConstantMX::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::ConstantMX::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::ConstantMX::isConstant "

Indicate that the node is constant. ";

%feature("docstring")  CasADi::ConstantMX::eval "

Symbolic evaluation (matrix graph) ";

%feature("docstring")  CasADi::ConstantMX::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::ConstantMX::repr "

Print a representation. ";

%feature("docstring")  CasADi::ConstantMX::print "

Print a description. ";

%feature("docstring")  CasADi::ConstantMX::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::ConstantMX::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::ConstantMX::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::ConstantMX::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::ConstantMX::getName "

Get the name. ";

%feature("docstring")  CasADi::ConstantMX::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::ConstantMX::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::ConstantMX::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::ConstantMX::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::ConstantMX::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::ConstantMX::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::ConstantMX::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::ConstantMX::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::ConstantMX::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::ConstantMX::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::ConstantMX::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::ConstantMX::dep "";

%feature("docstring")  CasADi::ConstantMX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::ConstantMX::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::ConstantMX::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::ConstantMX::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::ConstantMX::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::ConstantMX::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::ConstantMX::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::ConstantMX::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::ConstantMX::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::ConstantMX::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::ConstantMX::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::ConstantMX::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::ConstantMX::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::ConstantMX::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::ConstantMX::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::ConstantMX::numel "

Number of elements. ";

%feature("docstring")  CasADi::ConstantMX::size "

Get size. ";

%feature("docstring")  CasADi::ConstantMX::size1 "

Get size. ";

%feature("docstring")  CasADi::ConstantMX::size2 "

Get size. ";

%feature("docstring")  CasADi::ConstantMX::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::ConstantMX::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::ConstantMX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ConstantMX::init "

Initialize the object. ";

%feature("docstring")  CasADi::ConstantMX::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::ConstantMX::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1ConstantSX.xml
%feature("docstring") CasADi::ConstantSX "

Represents a constant SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::ConstantSX::isInteger "";

%feature("docstring")  CasADi::ConstantSX::isSymbolic "";

%feature("docstring")  CasADi::ConstantSX::hasDep "";

%feature("docstring")  CasADi::ConstantSX::isZero "";

%feature("docstring")  CasADi::ConstantSX::isOne "";

%feature("docstring")  CasADi::ConstantSX::isMinusOne "";

%feature("docstring")  CasADi::ConstantSX::isNan "";

%feature("docstring")  CasADi::ConstantSX::isInf "";

%feature("docstring")  CasADi::ConstantSX::isMinusInf "";

%feature("docstring")  CasADi::ConstantSX::getIntValue "";

%feature("docstring")  CasADi::ConstantSX::~ConstantSX "";

%feature("docstring")  CasADi::ConstantSX::getValue "

Get the value must be defined. ";

%feature("docstring")  CasADi::ConstantSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::ConstantSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::ConstantSX::getName "";

%feature("docstring")  CasADi::ConstantSX::isEqual "

comparison ";

%feature("docstring")  CasADi::ConstantSX::isEqual "

comparison ";

%feature("docstring")  CasADi::ConstantSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::ConstantSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::ConstantSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::ConstantSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::ConstantSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::ConstantSX::print "

print ";

%feature("docstring")  CasADi::ConstantSX::marked "";

%feature("docstring")  CasADi::ConstantSX::mark "";


// File: classCasADi_1_1ControlSimulator.xml
%feature("docstring") CasADi::ControlSimulator "

Piecewise Simulation class A ControlSimulator can be seen as a chain of
Simulators whereby some parameters change from one Simulator to the next.

These changing parameters can typically be interpreted as \"controls\" in
the context of dynamic optimization.

We discriminate between the following time steps: Major time-steps. These
are the time steps provided by the supplied grid. Controls are constant
inbetween major time-steps  Minor time-steps. These are time steps linearly
interpolated from one major time-step to the next. The option 'nf' regulates
how many minor time-steps are taken.  Integration time-steps. Time steps
that the supplied integrator might choose to integrate the continous
dynamics. They are not important what ControlSimulator is concerned.

np Number of parameters nu Number of controls ns The number of major grid
points, as supplied in the constructor nf The number of minor grid points
per major interval

Joris Gillis

>Input scheme: CasADi::ControlSimulatorInput (CONTROLSIMULATOR_NUM_IN = 3)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| CONTROLSIMULATOR_X0                | Differential or algebraic state at |
|                                    | t0 (dimension nx-by-1)             |
+------------------------------------+------------------------------------+
| CONTROLSIMULATOR_P                 | Parameters that are fixed over the |
|                                    | entire horizon (dimension np-by-1) |
+------------------------------------+------------------------------------+
| CONTROLSIMULATOR_U                 | Parameters that change over the    |
|                                    | integration intervals (dimension   |
|                                    | (ns-1)-by-nu)                      |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| control_endp | OT_BOOLEAN   | false        | Include a    | CasADi::Cont |
| oint         |              |              | control      | rolSimulator |
|              |              |              | value at the | Internal     |
|              |              |              | end of the   |              |
|              |              |              | simulation   |              |
|              |              |              | domain. Used |              |
|              |              |              | for interpol |              |
|              |              |              | ation.       |              |
+--------------+--------------+--------------+--------------+--------------+
| control_inte | OT_STRING    | \"none\"       | none|nearest | CasADi::Cont |
| rpolation    |              |              | |linear      | rolSimulator |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_INTEGRATO | GenericType( | An           | CasADi::Cont |
|              | R            | )            | integrator   | rolSimulator |
|              |              |              | creator      | Internal     |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| integrator_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Cont |
| ptions       | Y            | )            | be passed to | rolSimulator |
|              |              |              | the          | Internal     |
|              |              |              | integrator   |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| minor_grid   | OT_INTEGERVE | GenericType( | The local    | CasADi::Cont |
|              | CTOR         | )            | grid used on | rolSimulator |
|              |              |              | each major   | Internal     |
|              |              |              | interval,    |              |
|              |              |              | with time    |              |
|              |              |              | normalized   |              |
|              |              |              | to 1. By     |              |
|              |              |              | default,     |              |
|              |              |              | option 'nf'  |              |
|              |              |              | is used to   |              |
|              |              |              | construct a  |              |
|              |              |              | linearly     |              |
|              |              |              | spaced grid. |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nf           | OT_INTEGER   | 1            | Number of    | CasADi::Cont |
|              |              |              | minor        | rolSimulator |
|              |              |              | grained      | Internal     |
|              |              |              | integration  |              |
|              |              |              | steps per    |              |
|              |              |              | major        |              |
|              |              |              | interval.    |              |
|              |              |              | nf>0 must    |              |
|              |              |              | hold. This   |              |
|              |              |              | option is    |              |
|              |              |              | not used     |              |
|              |              |              | when         |              |
|              |              |              | 'minor_grid' |              |
|              |              |              | is provided. |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| simulator_op | OT_DICTIONAR | GenericType( | Options to   | CasADi::Cont |
| tions        | Y            | )            | be passed to | rolSimulator |
|              |              |              | the          | Internal     |
|              |              |              | simulator    |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: control_simulator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::ControlSimulator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::ControlSimulator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::ControlSimulator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::ControlSimulator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::ControlSimulator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::ControlSimulator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::ControlSimulator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::ControlSimulator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::ControlSimulator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::ControlSimulator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::ControlSimulator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::ControlSimulator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::ControlSimulator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::ControlSimulator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::ControlSimulator::getOption "

get an option value ";

%feature("docstring")  CasADi::ControlSimulator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ControlSimulator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ControlSimulator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ControlSimulator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ControlSimulator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ControlSimulator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::ControlSimulator::makeUnique "";

%feature("docstring")  CasADi::ControlSimulator::ControlSimulator "

Default constructor. ";

%feature("docstring")  CasADi::ControlSimulator::ControlSimulator "

Creates a piecewise simulator.

Parameters:
-----------

ffcn:  Continuous time dynamics, an CasADi::FX with the folowing mapping:
>Input scheme: CasADi::ControlledDAEInput (CONTROL_DAE_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| CONTROL_DAE_T                      | Global physical time. (1-by-1)     |
+------------------------------------+------------------------------------+
| CONTROL_DAE_X                      | State vector (dimension nx-by-1).  |
|                                    | Should have same amount of non-    |
|                                    | zeros as DAEOutput:DAE_RES         |
+------------------------------------+------------------------------------+
| CONTROL_DAE_P                      | Parameter vector (dimension np-    |
|                                    | by-1).                             |
+------------------------------------+------------------------------------+
| CONTROL_DAE_U                      | Control vector (dimension nu-      |
|                                    | by-1).                             |
+------------------------------------+------------------------------------+
| CONTROL_DAE_U_INTERP               | Control vector, linearly           |
|                                    | interpolated (dimension nu-by-1).  |
+------------------------------------+------------------------------------+
| CONTROL_DAE_XDOT                   | State derivative vector (dimension |
|                                    | nx-by-1). Should have same amount  |
|                                    | of non-zeros as DAEOutput:DAE_RES  |
+------------------------------------+------------------------------------+
| CONTROL_DAE_X_MAJOR                | State vector (dimension nx-by-1)   |
|                                    | at the last major time-step        |
+------------------------------------+------------------------------------+
| CONTROL_DAE_T0                     | Time at start of control interval  |
|                                    | (1-by-1)                           |
+------------------------------------+------------------------------------+
| CONTROL_DAE_TF                     | Time at end of control interval    |
|                                    | (1-by-1)                           |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::DAEOutput (DAE_NUM_OUT = 3)
+----------+------------------------------------------+
|   Name   |               Description                |
+==========+==========================================+
| DAE_ODE  | Right hand side of the implicit ODE      |
+----------+------------------------------------------+
| DAE_ALG  | Right hand side of algebraic equations   |
+----------+------------------------------------------+
| DAE_QUAD | Right hand side of quadratures equations |
+----------+------------------------------------------+

output_fcn:  output function which maps ControlledDAEInput or DAEInput to n
outputs. >Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

>Input scheme: CasADi::ControlledDAEInput (CONTROL_DAE_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| CONTROL_DAE_T                      | Global physical time. (1-by-1)     |
+------------------------------------+------------------------------------+
| CONTROL_DAE_X                      | State vector (dimension nx-by-1).  |
|                                    | Should have same amount of non-    |
|                                    | zeros as DAEOutput:DAE_RES         |
+------------------------------------+------------------------------------+
| CONTROL_DAE_P                      | Parameter vector (dimension np-    |
|                                    | by-1).                             |
+------------------------------------+------------------------------------+
| CONTROL_DAE_U                      | Control vector (dimension nu-      |
|                                    | by-1).                             |
+------------------------------------+------------------------------------+
| CONTROL_DAE_U_INTERP               | Control vector, linearly           |
|                                    | interpolated (dimension nu-by-1).  |
+------------------------------------+------------------------------------+
| CONTROL_DAE_XDOT                   | State derivative vector (dimension |
|                                    | nx-by-1). Should have same amount  |
|                                    | of non-zeros as DAEOutput:DAE_RES  |
+------------------------------------+------------------------------------+
| CONTROL_DAE_X_MAJOR                | State vector (dimension nx-by-1)   |
|                                    | at the last major time-step        |
+------------------------------------+------------------------------------+
| CONTROL_DAE_T0                     | Time at start of control interval  |
|                                    | (1-by-1)                           |
+------------------------------------+------------------------------------+
| CONTROL_DAE_TF                     | Time at end of control interval    |
|                                    | (1-by-1)                           |
+------------------------------------+------------------------------------+

grid:  the major time grid ";

%feature("docstring")  CasADi::ControlSimulator::ControlSimulator "";

%feature("docstring")  CasADi::ControlSimulator::ControlSimulator "

Output function equal to the state. ";

%feature("docstring")  CasADi::ControlSimulator::ControlSimulator "";

%feature("docstring")  CasADi::ControlSimulator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::ControlSimulator::getMinorT "

Get the (minor) time grid The length is (ns-1)*nf + 1 ";

%feature("docstring")  CasADi::ControlSimulator::getMinorU "

Get the controls, sampled on the minor timescale. Number of rows is
(ns-1)*nf. ";

%feature("docstring")  CasADi::ControlSimulator::getMajorIndex "

Get the index i such that gridminor[i] == gridmajor. ";

%feature("docstring")  CasADi::ControlSimulator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::ControlSimulator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::ControlSimulator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ControlSimulator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ControlSimulator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::ControlSimulator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::ControlSimulator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::ControlSimulator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::ControlSimulator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::ControlSimulator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::ControlSimulator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ControlSimulator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ControlSimulator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::ControlSimulator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::ControlSimulator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::ControlSimulator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::ControlSimulator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::ControlSimulator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ControlSimulator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ControlSimulator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ControlSimulator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ControlSimulator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::ControlSimulator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::ControlSimulator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ControlSimulator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::ControlSimulator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ControlSimulator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::ControlSimulator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ControlSimulator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ControlSimulator::indexed_one_based "";

%feature("docstring")  CasADi::ControlSimulator::indexed_zero_based "";

%feature("docstring")  CasADi::ControlSimulator::input "

Const access input argument. ";

%feature("docstring")  CasADi::ControlSimulator::input "

Access input argument. ";

%feature("docstring")  CasADi::ControlSimulator::output "

Const access input argument. ";

%feature("docstring")  CasADi::ControlSimulator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::ControlSimulator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ControlSimulator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ControlSimulator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ControlSimulator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ControlSimulator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ControlSimulator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ControlSimulator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::ControlSimulator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::ControlSimulator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ControlSimulator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ControlSimulator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ControlSimulator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::ControlSimulator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ControlSimulator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ControlSimulator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ControlSimulator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ControlSimulator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ControlSimulator::clone "

Deep copy. ";

%feature("docstring")  CasADi::ControlSimulator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::ControlSimulator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::ControlSimulator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::ControlSimulator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::ControlSimulator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ControlSimulator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::ControlSimulator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::ControlSimulator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::ControlSimulator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::ControlSimulator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::ControlSimulator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::ControlSimulator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::ControlSimulator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::ControlSimulator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1ControlSimulatorInternal.xml
%feature("docstring") CasADi::ControlSimulatorInternal "

ControlSimulator data storage classs.

Joel Andersson

>Input scheme: CasADi::ControlSimulatorInput (CONTROLSIMULATOR_NUM_IN = 3)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| CONTROLSIMULATOR_X0                | Differential or algebraic state at |
|                                    | t0 (dimension nx-by-1)             |
+------------------------------------+------------------------------------+
| CONTROLSIMULATOR_P                 | Parameters that are fixed over the |
|                                    | entire horizon (dimension np-by-1) |
+------------------------------------+------------------------------------+
| CONTROLSIMULATOR_U                 | Parameters that change over the    |
|                                    | integration intervals (dimension   |
|                                    | (ns-1)-by-nu)                      |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| control_endp | OT_BOOLEAN   | false        | Include a    | CasADi::Cont |
| oint         |              |              | control      | rolSimulator |
|              |              |              | value at the | Internal     |
|              |              |              | end of the   |              |
|              |              |              | simulation   |              |
|              |              |              | domain. Used |              |
|              |              |              | for interpol |              |
|              |              |              | ation.       |              |
+--------------+--------------+--------------+--------------+--------------+
| control_inte | OT_STRING    | \"none\"       | none|nearest | CasADi::Cont |
| rpolation    |              |              | |linear      | rolSimulator |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_INTEGRATO | GenericType( | An           | CasADi::Cont |
|              | R            | )            | integrator   | rolSimulator |
|              |              |              | creator      | Internal     |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| integrator_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Cont |
| ptions       | Y            | )            | be passed to | rolSimulator |
|              |              |              | the          | Internal     |
|              |              |              | integrator   |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| minor_grid   | OT_INTEGERVE | GenericType( | The local    | CasADi::Cont |
|              | CTOR         | )            | grid used on | rolSimulator |
|              |              |              | each major   | Internal     |
|              |              |              | interval,    |              |
|              |              |              | with time    |              |
|              |              |              | normalized   |              |
|              |              |              | to 1. By     |              |
|              |              |              | default,     |              |
|              |              |              | option 'nf'  |              |
|              |              |              | is used to   |              |
|              |              |              | construct a  |              |
|              |              |              | linearly     |              |
|              |              |              | spaced grid. |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nf           | OT_INTEGER   | 1            | Number of    | CasADi::Cont |
|              |              |              | minor        | rolSimulator |
|              |              |              | grained      | Internal     |
|              |              |              | integration  |              |
|              |              |              | steps per    |              |
|              |              |              | major        |              |
|              |              |              | interval.    |              |
|              |              |              | nf>0 must    |              |
|              |              |              | hold. This   |              |
|              |              |              | option is    |              |
|              |              |              | not used     |              |
|              |              |              | when         |              |
|              |              |              | 'minor_grid' |              |
|              |              |              | is provided. |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| simulator_op | OT_DICTIONAR | GenericType( | Options to   | CasADi::Cont |
| tions        | Y            | )            | be passed to | rolSimulator |
|              |              |              | the          | Internal     |
|              |              |              | simulator    |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: control_simulator_internal.hpp ";

%feature("docstring")
CasADi::ControlSimulatorInternal::ControlSimulatorInternal "

Constructor. ";

%feature("docstring")
CasADi::ControlSimulatorInternal::~ControlSimulatorInternal "

Destructor. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::clone "

Clone. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::init "

initialize ";

%feature("docstring")  CasADi::ControlSimulatorInternal::evaluate "

Integrate. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization.
";

%feature("docstring")  CasADi::ControlSimulatorInternal::getVFine "

Get the parameters that change on a coarse time scale, sampled on the fine
timescale. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getCoarseIndex "

Get the index i such that gridfine[i] == gridcoarse. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::ControlSimulatorInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::print "

Print. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::repr "

Print. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::ControlSimulatorInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ControlSimulatorInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ControlSimulatorInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::ControlSimulatorInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ControlSimulatorInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ControlSimulatorInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::ControlSimulatorInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::ControlSimulatorInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1CplexInternal.xml
%feature("docstring") CasADi::CplexInternal "

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_cpl |              | CasADi::Cple |
|              |              | ex_problem\"  |              | xInternal    |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| objsense     | OT_INTEGER   | CPX_MIN      | optimization | CasADi::Cple |
|              |              |              | sense        | xInternal    |
|              |              |              | (CPX_MIN or  |              |
|              |              |              | CPX_MAX)     |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: cplex_internal.hpp ";

%feature("docstring")  CasADi::CplexInternal::CplexInternal "";

%feature("docstring")  CasADi::CplexInternal::~CplexInternal "";

%feature("docstring")  CasADi::CplexInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::CplexInternal::setX "";

%feature("docstring")  CasADi::CplexInternal::getSol "";

%feature("docstring")  CasADi::CplexInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::CplexInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::CplexInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::CplexInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::CplexInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::CplexInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::CplexInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::CplexInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::CplexInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::CplexInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::CplexInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::CplexInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::CplexInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::CplexInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::CplexInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::CplexInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::CplexInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::CplexInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::CplexInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::CplexInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::CplexInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::CplexInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::CplexInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::CplexInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::CplexInternal::print "

Print. ";

%feature("docstring")  CasADi::CplexInternal::repr "

Print. ";

%feature("docstring")  CasADi::CplexInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::CplexInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::CplexInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::CplexInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::CplexInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::CplexInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::CplexInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::CplexInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::CplexInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::CplexInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CplexInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CplexInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::CplexInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::CplexInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CplexInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CplexInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::CplexInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::CplexInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::CplexInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::CplexInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::CplexInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::CplexInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CplexInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CplexInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CplexInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CplexInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CplexInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::CplexInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::CplexInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::CplexInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::CplexInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::CplexInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::CplexInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::CplexInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::CplexInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::CplexInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::CplexInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::CplexInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::CplexInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::CplexInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::CplexInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::CplexInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::CplexInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::CplexInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::CplexInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::CplexInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::CplexInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::CplexInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::CplexInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::CplexInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CplexInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::CplexInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1CplexMatrix.xml
%feature("docstring") CasADi::CplexMatrix "

CplexMatrix is a class used to convert CasADi matrices to CPLEX format
(similar to CSC). The class definition can be found in cplex_internal.cpp.

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

Carlo Savorgnan

C++ includes: cplex_internal.hpp ";

%feature("docstring")  CasADi::CplexMatrix::set "

reads matrix in casadi format ";

%feature("docstring")  CasADi::CplexMatrix::matval "

returns non-zero values ";

%feature("docstring")  CasADi::CplexMatrix::matbeg "

returns indices of the beginning of columns ";

%feature("docstring")  CasADi::CplexMatrix::matcnt "

returns number of entries per column ";

%feature("docstring")  CasADi::CplexMatrix::matind "

returns row numbers ";


// File: classCasADi_1_1CplexSolver.xml
%feature("docstring") CasADi::CplexSolver "

Interface to CPLEX solver.

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)   Attention! The interface is not complete yet.
Also if a quadratic term can be set with this interface, it is ignored!
Carlo Savorgnan

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_cpl |              | CasADi::Cple |
|              |              | ex_problem\"  |              | xInternal    |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| objsense     | OT_INTEGER   | CPX_MIN      | optimization | CasADi::Cple |
|              |              |              | sense        | xInternal    |
|              |              |              | (CPX_MIN or  |              |
|              |              |              | CPX_MAX)     |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: cplex_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::CplexSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::CplexSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::CplexSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::CplexSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::CplexSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::CplexSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::CplexSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::CplexSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::CplexSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::CplexSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::CplexSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::CplexSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::CplexSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::CplexSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::CplexSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::CplexSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::CplexSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::CplexSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::CplexSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::CplexSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::CplexSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::CplexSolver::makeUnique "";

%feature("docstring")  CasADi::CplexSolver::CplexSolver "

Default constructor. ";

%feature("docstring")  CasADi::CplexSolver::CplexSolver "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::CplexSolver::setIntParam "

Set CPLEX integer parameters. ";

%feature("docstring")  CasADi::CplexSolver::setDoubleParam "

Set CPLEX double parameters. ";

%feature("docstring")  CasADi::CplexSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::CplexSolver::reportConstraints "";

%feature("docstring")  CasADi::CplexSolver::getReportConstraints "";

%feature("docstring")  CasADi::CplexSolver::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::CplexSolver::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::CplexSolver::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::CplexSolver::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::CplexSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::CplexSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::CplexSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::CplexSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::CplexSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::CplexSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::CplexSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::CplexSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::CplexSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::CplexSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::CplexSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::CplexSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::CplexSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::CplexSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::CplexSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::CplexSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::CplexSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::CplexSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::CplexSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::CplexSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CplexSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CplexSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::CplexSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::CplexSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CplexSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::CplexSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::CplexSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::CplexSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CplexSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::CplexSolver::indexed_one_based "";

%feature("docstring")  CasADi::CplexSolver::indexed_zero_based "";

%feature("docstring")  CasADi::CplexSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::CplexSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::CplexSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::CplexSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::CplexSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::CplexSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::CplexSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CplexSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CplexSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::CplexSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::CplexSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::CplexSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::CplexSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CplexSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::CplexSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::CplexSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::CplexSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CplexSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CplexSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::CplexSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::CplexSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::CplexSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::CplexSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::CplexSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::CplexSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::CplexSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::CplexSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::CplexSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::CplexSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::CplexSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::CplexSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CplexSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::CplexSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::CplexSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::CplexSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::CplexSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::CplexSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::CplexSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::CplexSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::CplexSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1CRSSparsity.xml
%feature("docstring") CasADi::CRSSparsity "

General sparsity class.

The storage format is a compressed row storage (CRS) format.

In this format, the structural non-zero elements are stored in row- major
order, starting from the upper left corner of the matrix and ending in the
lower right corner.

In addition to the dimension ( size1(), size2()), (i.e. the number of rows
and the number of columns respectively), there are also two vectors of
integers:

1. \"rowind\" [length size1()+1], which contains the index to the first non-
zero element on or after the corresponding row. All the non-zero elements of
a particular i are thus the elements with index el that fulfils: rowind[i]
<= el < rowind[i+1].

2. \"col\" [same length as the number of non-zero elements, size()] The
columns for each of the structural non-zeros.

Note that with this format, it is cheap to loop over all the non-zero
elements of a particular row, constant time per elment, but expensive to
jump to access a location (i,j).

If the matrix is dense, i.e. length(col) == size1()*size2(), the format
reduces to standard dense row major format, which allows access to an
arbitrary element in constant time.

Since the object is reference counted (it inherits from CachedObject),
several matrices are allowed to share the same sparsity pattern.

The implementations of some methods of this class has been taken from the
CSparse package and modified to use STL and CasADi data structures.

See:   Matrix

Joel Andersson

C++ includes: crs_sparsity.hpp ";

/*  Size and element counting  */

%feature("docstring")  CasADi::CRSSparsity::size1 "

Get the number of rows. ";

%feature("docstring")  CasADi::CRSSparsity::size2 "

Get the number of columns. ";

%feature("docstring")  CasADi::CRSSparsity::numel "

The total number of elements, including structural zeros, i.e.
size1()*size2()

See:   size() ";

%feature("docstring")  CasADi::CRSSparsity::size "

Get the number of (structural) non-zeros.

See:   numel() ";

%feature("docstring")  CasADi::CRSSparsity::sizeU "

Number of non-zeros in the upper triangular half, i.e. the number of
elements (i,j) with j>=i. ";

%feature("docstring")  CasADi::CRSSparsity::sizeL "

Number of non-zeros in the lower triangular half, i.e. the number of
elements (i,j) with j<=i. ";

%feature("docstring")  CasADi::CRSSparsity::shape "

Get the shape. ";

%feature("docstring")  CasADi::CRSSparsity::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::CRSSparsity::makeUnique "";

%feature("docstring")  CasADi::CRSSparsity::CRSSparsity "

Default constructor. ";

%feature("docstring")  CasADi::CRSSparsity::CRSSparsity "

Construct a sparsity pattern (sparse/dense) ";

%feature("docstring")  CasADi::CRSSparsity::CRSSparsity "

Construct a sparsity pattern from vectors. ";

%feature("docstring")  CasADi::CRSSparsity::sanityCheck "

Check if the dimensions and rowind,col vectors are compatible.

Parameters:
-----------

complete:  set to true to also check elementwise throws an error as possible
result ";

%feature("docstring")  CasADi::CRSSparsity::diag "

Get the diagonal of the matrix/create a diagonal matrix (mapping will
contain the nonzero mapping) When the input is square, the diagonal elements
are returned. If the input is vector-like, a diagonal matrix is constructed
with it. ";

%feature("docstring")  CasADi::CRSSparsity::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::CRSSparsity::col "

Get a reference to col-vector, containing columns for all non-zero elements
(see class description) ";

%feature("docstring")  CasADi::CRSSparsity::col "

Get the column of a non-zero element. ";

%feature("docstring")  CasADi::CRSSparsity::rowind "

Get a reference to the rowindex of all row element (see class description)
";

%feature("docstring")  CasADi::CRSSparsity::rowind "

Get a reference to the rowindex of row i (see class description) ";

%feature("docstring")  CasADi::CRSSparsity::colRef "

Get a reference to the columns of all non-zero element (copy if not unique!)
";

%feature("docstring")  CasADi::CRSSparsity::rowindRef "

Get a reference to the rowindex of all row element (copy if not unique!) ";

%feature("docstring")  CasADi::CRSSparsity::getRow "

Get the row for each non-zero entry Together with the col-vector, this
vector gives the sparsity of the matrix in sparse triplet format, i.e. the
row and column for each non-zero elements. ";

%feature("docstring")  CasADi::CRSSparsity::resize "

Resize. ";

%feature("docstring")  CasADi::CRSSparsity::reshape "

Reshape a sparsity, order of nonzeros remains the same. ";

%feature("docstring")  CasADi::CRSSparsity::getNZ "

Get the index of a non-zero element Add the element if it does not exist and
copy object if it's not unique. ";

%feature("docstring")  CasADi::CRSSparsity::getNZ "

Get the index of an existing non-zero element return -1 if the element does
not exists. ";

%feature("docstring")  CasADi::CRSSparsity::hasNZ "

Returns true if the pattern has a non-zero at location i,j. ";

%feature("docstring")  CasADi::CRSSparsity::getNZ "

Get a set of non-zero element return -1 if the element does not exists. ";

%feature("docstring")  CasADi::CRSSparsity::getNZInplace "

Get the nonzero index for a set of elements The index vector is used both
for input and outputs and must be sorted by increasing nonzero index, i.e.
row-wise. Elements not found in the sparsity pattern are set to -1. ";

%feature("docstring")  CasADi::CRSSparsity::getSparsityCRS "

Get the sparsity in CRS format. ";

%feature("docstring")  CasADi::CRSSparsity::getSparsityCCS "

Get the sparsity in CCS format. ";

%feature("docstring")  CasADi::CRSSparsity::getSparsity "

Get the sparsity in sparse triplet format. ";

%feature("docstring")  CasADi::CRSSparsity::getSub "

Get a submatrix. ";

%feature("docstring")  CasADi::CRSSparsity::transpose "

Transpose the matrix and get the reordering of the non-zero entries, i.e.
the non-zeros of the original matrix for each non-zero of the new matrix. ";

%feature("docstring")  CasADi::CRSSparsity::transpose "

Transpose the matrix and get the reordering of the non-zero entries, i.e.
the non-zeros of the original matrix for each non-zero of the new matrix. ";

%feature("docstring")  CasADi::CRSSparsity::isTranspose "

Check if the sparsity is the transpose of another. ";

%feature("docstring")  CasADi::CRSSparsity::patternUnion "

Union of two sparsity patterns Returns the new sparsity pattern as well as a
mapping with the same length as the number of non-zero elements The mapping
matrix contains the arguments for each nonzero, the first bit indicates if
the first argument is nonzero, the second bit indicates if the second
argument is nonzero (note that none of, one of or both of the arguments can
be nonzero) ";

%feature("docstring")  CasADi::CRSSparsity::patternIntersection "

Intersection of two sparsity patterns Returns the new sparsity pattern as
well as a mapping with the same length as the number of non-zero elements
The value is 1 if the non-zero comes from the first (i.e. this) object, 2 if
it is from the second and 3 (i.e. 1 | 2) if from both. ";

%feature("docstring")  CasADi::CRSSparsity::patternProduct "

Sparsity pattern for a matrix-matrix product Returns the new sparsity
pattern as well as a mapping with the same length as the number of non-zero
elements The mapping contains a vector of the index pairs that makes up the
scalar products for each non-zero. ";

%feature("docstring")  CasADi::CRSSparsity::patternProduct "

Sparsity pattern for a matrix-matrix product No mapping. ";

%feature("docstring")  CasADi::CRSSparsity::enlarge "

Enlarge matrix Make the matrix larger by inserting empty rows and columns,
keeping the existing non-zeros.

For the matrices A to B A(m,n) length(ii)=m , length(jj)=n B(nrow,ncol)

A=enlarge(m,n,ii,jj) makes sure that

B[ii,jj] == A ";

%feature("docstring")  CasADi::CRSSparsity::enlargeRows "

Enlarge the matrix along the first dimension (i.e. insert rows) ";

%feature("docstring")  CasADi::CRSSparsity::enlargeColumns "

Enlarge the matrix along the second dimension (i.e. insert columns) ";

%feature("docstring")  CasADi::CRSSparsity::makeDense "

Make a patten dense. ";

%feature("docstring")  CasADi::CRSSparsity::erase "

Erase rows and columns Erase rows and/or columns of a matrix. ";

%feature("docstring")  CasADi::CRSSparsity::append "

Append another sparsity patten vertically. ";

%feature("docstring")  CasADi::CRSSparsity::reserve "

Reserve space. ";

%feature("docstring")  CasADi::CRSSparsity::dense "

Is dense? ";

%feature("docstring")  CasADi::CRSSparsity::diagonal "

Is diagonal? ";

%feature("docstring")  CasADi::CRSSparsity::columnsSequential "

Does the columns appear sequentially on each row (if strictly==true, then do
not allow multiple entries) ";

%feature("docstring")  CasADi::CRSSparsity::removeDuplicates "

Remove duplicate entries: The same indices will be removed from the mapping
vector, which must have the same length as the number of nonzeros. ";

%feature("docstring")  CasADi::CRSSparsity::eliminationTree "

Calculate the elimination tree See Direct Methods for Sparse Linear Systems
by Davis (2006). If the parameter ata is false, the algorithm is equivalent
to Matlab's etree(A), except that the indices are zero- based. If ata is
true, the algorithm is equivalent to Matlab's etree(A,'col'). ";

%feature("docstring")  CasADi::CRSSparsity::depthFirstSearch "

Depth-first search on the adjacency graph of the sparsity See Direct Methods
for Sparse Linear Systems by Davis (2006). ";

%feature("docstring")  CasADi::CRSSparsity::stronglyConnectedComponents "

Find the strongly connected components of a square matrix See Direct Methods
for Sparse Linear Systems by Davis (2006). ";

%feature("docstring")  CasADi::CRSSparsity::dulmageMendelsohn "

Compute the Dulmage-Mendelsohn decomposition See Direct Methods for Sparse
Linear Systems by Davis (2006). ";

%feature("docstring")  CasADi::CRSSparsity::getElements "

Get the location of all nonzero elements. ";

%feature("docstring")  CasADi::CRSSparsity::getElements "

Get the location of all nonzero elements (inplace version) ";

%feature("docstring")  CasADi::CRSSparsity::unidirectionalColoring "

Perform a unidirectional coloring: A greedy distance-2 coloring algorithm
(Algorithm 3.1 in A. H. GEBREMEDHIN, F. MANNE, A. POTHEN) ";

%feature("docstring")  CasADi::CRSSparsity::starColoring "

Perform a star coloring of a symmetric matrix: A greedy distance-2 coloring
algorithm (Algorithm 4.1 in A. H. GEBREMEDHIN, F. MANNE, A. POTHEN) Ordering
options: None (0), largest first (1) ";

%feature("docstring")  CasADi::CRSSparsity::largestFirstOrdering "

Order the rows by decreasing degree. ";

%feature("docstring")  CasADi::CRSSparsity::pmult "

Permute rows and/or columns Multiply the sparsity with a permutation matrix
from the left and/or from the right P * A * trans(P), A * trans(P) or A *
trans(P) with P defined by an index vector containing the column for each
row. As an alternative, P can be transposed (inverted). ";

%feature("docstring")  CasADi::CRSSparsity::dimString "

Get the dimension as a string. ";

%feature("docstring")  CasADi::CRSSparsity::spy "

Print a textual representation of sparsity. ";

%feature("docstring")  CasADi::CRSSparsity::spyMatlab "

Generate a script for Matlab or Octave which visualizes the sparsity using
the spy command. ";

%feature("docstring")  CasADi::CRSSparsity::set "";

%feature("docstring")  CasADi::CRSSparsity::add "";

%feature("docstring")  CasADi::CRSSparsity::clone "

Deep copy. ";

%feature("docstring")  CasADi::CRSSparsity::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::CRSSparsity::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::CRSSparsity::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::CRSSparsity::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::CRSSparsity::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CRSSparsity::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::CRSSparsity::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::CRSSparsity::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::CRSSparsity::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::CRSSparsity::isInit "

Is initialized? ";

%feature("docstring")  CasADi::CRSSparsity::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::CRSSparsity::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::CRSSparsity::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::CRSSparsity::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1CRSSparsityInternal.xml
%feature("docstring") CasADi::CRSSparsityInternal "C++ includes:
crs_sparsity_internal.hpp ";

%feature("docstring")  CasADi::CRSSparsityInternal::CRSSparsityInternal "

Construct a sparsity pattern from vectors. ";

%feature("docstring")  CasADi::CRSSparsityInternal::sanityCheck "

Check if the dimensions and rowind,col vectors are compatible. ";

%feature("docstring")  CasADi::CRSSparsityInternal::diag "

Get the diagonal of the matrix/create a diagonal matrix (mapping will
contain the nonzero mapping) ";

%feature("docstring")  CasADi::CRSSparsityInternal::eliminationTree "

Calculate the elimination tree: See cs_etree in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::depthFirstSearch "

Find strongly connected components: See cs_dfs in CSparse. ";

%feature("docstring")
CasADi::CRSSparsityInternal::stronglyConnectedComponents "

Find the strongly connected components of a square matrix: See cs_scc in
CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::transpose "

Transpose the matrix. ";

%feature("docstring")  CasADi::CRSSparsityInternal::transpose "

Transpose the matrix and get the reordering of the non-zero entries, i.e.
the non-zeros of the original matrix for each non-zero of the new matrix. ";

%feature("docstring")  CasADi::CRSSparsityInternal::isTranspose "

Check if the sparsity is the transpose of another. ";

%feature("docstring")  CasADi::CRSSparsityInternal::breadthFirstSearch "

Breadth-first search for coarse decomposition: see cs_bfs in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::drop "

drop entries for which fkeep(A(i,j)) is false; return nz if OK, else -1: :
see cs_fkeep in CSparse ";

%feature("docstring")  CasADi::CRSSparsityInternal::dulmageMendelsohn "

Compute the Dulmage-Mendelsohn decomposition : see cs_dmperm in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::maxTransversal "

Compute the maximum transversal (maximum matching): see cs_maxtrans in
CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::augmentingPath "

Find an augmenting path: see cs_augment in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::permute "

C = A(p,q) where p and q are permutations of 0..m-1 and 0..n-1.: see
cs_permute in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::vcount "

compute nnz(V) = S->lnz, S->pinv, S->leftmost, S->m2 from A and S->parent:
See cs_vcount in CSparse ";

%feature("docstring")  CasADi::CRSSparsityInternal::init_ata "

column counts of LL'=A or LL'=A'A, given parent & post ordering: see
init_ata in CSparse ";

%feature("docstring")  CasADi::CRSSparsityInternal::counts "

Column counts: See cs_counts in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::approximateMinimumDegree
"

Approximate minimal degree, p = amd(A+A') if symmetric is true, or amd(A'A)
otherwise. order 0:natural, 1:Chol, 2:LU, 3:QR. See cs_amd in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::prefactorize "

symbolic ordering and analysis for QR or LU: See cs_sqr in CSparse ";

%feature("docstring")  CasADi::CRSSparsityInternal::multiply "

C = A*B: See cs_multiply in CSparse. ";

%feature("docstring")  CasADi::CRSSparsityInternal::scatter "

x = x + beta * A(:,j), where x is a dense vector and A(:,j) is sparse: See
cs_scatter in CSparse ";

%feature("docstring")  CasADi::CRSSparsityInternal::getRow "

Get the row for each nonzero. ";

%feature("docstring")  CasADi::CRSSparsityInternal::resize "

Resize. ";

%feature("docstring")  CasADi::CRSSparsityInternal::reshape "

Reshape a sparsity, order of nonzeros remains the same. ";

%feature("docstring")  CasADi::CRSSparsityInternal::size "

Pattern union.

Number of structural non-zeros ";

%feature("docstring")  CasADi::CRSSparsityInternal::numel "

Number of elements. ";

%feature("docstring")  CasADi::CRSSparsityInternal::sizeU "

Number of non-zeros in the upper triangular half. ";

%feature("docstring")  CasADi::CRSSparsityInternal::sizeL "

Number of non-zeros in the lower triangular half. ";

%feature("docstring")  CasADi::CRSSparsityInternal::shape "

Shape. ";

%feature("docstring")  CasADi::CRSSparsityInternal::dense "

Is dense? ";

%feature("docstring")  CasADi::CRSSparsityInternal::diagonal "

Is diagonal? ";

%feature("docstring")  CasADi::CRSSparsityInternal::dimString "

Get the dimension as a string. ";

%feature("docstring")  CasADi::CRSSparsityInternal::patternProduct "

Sparsity pattern for a matrix-matrix product (details in public class) ";

%feature("docstring")  CasADi::CRSSparsityInternal::patternProduct "

Sparsity pattern for a matrix-matrix product (details in public class) ";

%feature("docstring")  CasADi::CRSSparsityInternal::patternUnion "

Union of two sparsity patterns. ";

%feature("docstring")  CasADi::CRSSparsityInternal::isEqual "

Check if two sparsity patterns are the same. ";

%feature("docstring")  CasADi::CRSSparsityInternal::enlargeRows "

Enlarge the matrix along the first dimension (i.e. insert rows) ";

%feature("docstring")  CasADi::CRSSparsityInternal::enlargeColumns "

Enlarge the matrix along the second dimension (i.e. insert columns) ";

%feature("docstring")  CasADi::CRSSparsityInternal::makeDense "

Make a patten dense. ";

%feature("docstring")  CasADi::CRSSparsityInternal::erase "

Erase rows and/or columns - does bounds checking. ";

%feature("docstring")  CasADi::CRSSparsityInternal::append "

Append another sparsity patten vertically. ";

%feature("docstring")  CasADi::CRSSparsityInternal::reserve "

Reserve space. ";

%feature("docstring")  CasADi::CRSSparsityInternal::getSub "

Get a submatrix Does bounds checking ii and jj are not required to be
monotonous. ";

%feature("docstring")  CasADi::CRSSparsityInternal::getNZ "

Get the index of an existing non-zero element. ";

%feature("docstring")  CasADi::CRSSparsityInternal::getNZ "

Get a set of non-zero element - does bounds checking. ";

%feature("docstring")  CasADi::CRSSparsityInternal::getNZInplace "

Get the nonzero index for a set of elements (see descripion in public class)
";

%feature("docstring")  CasADi::CRSSparsityInternal::columnsSequential "

Does the columns appear sequentially on each row. ";

%feature("docstring")  CasADi::CRSSparsityInternal::removeDuplicates "

Remove duplicate entries: The same indices will be removed from the mapping
vector, which must have the same length as the number of nonzeros. ";

%feature("docstring")  CasADi::CRSSparsityInternal::getElements "

Get element index for each nonzero. ";

%feature("docstring")  CasADi::CRSSparsityInternal::clone "

Clone. ";

%feature("docstring")  CasADi::CRSSparsityInternal::repr "

Print representation. ";

%feature("docstring")  CasADi::CRSSparsityInternal::print "

Print description. ";

%feature("docstring")  CasADi::CRSSparsityInternal::unidirectionalColoring "

Perform a unidirectional coloring: A greedy distance-2 coloring algorithm
(Algorithm 3.1 in A. H. GEBREMEDHIN, F. MANNE, A. POTHEN) ";

%feature("docstring")  CasADi::CRSSparsityInternal::starColoring "

Perform a star coloring of a symmetric matrix: A greedy distance-2 coloring
algorithm (Algorithm 4.1 in A. H. GEBREMEDHIN, F. MANNE, A. POTHEN) ";

%feature("docstring")  CasADi::CRSSparsityInternal::largestFirstOrdering "

Order the rows by decreasing degree. ";

%feature("docstring")  CasADi::CRSSparsityInternal::pmult "

Permute rows and/or columns. ";

%feature("docstring")  CasADi::CRSSparsityInternal::spyMatlab "

Generate a script for Matlab or Octave which visualizes the sparsity using
the spy command. ";

%feature("docstring")  CasADi::CRSSparsityInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::CRSSparsityInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::CRSSparsityInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::CRSSparsityInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::CRSSparsityInternal::init "

Initialize the object. ";

%feature("docstring")  CasADi::CRSSparsityInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::CRSSparsityInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1CSparse.xml
%feature("docstring") CasADi::Interfaces::CSparse "

LinearSolver with CSparse Interface.

Solves the linear system A.x = b for x

CSparse is an CasADi::FX mapping from 2 inputs [ A (matrix),b (vector)] to
one output [x (vector)].

The usual procedure to use CSparse is:  init()

set the first input (A)

prepare()

set the second input (b)

solve()

Repeat steps 4 and 5 to work with other b vectors.

The method evaluate() combines the prepare() and solve() step and is
therefore more expensive if A is invariant.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: csparse.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::CSparse::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::CSparse::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::CSparse::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::CSparse::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::CSparse::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::CSparse::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::CSparse::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::CSparse::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::CSparse::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::CSparse::makeUnique "";

%feature("docstring")  CasADi::Interfaces::CSparse::CSparse "

Default (empty) constructor. ";

%feature("docstring")  CasADi::Interfaces::CSparse::CSparse "

Create a linear solver given a sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::CSparse::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setSparsity "

Set sparsity (before initialization) ";

%feature("docstring")  CasADi::Interfaces::CSparse::prepare "

Factorize the matrix. ";

%feature("docstring")  CasADi::Interfaces::CSparse::solve "

Solve the system of equations, internal vector. ";

%feature("docstring")  CasADi::Interfaces::CSparse::solve "

Solve the factorized system of equations. ";

%feature("docstring")  CasADi::Interfaces::CSparse::prepared "

Check if prepared. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Interfaces::CSparse::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::CSparse::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::CSparse::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::CSparse::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::CSparse::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::CSparse::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::CSparse::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::CSparse::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::CSparse::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::CSparse::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::CSparse::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::CSparse::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::CSparse::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::CSparse::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::CSparse::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::CSparse::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::CSparse::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::CSparse::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::CSparse::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::CSparse::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::CSparse::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::CSparse::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::CSparse::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::CSparse::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::CSparse::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::CSparse::indexed_one_based "";

%feature("docstring")  CasADi::Interfaces::CSparse::indexed_zero_based "";

%feature("docstring")  CasADi::Interfaces::CSparse::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparse::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparse::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparse::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::CSparse::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::CSparse::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::CSparse::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparse::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparse::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::CSparse::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::CSparse::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparse::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::CSparse::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::CSparse::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::CSparse::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::CSparse::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::CSparse::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparse::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::CSparse::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::CSparse::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::CSparse::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::CSparse::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::CSparse::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::CSparse::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::CSparse::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::CSparse::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::CSparse::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::CSparse::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::CSparse::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::CSparse::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::CSparse::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::CSparse::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Interfaces_1_1CSparseInternal.xml
%feature("docstring") CasADi::Interfaces::CSparseInternal "

Solves the linear system A.x = b for x

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: csparse_internal.hpp ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::CSparseInternal
"";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::CSparseInternal
"";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::~CSparseInternal
"";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::prepare "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::solve "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::solve "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::nrow "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::ncol "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::nnz "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::col "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::rowind "";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::jacobian_switch
"

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::numeric_jacobian
"

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::repr "

Print. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::CSparseInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::CSparseInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::symbolicInputSX
"

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::CSparseInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Interfaces::CSparseInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::deepCopyMembers
"

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::CSparseInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Sundials_1_1CVodesIntegrator.xml
%feature("docstring") CasADi::Sundials::CVodesIntegrator "

Function that integrates the ODE:

Solves the following initial value problem (IVP):

xdot == f(t,x,p)   from t0 to tf      given the initial condition x(t0) ==
x0;

A call to evaluate will integrate to the end.

You can retrieve the entire state trajectory as follows, after the evaluate
call: Call reset. Then call integrate(t_i) and getOuput for a series of
times t_i.

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_iterat | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| ive_solver   |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_linear | OT_STRING    | \"dense\"      | (dense|bande | CasADi::Sund |
| _solver      |              |              | d|iterative) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_lower_ | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_max_kr | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
| ylov         |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_pretyp | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
| e            |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_upper_ | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| disable_inte | OT_BOOLEAN   | false        | Disable      | CasADi::Sund |
| rnal_warning |              |              | CVodes       | ials::CVodes |
| s            |              |              | internal     | Internal     |
|              |              |              | warning      |              |
|              |              |              | messages     |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | false        |              | CasADi::Sund |
| an           |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| finite_diffe | OT_BOOLEAN   | false        | use finite   | CasADi::Sund |
| rence_fsens  |              |              | differences  | ials::Sundia |
|              |              |              | to           | lsInternal   |
|              |              |              | approximate  |              |
|              |              |              | the forward  |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
|              |              |              | (if AD is    |              |
|              |              |              | not          |              |
|              |              |              | available)   |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_all_at | OT_BOOLEAN   | true         | calculate    | CasADi::Sund |
| _once        |              |              | all right    | ials::CVodes |
|              |              |              | hand sides   | Internal     |
|              |              |              | of the       |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations at |              |
|              |              |              | once         |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_err_co | OT_BOOLEAN   | true         | include the  | CasADi::Sund |
| n            |              |              | forward sens | ials::Sundia |
|              |              |              | itivities in | lsInternal   |
|              |              |              | all error    |              |
|              |              |              | controls     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_scalin | OT_REALVECTO |              | scaling      | CasADi::Sund |
| g_factors    | R            |              | factor for   | ials::Sundia |
|              |              |              | the          | lsInternal   |
|              |              |              | components   |              |
|              |              |              | if finite    |              |
|              |              |              | differences  |              |
|              |              |              | is used      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_sensit | OT_INTEGERVE |              | specifies    | CasADi::Sund |
| iviy_paramet | CTOR         |              | which        | ials::Sundia |
| ers          |              |              | components   | lsInternal   |
|              |              |              | will be used |              |
|              |              |              | when         |              |
|              |              |              | estimating   |              |
|              |              |              | the          |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_STRING    | \"hermite\"    | type of inte | CasADi::Sund |
| n_type       |              |              | rpolation    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint sens |              |
|              |              |              | itivities (h |              |
|              |              |              | ermite|polyn |              |
|              |              |              | omial)       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| lver         |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_multi | OT_STRING    | \"bdf\"        | bdf|adams    | CasADi::Sund |
| step_method  |              |              |              | ials::CVodes |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      | (user_define | CasADi::Sund |
| r            |              |              | d|dense|band | ials::Sundia |
|              |              |              | ed|iterative | lsInternal   |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | An linear    | CasADi::Sund |
| r_creator    | VER          | )            | solver       | ials::Sundia |
|              |              |              | creator      | lsInternal   |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Sundia |
|              |              |              | the linear   | lsInternal   |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
|              |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| max_multiste | OT_INTEGER   | 5            |              | CasADi::Sund |
| p_order      |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_num_step | OT_INTEGER   | 10000        | maximum      | CasADi::Sund |
| s            |              |              | number of    | ials::Sundia |
|              |              |              | steps        | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Sundial |
|              |              |              | uts)  (res|r | s::CVodesInt |
|              |              |              | esB|resQB|re | ernal        |
|              |              |              | set)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nonlinear_so | OT_STRING    | \"newton\"     | (newton|func | CasADi::Sund |
| lver_iterati |              |              | tional)      | ials::CVodes |
| on           |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quad_err_con | OT_BOOLEAN   | false        | should the   | CasADi::Sund |
|              |              |              | quadratures  | ials::Sundia |
|              |              |              | affect the   | lsInternal   |
|              |              |              | step size    |              |
|              |              |              | control      |              |
+--------------+--------------+--------------+--------------+--------------+
| reltol       | OT_REAL      | 0.000        | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| sensitivity_ | OT_STRING    | \"simultaneou | (simultaneou | CasADi::Sund |
| method       |              | s\"           | s|staggered) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| steps_per_ch | OT_INTEGER   | 20           | number of    | CasADi::Sund |
| eckpoint     |              |              | steps        | ials::Sundia |
|              |              |              | between two  | lsInternal   |
|              |              |              | consecutive  |              |
|              |              |              | checkpoints  |              |
+--------------+--------------+--------------+--------------+--------------+
| stop_at_end  | OT_BOOLEAN   | false        | Stop the     | CasADi::Sund |
|              |              |              | integrator   | ials::Sundia |
|              |              |              | at the end   | lsInternal   |
|              |              |              | of the       |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Sundia |
|              |              |              | solver       | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+----------------------------------+
|   Id    |             Used in              |
+=========+==================================+
| inputs  | CasADi::FXInternal               |
+---------+----------------------------------+
| outputs | CasADi::FXInternal               |
+---------+----------------------------------+
| res     | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+
| resB    | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+
| resQB   | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+
| reset   | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+

C++ includes: cvodes_integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::makeUnique "";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::CVodesIntegrator
"

Default constructor. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::CVodesIntegrator
"

Create an integrator for explicit ODEs.

Parameters:
-----------

f:  dynamical system >Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

>Output scheme: CasADi::DAEOutput (DAE_NUM_OUT = 3)
+----------+------------------------------------------+
|   Name   |               Description                |
+==========+==========================================+
| DAE_ODE  | Right hand side of the implicit ODE      |
+----------+------------------------------------------+
| DAE_ALG  | Right hand side of algebraic equations   |
+----------+------------------------------------------+
| DAE_QUAD | Right hand side of quadratures equations |
+----------+------------------------------------------+
";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getJacobian "

Get the Jacobian. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setInitialTime "

Set initial time. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setFinalTime "

Set final time. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setStopTime "

Set a stop time for the forward integration. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::clone "

Clone. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")
CasADi::Sundials::CVodesIntegrator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Sundials::CVodesIntegrator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::indexed_one_based
"";

%feature("docstring")
CasADi::Sundials::CVodesIntegrator::indexed_zero_based "";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Sundials::CVodesIntegrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::assignNodeNoCount
"

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getRepresentation
"

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Sundials::CVodesIntegrator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Sundials_1_1CVodesInternal.xml
%feature("docstring") CasADi::Sundials::CVodesInternal "

Solves the following initial value problem (IVP):

xdot == f(t,x,p)   from t0 to tf      given the initial condition x(t0) ==
x0;

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_iterat | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| ive_solver   |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_linear | OT_STRING    | \"dense\"      | (dense|bande | CasADi::Sund |
| _solver      |              |              | d|iterative) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_lower_ | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_max_kr | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
| ylov         |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_pretyp | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
| e            |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_upper_ | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| disable_inte | OT_BOOLEAN   | false        | Disable      | CasADi::Sund |
| rnal_warning |              |              | CVodes       | ials::CVodes |
| s            |              |              | internal     | Internal     |
|              |              |              | warning      |              |
|              |              |              | messages     |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | false        |              | CasADi::Sund |
| an           |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| finite_diffe | OT_BOOLEAN   | false        | use finite   | CasADi::Sund |
| rence_fsens  |              |              | differences  | ials::Sundia |
|              |              |              | to           | lsInternal   |
|              |              |              | approximate  |              |
|              |              |              | the forward  |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
|              |              |              | (if AD is    |              |
|              |              |              | not          |              |
|              |              |              | available)   |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_all_at | OT_BOOLEAN   | true         | calculate    | CasADi::Sund |
| _once        |              |              | all right    | ials::CVodes |
|              |              |              | hand sides   | Internal     |
|              |              |              | of the       |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations at |              |
|              |              |              | once         |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_err_co | OT_BOOLEAN   | true         | include the  | CasADi::Sund |
| n            |              |              | forward sens | ials::Sundia |
|              |              |              | itivities in | lsInternal   |
|              |              |              | all error    |              |
|              |              |              | controls     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_scalin | OT_REALVECTO |              | scaling      | CasADi::Sund |
| g_factors    | R            |              | factor for   | ials::Sundia |
|              |              |              | the          | lsInternal   |
|              |              |              | components   |              |
|              |              |              | if finite    |              |
|              |              |              | differences  |              |
|              |              |              | is used      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_sensit | OT_INTEGERVE |              | specifies    | CasADi::Sund |
| iviy_paramet | CTOR         |              | which        | ials::Sundia |
| ers          |              |              | components   | lsInternal   |
|              |              |              | will be used |              |
|              |              |              | when         |              |
|              |              |              | estimating   |              |
|              |              |              | the          |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_STRING    | \"hermite\"    | type of inte | CasADi::Sund |
| n_type       |              |              | rpolation    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint sens |              |
|              |              |              | itivities (h |              |
|              |              |              | ermite|polyn |              |
|              |              |              | omial)       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| lver         |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_multi | OT_STRING    | \"bdf\"        | bdf|adams    | CasADi::Sund |
| step_method  |              |              |              | ials::CVodes |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      | (user_define | CasADi::Sund |
| r            |              |              | d|dense|band | ials::Sundia |
|              |              |              | ed|iterative | lsInternal   |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | An linear    | CasADi::Sund |
| r_creator    | VER          | )            | solver       | ials::Sundia |
|              |              |              | creator      | lsInternal   |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Sundia |
|              |              |              | the linear   | lsInternal   |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
|              |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| max_multiste | OT_INTEGER   | 5            |              | CasADi::Sund |
| p_order      |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_num_step | OT_INTEGER   | 10000        | maximum      | CasADi::Sund |
| s            |              |              | number of    | ials::Sundia |
|              |              |              | steps        | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Sundial |
|              |              |              | uts)  (res|r | s::CVodesInt |
|              |              |              | esB|resQB|re | ernal        |
|              |              |              | set)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nonlinear_so | OT_STRING    | \"newton\"     | (newton|func | CasADi::Sund |
| lver_iterati |              |              | tional)      | ials::CVodes |
| on           |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quad_err_con | OT_BOOLEAN   | false        | should the   | CasADi::Sund |
|              |              |              | quadratures  | ials::Sundia |
|              |              |              | affect the   | lsInternal   |
|              |              |              | step size    |              |
|              |              |              | control      |              |
+--------------+--------------+--------------+--------------+--------------+
| reltol       | OT_REAL      | 0.000        | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| sensitivity_ | OT_STRING    | \"simultaneou | (simultaneou | CasADi::Sund |
| method       |              | s\"           | s|staggered) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| steps_per_ch | OT_INTEGER   | 20           | number of    | CasADi::Sund |
| eckpoint     |              |              | steps        | ials::Sundia |
|              |              |              | between two  | lsInternal   |
|              |              |              | consecutive  |              |
|              |              |              | checkpoints  |              |
+--------------+--------------+--------------+--------------+--------------+
| stop_at_end  | OT_BOOLEAN   | false        | Stop the     | CasADi::Sund |
|              |              |              | integrator   | ials::Sundia |
|              |              |              | at the end   | lsInternal   |
|              |              |              | of the       |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Sundia |
|              |              |              | solver       | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+----------------------------------+
|   Id    |             Used in              |
+=========+==================================+
| inputs  | CasADi::FXInternal               |
+---------+----------------------------------+
| outputs | CasADi::FXInternal               |
+---------+----------------------------------+
| res     | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+
| resB    | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+
| resQB   | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+
| reset   | CasADi::Sundials::CVodesInternal |
+---------+----------------------------------+

C++ includes: cvodes_internal.hpp ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::CVodesInternal "

Constructor. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::clone "

Clone. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::create "

Create a new integrator. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::~CVodesInternal "

Destructor. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::freeCVodes "

Free all CVodes memory. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::init "

Initialize stage. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization.
";

%feature("docstring")  CasADi::Sundials::CVodesInternal::initAdj "

Initialize the adjoint problem (can only be called after the first
integration) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setStopTime "

Set the stop time of the forward integration. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getJacobian "

Get the jacobian in the nonlinear iteration The result is an CasADi::FX
mapping from CasADi::Sundials::MInput to CasADi::Sundials::MOutput. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::jac "

Create an integrator which integrates the ODE/DAE augmented with the forward
sensitivity equations. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setInitialTime "

Set initial time (to be removed) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setFinalTime "

Set final time (to be removed) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::evaluate "

evaluate ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::print "

Print. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::repr "

Print. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::CVodesInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::CVodesInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Sundials::CVodesInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Sundials::CVodesInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Densification.xml
%feature("docstring") CasADi::Densification "

Make an expression dense.

Joel Andersson

C++ includes: densification.hpp ";

%feature("docstring")  CasADi::Densification::Densification "

Constructor. ";

%feature("docstring")  CasADi::Densification::~Densification "

Destructor. ";

%feature("docstring")  CasADi::Densification::clone "

Clone function. ";

%feature("docstring")  CasADi::Densification::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::Densification::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::Densification::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::Densification::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::Densification::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::Densification::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Densification::repr "

Print a representation. ";

%feature("docstring")  CasADi::Densification::print "

Print a description. ";

%feature("docstring")  CasADi::Densification::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::Densification::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::Densification::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::Densification::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::Densification::getName "

Get the name. ";

%feature("docstring")  CasADi::Densification::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::Densification::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::Densification::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::Densification::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::Densification::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::Densification::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::Densification::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::Densification::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::Densification::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::Densification::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::Densification::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::Densification::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::Densification::dep "";

%feature("docstring")  CasADi::Densification::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::Densification::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::Densification::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::Densification::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::Densification::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::Densification::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::Densification::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::Densification::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::Densification::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::Densification::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::Densification::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::Densification::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::Densification::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::Densification::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::Densification::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::Densification::numel "

Number of elements. ";

%feature("docstring")  CasADi::Densification::size "

Get size. ";

%feature("docstring")  CasADi::Densification::size1 "

Get size. ";

%feature("docstring")  CasADi::Densification::size2 "

Get size. ";

%feature("docstring")  CasADi::Densification::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Densification::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Densification::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Densification::init "

Initialize the object. ";

%feature("docstring")  CasADi::Densification::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Densification::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1DerBinaryOpertion.xml
%feature("docstring") CasADi::DerBinaryOpertion "

Calculate function and derivative.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1DivBinaryOperation.xml
%feature("docstring") CasADi::DivBinaryOperation "C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1OptimalControl_1_1EquationSorter.xml
%feature("docstring") CasADi::OptimalControl::EquationSorter "";

%feature("docstring")
CasADi::OptimalControl::EquationSorter::EquationSorter "";

%feature("docstring")
CasADi::OptimalControl::EquationSorter::~EquationSorter "";

%feature("docstring")  CasADi::OptimalControl::EquationSorter::tarjan "";

%feature("docstring")  CasADi::OptimalControl::EquationSorter::strongconnect
"";

%feature("docstring")  CasADi::OptimalControl::EquationSorter::tarjanCellier
"";

%feature("docstring")  CasADi::OptimalControl::EquationSorter::colorRed "";

%feature("docstring")  CasADi::OptimalControl::EquationSorter::colorBlue "";

%feature("docstring")  CasADi::OptimalControl::EquationSorter::decrease "";


// File: classCasADi_1_1EvaluationMX.xml
%feature("docstring") CasADi::EvaluationMX "

Joel Andersson

C++ includes: evaluation_mx.hpp ";

%feature("docstring")  CasADi::EvaluationMX::EvaluationMX "

Constructor. ";

%feature("docstring")  CasADi::EvaluationMX::~EvaluationMX "

Destructor. ";

%feature("docstring")  CasADi::EvaluationMX::clone "

Clone function. ";

%feature("docstring")  CasADi::EvaluationMX::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::EvaluationMX::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::EvaluationMX::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::EvaluationMX::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::EvaluationMX::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::EvaluationMX::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::EvaluationMX::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::EvaluationMX::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::EvaluationMX::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::EvaluationMX::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::EvaluationMX::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::EvaluationMX::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::EvaluationMX::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::EvaluationMX::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::EvaluationMX::repr "

Print a representation. ";

%feature("docstring")  CasADi::EvaluationMX::print "

Print a description. ";

%feature("docstring")  CasADi::EvaluationMX::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::EvaluationMX::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::EvaluationMX::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::EvaluationMX::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::EvaluationMX::getName "

Get the name. ";

%feature("docstring")  CasADi::EvaluationMX::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::EvaluationMX::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::EvaluationMX::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::EvaluationMX::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::EvaluationMX::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::EvaluationMX::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::EvaluationMX::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::EvaluationMX::dep "";

%feature("docstring")  CasADi::EvaluationMX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::EvaluationMX::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::EvaluationMX::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::EvaluationMX::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::EvaluationMX::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::EvaluationMX::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::EvaluationMX::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::EvaluationMX::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::EvaluationMX::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::EvaluationMX::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::EvaluationMX::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::EvaluationMX::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::EvaluationMX::numel "

Number of elements. ";

%feature("docstring")  CasADi::EvaluationMX::size "

Get size. ";

%feature("docstring")  CasADi::EvaluationMX::size1 "

Get size. ";

%feature("docstring")  CasADi::EvaluationMX::size2 "

Get size. ";

%feature("docstring")  CasADi::EvaluationMX::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::EvaluationMX::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::EvaluationMX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::EvaluationMX::init "

Initialize the object. ";

%feature("docstring")  CasADi::EvaluationMX::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::EvaluationMX::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1EvaluationSX.xml
%feature("docstring") CasADi::EvaluationSX "

Represents a function call.

Joel Andersson

C++ includes: evaluation_sx.hpp ";

%feature("docstring")  CasADi::EvaluationSX::isConstant "

check properties of a node ";

%feature("docstring")  CasADi::EvaluationSX::isInteger "";

%feature("docstring")  CasADi::EvaluationSX::isSymbolic "";

%feature("docstring")  CasADi::EvaluationSX::isZero "";

%feature("docstring")  CasADi::EvaluationSX::isOne "";

%feature("docstring")  CasADi::EvaluationSX::isMinusOne "";

%feature("docstring")  CasADi::EvaluationSX::isNan "";

%feature("docstring")  CasADi::EvaluationSX::isInf "";

%feature("docstring")  CasADi::EvaluationSX::isMinusInf "";

%feature("docstring")  CasADi::EvaluationSX::getValue "

Get value of a constant node. ";

%feature("docstring")  CasADi::EvaluationSX::getIntValue "";

%feature("docstring")  CasADi::EvaluationSX::~EvaluationSX "

Destructor This might need fixing to avoid stack overflow due to recursive
calling. ";

%feature("docstring")  CasADi::EvaluationSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::EvaluationSX::hasDep "";

%feature("docstring")  CasADi::EvaluationSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::EvaluationSX::dep "

get the reference of a dependency ";

%feature("docstring")  CasADi::EvaluationSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::EvaluationSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::EvaluationSX::print "

Print the expression (recursively with a maximum number of levels) ";

%feature("docstring")  CasADi::EvaluationSX::getName "";

%feature("docstring")  CasADi::EvaluationSX::isEqual "

comparison ";

%feature("docstring")  CasADi::EvaluationSX::isEqual "

comparison ";

%feature("docstring")  CasADi::EvaluationSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::EvaluationSX::print "

print ";

%feature("docstring")  CasADi::EvaluationSX::marked "";

%feature("docstring")  CasADi::EvaluationSX::mark "";


// File: classCasADi_1_1ExternalFunction.xml
%feature("docstring") CasADi::ExternalFunction "

Interface for a function that is not implemented by CasADi symbolics.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: external_function.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::ExternalFunction::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::ExternalFunction::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::ExternalFunction::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::ExternalFunction::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::ExternalFunction::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::ExternalFunction::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::ExternalFunction::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::ExternalFunction::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::ExternalFunction::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::ExternalFunction::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::ExternalFunction::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::ExternalFunction::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::ExternalFunction::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::ExternalFunction::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::ExternalFunction::getOption "

get an option value ";

%feature("docstring")  CasADi::ExternalFunction::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ExternalFunction::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ExternalFunction::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ExternalFunction::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ExternalFunction::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ExternalFunction::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::ExternalFunction::makeUnique "";

%feature("docstring")  CasADi::ExternalFunction::ExternalFunction "

CONSTRUCTORS:

default constructor ";

%feature("docstring")  CasADi::ExternalFunction::ExternalFunction "

Create an empty function. ";

%feature("docstring")  CasADi::ExternalFunction::checkNode "

Check if the pointer points towards a valid object. ";

%feature("docstring")  CasADi::ExternalFunction::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::ExternalFunction::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::ExternalFunction::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ExternalFunction::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ExternalFunction::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::ExternalFunction::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::ExternalFunction::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::ExternalFunction::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::ExternalFunction::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::ExternalFunction::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::ExternalFunction::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ExternalFunction::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ExternalFunction::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::ExternalFunction::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::ExternalFunction::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::ExternalFunction::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::ExternalFunction::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::ExternalFunction::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ExternalFunction::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ExternalFunction::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ExternalFunction::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ExternalFunction::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::ExternalFunction::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::ExternalFunction::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ExternalFunction::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::ExternalFunction::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ExternalFunction::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::ExternalFunction::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ExternalFunction::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ExternalFunction::indexed_one_based "";

%feature("docstring")  CasADi::ExternalFunction::indexed_zero_based "";

%feature("docstring")  CasADi::ExternalFunction::input "

Const access input argument. ";

%feature("docstring")  CasADi::ExternalFunction::input "

Access input argument. ";

%feature("docstring")  CasADi::ExternalFunction::output "

Const access input argument. ";

%feature("docstring")  CasADi::ExternalFunction::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::ExternalFunction::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ExternalFunction::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ExternalFunction::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunction::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunction::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ExternalFunction::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ExternalFunction::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunction::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunction::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ExternalFunction::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ExternalFunction::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::ExternalFunction::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::ExternalFunction::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ExternalFunction::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ExternalFunction::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ExternalFunction::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::ExternalFunction::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ExternalFunction::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ExternalFunction::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ExternalFunction::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ExternalFunction::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ExternalFunction::clone "

Deep copy. ";

%feature("docstring")  CasADi::ExternalFunction::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::ExternalFunction::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::ExternalFunction::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::ExternalFunction::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::ExternalFunction::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ExternalFunction::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::ExternalFunction::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::ExternalFunction::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::ExternalFunction::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::ExternalFunction::isInit "

Is initialized? ";

%feature("docstring")  CasADi::ExternalFunction::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::ExternalFunction::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::ExternalFunction::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::ExternalFunction::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1ExternalFunctionInternal.xml
%feature("docstring") CasADi::ExternalFunctionInternal "

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: external_function_internal.hpp ";

%feature("docstring")
CasADi::ExternalFunctionInternal::ExternalFunctionInternal "

constructor ";

%feature("docstring")  CasADi::ExternalFunctionInternal::clone "

clone function ";

%feature("docstring")
CasADi::ExternalFunctionInternal::~ExternalFunctionInternal "

Destructor. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::init "

Initialize. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::ExternalFunctionInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::print "

Print. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::repr "

Print. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::ExternalFunctionInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ExternalFunctionInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ExternalFunctionInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::ExternalFunctionInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ExternalFunctionInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ExternalFunctionInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::ExternalFunctionInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::ExternalFunctionInternal::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1F00Checker.xml
%feature("docstring") CasADi::F00Checker "

If evaluated with both arguments zero, is the result zero?

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1F00Checker_3_01OP__ADD_01_4.xml
%feature("docstring") CasADi::F00Checker< OP_ADD > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F00Checker_3_01OP__FMAX_01_4.xml
%feature("docstring") CasADi::F00Checker< OP_FMAX > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F00Checker_3_01OP__FMIN_01_4.xml
%feature("docstring") CasADi::F00Checker< OP_FMIN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F00Checker_3_01OP__SUB_01_4.xml
%feature("docstring") CasADi::F00Checker< OP_SUB > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker.xml
%feature("docstring") CasADi::F0XChecker "

If evaluated with the first argument zero, is the result zero?

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__ASIN_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_ASIN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__ASSIGN_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_ASSIGN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__CEIL_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_CEIL > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__DIV_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_DIV > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__ERF_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_ERF > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__ERFINV_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_ERFINV > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__FABS_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_FABS > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__FLOOR_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_FLOOR > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__MUL_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_MUL > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__NEG_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_NEG > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__SIGN_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_SIGN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__SIN_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_SIN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__SINH_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_SINH > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__SQRT_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_SQRT > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__TAN_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_TAN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1F0XChecker_3_01OP__TANH_01_4.xml
%feature("docstring") CasADi::F0XChecker< OP_TANH > " C++ includes:
casadi_calculus.hpp ";


// File: classKINEMATICS_1_1Frame.xml
%feature("docstring") KINEMATICS::Frame "

define the concept of a mechanical frame

A frame is a concept from classical mechanics. One can define a frame {1}
rigorously as an ordered tuple of four vectors: three 0-vectors (ex,ey,ez)
denoting the axis orientations

one 1-vector (p) denoting the position of the frame's origin.

It is convenient to write the constituents of {1} in a 4x4 matrix form T_10,
in which the defining vectors of frame {1} have been written in {0}
coordinates: T = [ex ey ez p]

or T = [ R p ;0 0 0 1]

with R a 3x3 rotation matrix p a 3x1 position vector

In this toolbox, a Frame has a reference Frame and a Transformation matrix
as members. The user constructs a chain (or rather a tree) of frames by
calling the constructors of Frame.

The longer explanation:

Frames can be intuitively defined by the formalism of active interpretation
of transformation matrices. Put yourself in frame {i}. Now imagine taking a
copy of the vector-tuplet that defines frame {i} and moving and rotating
these vectors at will. You have performed an action on objects in vector
space. You are at a certain pose of the copied tuple which you now say
defines frame {j}.

You write down the vectors of {j} with respect to {i} and expressed in {i}
in a matrix T_ji It is convenient to use elemental transformations to obtain
T_ji. For example, {j} may be defined by starting from a copy of {i}, moving
it over a distance L and rotating it over its (moved) z-axis:

Joris Gillis

C++ includes: frame.hpp ";

%feature("docstring")  KINEMATICS::Frame::Frame "

Constructors. ";

%feature("docstring")  KINEMATICS::Frame::Frame "

Constructor for the world frame (top of the hierarchy)

Constructor for the world frame (top of the hierarchy)

Parameters:
-----------

name:  name of the Frame

q:  nx1 expression containg the n default time-dependant symbols

dq:  nx1 expression containg the derivatives of the n default time-
dependant symbols

ddq:  nx1 expression containg the second derivatives of the n default time-
dependant variables

time:  the symbol that represents time

In the above, n is any integer, but the same at all three instances. ";

%feature("docstring")  KINEMATICS::Frame::Frame "

Copy constructor Copy constructor. ";

%feature("docstring")  KINEMATICS::Frame::Frame "

Chain constructor for the world frame - to create the hierarchy of Frames.

Chain constructor for the world frame - to create the hierarchy of Frames

Parameters:
-----------

name:  name of the Frame

ref:  the reference Frame with respect to which the T holds

T:  4x4 transformation matrix Can be conveniently constructed with the
global functions TRx, TRy, ... ";

%feature("docstring")  KINEMATICS::Frame::~Frame "";

%feature("docstring")  KINEMATICS::Frame::getName "

Get the name of this frame. ";

%feature("docstring")  KINEMATICS::Frame::getQ "

Get the default time dependant symbols from the world frame. ";

%feature("docstring")  KINEMATICS::Frame::getDQ "

Get the derivatives of the default time dependant symbols from the world
frame. ";

%feature("docstring")  KINEMATICS::Frame::getDDQ "

Get the second derivatives of the default time dependant symbols from the
world frame. ";

%feature("docstring")  KINEMATICS::Frame::getCommonFrame "

returns the lowermost Frame in the hierarchy this Frame shares with the
other Frame ";

%feature("docstring")  KINEMATICS::Frame::chain "

keep left-multiplying e by transformation matrices going from this frame to
the ei frame

keep left-multiplying e by transformation matrices going from this frame to
the ei frame

Parameters:
-----------

e:  the expression that will be transformed will typically be vector-like
but can be a matrix as well

ei:  the Frame in which the result should be expressed (Expressed In)

type:  specifies if e is to be treated position-like (1) or direction-like
(0)

the transformed expression

See:   KinVec  Consider the Frame tree: ( Frame 3).chain(e,( Frame 5))

will return inv(T_52)*inv(T_20)*T_10*T_31*e ";


// File: classKINEMATICS_1_1FrameNode.xml
%feature("docstring") KINEMATICS::FrameNode "

Internal class to make Frame trees reference-safe.

C++ includes: frame_node.hpp ";

%feature("docstring")  KINEMATICS::FrameNode::FrameNode "

Constructor. ";

%feature("docstring")  KINEMATICS::FrameNode::FrameNode "";

%feature("docstring")  KINEMATICS::FrameNode::~FrameNode "";

%feature("docstring")  KINEMATICS::FrameNode::print "

Print. ";


// File: structCasADi_1_1FunctionIO.xml
%feature("docstring") CasADi::FunctionIO "

Structure that contains the numerical values for the inputs or outputs of a
function.

Joel Andersson

C++ includes: fx.hpp ";


// File: classCasADi_1_1FX.xml
%feature("docstring") CasADi::FX "

General function.

A general function $f$ in casadi can be multi-input, multi-output.  Number
of inputs: nin getNumInputs()  Number of outputs: nout getNumOutputs()

We can view this function as a being composed of a (nin, nout) grid of
single-input, single-output primitive functions.  Each such primitive
function $f_{i,j} \\\\forall i \\\\in [0,nin-1], j \\\\in [0,nout-1]$ can
map as $\\\\mathbf{R}^{n,m}\\\\to\\\\mathbf{R}^{p,q}$, in which n,m,p,q can
take different values for every (i,j) pair.

When passing input, you specify which partition i is active. You pass the
numbers flattened, as a vector of size $(n*m)$.  When requesting output, you
specify which partition j is active. You get the numbers flattened, as a
vector of size $(p*q)$.

To calculate jacobians, you need to have $(m=1,q=1)$.

Write the jacobian as $J_{i,j} = \\\\nabla f_{i,j} = \\\\frac{\\\\partial
f_{i,j}(\\\\vec{x})}{\\\\partial \\\\vec{x}}$.

Using $\\\\vec{v} \\\\in \\\\mathbf{R}^n$ as a forward seed: setFwdSeed(v,i)
Retrieving $\\\\vec{s}_f \\\\in \\\\mathbf{R}^p$ from: getFwdSens(sf,j)

Using $\\\\vec{w} \\\\in \\\\mathbf{R}^p$ as a forward seed: setAdjSeed(w,j)
Retrieving $\\\\vec{s}_a \\\\in \\\\mathbf{R}^n $ from: getAdjSens(sa,i)

We have the following relationships for function mapping from a column
vector to a column vector:

$ \\\\vec{s}_f = \\\\nabla f_{i,j} . \\\\vec{v}$ $ \\\\vec{s}_a = (\\\\nabla
f_{i,j})^T . \\\\vec{w}$

Some quantities is these formulas must be transposed:  input row: transpose
$ \\\\vec{v} $ and $\\\\vec{s}_a$  output row: transpose $ \\\\vec{w} $ and
$\\\\vec{s}_f$

NOTE: FX's are allowed to modify their input arguments when evaluating:
implicitFunction, IDAS solver Futher releases may disallow this. for
developers Each function consists of 4 files:  1. public class headerfile:
imported in python  2. public class implementation  3. internal class
headerfile: should only be used by derived classes  4. internal class
implementation

python and c++ should be 1-to-1  There should be no extra features in 1.
All the functionality should exist in 1.  If it means that c++ will be more
\"pythonic\", so be it.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+--------------------+
|   Id    |      Used in       |
+=========+====================+
| inputs  | CasADi::FXInternal |
+---------+--------------------+
| outputs | CasADi::FXInternal |
+---------+--------------------+

C++ includes: fx.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::FX::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::FX::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::FX::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::FX::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::FX::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::FX::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::FX::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::FX::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::FX::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::FX::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::FX::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::FX::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::FX::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::FX::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::FX::getOption "

get an option value ";

%feature("docstring")  CasADi::FX::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::FX::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::FX::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::FX::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::FX::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::FX::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::FX::makeUnique "";

%feature("docstring")  CasADi::FX::FX "

default constructor ";

%feature("docstring")  CasADi::FX::~FX "

Destructor. ";

%feature("docstring")  CasADi::FX::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::FX::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::FX::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::FX::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::FX::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::FX::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::FX::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::FX::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::FX::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::FX::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::FX::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::FX::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::FX::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::FX::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::FX::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::FX::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::FX::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::FX::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::FX::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::FX::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::FX::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::FX::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::FX::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::FX::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::FX::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::FX::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::FX::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::FX::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::FX::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::FX::indexed_one_based "";

%feature("docstring")  CasADi::FX::indexed_zero_based "";

%feature("docstring")  CasADi::FX::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::FX::input "

Const access input argument. ";

%feature("docstring")  CasADi::FX::output "

Const access input argument. ";

%feature("docstring")  CasADi::FX::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::FX::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::FX::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::FX::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::FX::input "

Access input argument. ";

%feature("docstring")  CasADi::FX::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::FX::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::FX::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::FX::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::FX::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::FX::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::FX::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::FX::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::FX::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::FX::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::FX::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::FX::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::FX::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::FX::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::FX::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::FX::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::FX::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::FX::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::FX::clone "

Deep copy. ";

%feature("docstring")  CasADi::FX::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::FX::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::FX::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::FX::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::FX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::FX::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::FX::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::FX::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::FX::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::FX::isInit "

Is initialized? ";

%feature("docstring")  CasADi::FX::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::FX::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::FX::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::FX::getDescription "

Return a string with a destription (for SWIG) ";


// File: structCasADi_1_1FX0Checker.xml
%feature("docstring") CasADi::FX0Checker "

If evaluated with the second argument zero, is the result zero?

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1FX0Checker_3_01OP__MUL_01_4.xml
%feature("docstring") CasADi::FX0Checker< OP_MUL > " C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1FXInternal.xml
%feature("docstring") CasADi::FXInternal "

Internal class for FX.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+--------------------+
|   Id    |      Used in       |
+=========+====================+
| inputs  | CasADi::FXInternal |
+---------+--------------------+
| outputs | CasADi::FXInternal |
+---------+--------------------+

C++ includes: fx_internal.hpp ";

%feature("docstring")  CasADi::FXInternal::~FXInternal "

Destructor. ";

%feature("docstring")  CasADi::FXInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::FXInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::FXInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::FXInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::FXInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::FXInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::FXInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::FXInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::FXInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::FXInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::FXInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::FXInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::FXInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::FXInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::FXInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::FXInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::FXInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::FXInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::FXInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::FXInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::FXInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::FXInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::FXInternal::print "

Print. ";

%feature("docstring")  CasADi::FXInternal::repr "

Print. ";

%feature("docstring")  CasADi::FXInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::FXInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::FXInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::FXInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::FXInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::FXInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::FXInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::FXInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::FXInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::FXInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::FXInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::FXInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::FXInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::FXInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::FXInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::FXInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::FXInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::FXInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::FXInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::FXInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::FXInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::FXInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::FXInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::FXInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::FXInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::FXInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::FXInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::FXInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::FXInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::FXInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::FXInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::FXInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::FXInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::FXInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::FXInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::FXInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::FXInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::FXInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::FXInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::FXInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::FXInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::FXInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::FXInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::FXInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::FXInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::FXInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::FXInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::FXInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::FXInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::FXInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::FXInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::FXInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::FXInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1GenericExpression.xml
%feature("docstring") CasADi::GenericExpression "

Expression interface This is a common base class for SX, MX and Matrix<>,
introducing a uniform syntax and implementing common functionality using the
curiously recurring template pattern (CRTP) idiom. .

Joel Andersson

C++ includes: generic_expression.hpp ";

%feature("docstring")  CasADi::GenericExpression::__mldivide__ "

Matrix division from left. ";


// File: classCasADi_1_1GenericMatrix.xml
%feature("docstring") CasADi::GenericMatrix "

Matrix base class This is a common base class for MX and Matrix<>,
introducing a uniform syntax and implementing common functionality using the
curiously recurring template pattern (CRTP) idiom. .

The class is designed with the idea that \"everything is a matrix\", that
is, also scalars and vectors.  This philosophy makes it easy to use and to
interface in particularily with Python and Matlab/Octave.

The syntax tries to stay as close as possible to the ublas syntax when it
comes to vector/matrix operations.

Index starts with 0.  Index flatten happens as follows: (i,j) -> k =
j+i*size2()  Vectors are considered to be column vectors.

The storage format is a (modified) compressed row storage (CRS) format. This
way, a vector element can always be accessed in constant time.

The sparsity can be accessed with CRSSparsity& sparsity()

Joel Andersson

C++ includes: generic_matrix.hpp ";

%feature("docstring")  CasADi::GenericMatrix::size "

Get the number of (structural) non-zero elements. ";

%feature("docstring")  CasADi::GenericMatrix::sizeL "

Get the number of non-zeros in the lower triangular half. ";

%feature("docstring")  CasADi::GenericMatrix::sizeU "

Get get the number of non-zeros in the upper triangular half. ";

%feature("docstring")  CasADi::GenericMatrix::numel "

Get the number of elements. ";

%feature("docstring")  CasADi::GenericMatrix::size1 "

Get the first dimension (i.e. n for a n-by-m matrix) ";

%feature("docstring")  CasADi::GenericMatrix::size2 "

Get the first dimension (i.e. m for a n-by-m matrix) ";

%feature("docstring")  CasADi::GenericMatrix::size "

Get the number if non-zeros for a given sparsity pattern. ";

%feature("docstring")  CasADi::GenericMatrix::shape "

Get the shape. ";

%feature("docstring")  CasADi::GenericMatrix::empty "

Check if the matrix expression is empty. ";

%feature("docstring")  CasADi::GenericMatrix::dense "

Check if the matrix expression is dense. ";

%feature("docstring")  CasADi::GenericMatrix::scalar "

Check if the matrix expression is scalar. ";

%feature("docstring")  CasADi::GenericMatrix::sparsity "

Get the sparsity pattern. ";

%feature("docstring")  CasADi::GenericMatrix::sparsityRef "

Access the sparsity, make a copy if there are multiple references to it. ";


// File: classCasADi_1_1GenericType.xml
%feature("docstring") CasADi::GenericType "

Generic data type.

Joel Andersson

C++ includes: generic_type.hpp ";

%feature("docstring")  CasADi::GenericType::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::GenericType::makeUnique "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::get_description "

Get a description of the object's type. ";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "

Creator functions. ";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::GenericType "";

%feature("docstring")  CasADi::GenericType::getType "";

%feature("docstring")  CasADi::GenericType::can_cast_to "";

%feature("docstring")  CasADi::GenericType::can_cast_to "";

%feature("docstring")  CasADi::GenericType::isBool "

Is boolean? ";

%feature("docstring")  CasADi::GenericType::isInt "

Is an integer? ";

%feature("docstring")  CasADi::GenericType::isDouble "

Is a double? ";

%feature("docstring")  CasADi::GenericType::isString "

Is a string? ";

%feature("docstring")  CasADi::GenericType::isEmptyVector "

Is an empty vector? ";

%feature("docstring")  CasADi::GenericType::isIntVector "

Is a vector of ints? ";

%feature("docstring")  CasADi::GenericType::isDoubleVector "

Is a vector of doubles? ";

%feature("docstring")  CasADi::GenericType::isStringVector "

Is a vector of strings. ";

%feature("docstring")  CasADi::GenericType::isSharedObject "

Is a shared object? ";

%feature("docstring")  CasADi::GenericType::isFX "

Is a shared object? ";

%feature("docstring")  CasADi::GenericType::toBool "

Convert to boolean. ";

%feature("docstring")  CasADi::GenericType::toInt "

Convert to int. ";

%feature("docstring")  CasADi::GenericType::toDouble "

Convert to double. ";

%feature("docstring")  CasADi::GenericType::toString "

Convert to string. ";

%feature("docstring")  CasADi::GenericType::toIntVector "

Convert to vector of ints. ";

%feature("docstring")  CasADi::GenericType::toDoubleVector "

Convert to vector of doubles. ";

%feature("docstring")  CasADi::GenericType::toStringVector "

Convert to vector of strings. ";

%feature("docstring")  CasADi::GenericType::toSharedObject "

Convert to shared object. ";

%feature("docstring")  CasADi::GenericType::toFX "

Convert to shared object. ";

%feature("docstring")  CasADi::GenericType::toVoidPointer "

Convert to void pointer. ";

%feature("docstring")  CasADi::GenericType::is_a "

Check if it is of a certain type (implementation in
generic_type_internal.hpp) ";

%feature("docstring")  CasADi::GenericType::clone "

Deep copy. ";

%feature("docstring")  CasADi::GenericType::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::GenericType::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::GenericType::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::GenericType::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::GenericType::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::GenericType::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::GenericType::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::GenericType::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::GenericType::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::GenericType::isInit "

Is initialized? ";

%feature("docstring")  CasADi::GenericType::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::GenericType::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::GenericType::checkNode "

Assert that the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::GenericType::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::GenericType::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1GenericTypeInternal.xml
%feature("docstring") CasADi::GenericTypeInternal "C++ includes:
generic_type_internal.hpp ";

%feature("docstring")  CasADi::GenericTypeInternal::GenericTypeInternal "";

%feature("docstring")  CasADi::GenericTypeInternal::~GenericTypeInternal "";

%feature("docstring")  CasADi::GenericTypeInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::GenericTypeInternal::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::GenericTypeInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::GenericTypeInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::GenericTypeInternal::init "

Initialize the object. ";

%feature("docstring")  CasADi::GenericTypeInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::GenericTypeInternal::assertInit "

Assert that the object has been initialized. ";

%feature("docstring")  CasADi::GenericTypeInternal::repr "

Print a representation of the object. ";


// File: classCasADi_1_1Sundials_1_1IdasIntegrator.xml
%feature("docstring") CasADi::Sundials::IdasIntegrator "

Interface to IDAS from the Sundials suite.

Solves an initial value problem in differential-algebraic equations of the
form:

Creates an integrator instance which solves initial value problems in
differential-algebraic equations of the form:

f(t,y,der(y),z,p) == 0   der(q) = g(t,y,z,p)

The DAE thus consists of a fully implicit part (f) and an explicit
quadrature part (g). In the same way, the state vector is also composed of
two parts, the differential states and the quadrature states, i.e. x = [y,q]

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| abstolv      | OT_REALVECTO |              |              | CasADi::Sund |
|              | R            |              |              | ials::IdasIn |
|              |              |              |              | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_iterat | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| ive_solver   |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_linear | OT_STRING    | \"dense\"      | (dense|bande | CasADi::Sund |
| _solver      |              |              | d|iterative) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_lower_ | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_max_kr | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
| ylov         |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_pretyp | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
| e            |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_upper_ | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| calc_ic      | OT_BOOLEAN   | true         | use          | CasADi::Sund |
|              |              |              | IDACalcIC to | ials::IdasIn |
|              |              |              | get          | ternal       |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions.  |              |
|              |              |              | This only    |              |
|              |              |              | works for    |              |
|              |              |              | semi-        |              |
|              |              |              | explicit     |              |
|              |              |              | index-one    |              |
|              |              |              | systems.     |              |
|              |              |              | Else, you    |              |
|              |              |              | must provide |              |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions   |              |
|              |              |              | yourself.    |              |
+--------------+--------------+--------------+--------------+--------------+
| calc_icB     | OT_BOOLEAN   | false        | use          | CasADi::Sund |
|              |              |              | IDACalcIC to | ials::IdasIn |
|              |              |              | get          | ternal       |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions.  |              |
|              |              |              | This only    |              |
|              |              |              | works for    |              |
|              |              |              | semi-        |              |
|              |              |              | explicit     |              |
|              |              |              | index-one    |              |
|              |              |              | systems.     |              |
|              |              |              | Else, you    |              |
|              |              |              | must provide |              |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions   |              |
|              |              |              | yourself.    |              |
+--------------+--------------+--------------+--------------+--------------+
| cj_scaling   | OT_BOOLEAN   | false        | IDAS scaling | CasADi::Sund |
|              |              |              | on cj for    | ials::IdasIn |
|              |              |              | the user-    | ternal       |
|              |              |              | defined      |              |
|              |              |              | linear       |              |
|              |              |              | solver       |              |
|              |              |              | module       |              |
+--------------+--------------+--------------+--------------+--------------+
| disable_inte | OT_BOOLEAN   | false        | Disable IDAS | CasADi::Sund |
| rnal_warning |              |              | internal     | ials::IdasIn |
| s            |              |              | warning      | ternal       |
|              |              |              | messages     |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | false        |              | CasADi::Sund |
| an           |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| extra_fsens_ | OT_BOOLEAN   | false        | Call calc ic | CasADi::Sund |
| calc_ic      |              |              | an extra     | ials::IdasIn |
|              |              |              | time, with   | ternal       |
|              |              |              | fsens=0      |              |
+--------------+--------------+--------------+--------------+--------------+
| finite_diffe | OT_BOOLEAN   | false        | use finite   | CasADi::Sund |
| rence_fsens  |              |              | differences  | ials::Sundia |
|              |              |              | to           | lsInternal   |
|              |              |              | approximate  |              |
|              |              |              | the forward  |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
|              |              |              | (if AD is    |              |
|              |              |              | not          |              |
|              |              |              | available)   |              |
+--------------+--------------+--------------+--------------+--------------+
| first_time   | OT_REAL      | GenericType( | first        | CasADi::Sund |
|              |              | )            | requested    | ials::IdasIn |
|              |              |              | time as a    | ternal       |
|              |              |              | fraction of  |              |
|              |              |              | the time     |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REALVECTO |              |              | CasADi::Sund |
| v            | R            |              |              | ials::IdasIn |
|              |              |              |              | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| fsens_err_co | OT_BOOLEAN   | true         | include the  | CasADi::Sund |
| n            |              |              | forward sens | ials::Sundia |
|              |              |              | itivities in | lsInternal   |
|              |              |              | all error    |              |
|              |              |              | controls     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_scalin | OT_REALVECTO |              | scaling      | CasADi::Sund |
| g_factors    | R            |              | factor for   | ials::Sundia |
|              |              |              | the          | lsInternal   |
|              |              |              | components   |              |
|              |              |              | if finite    |              |
|              |              |              | differences  |              |
|              |              |              | is used      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_sensit | OT_INTEGERVE |              | specifies    | CasADi::Sund |
| iviy_paramet | CTOR         |              | which        | ials::Sundia |
| ers          |              |              | components   | lsInternal   |
|              |              |              | will be used |              |
|              |              |              | when         |              |
|              |              |              | estimating   |              |
|              |              |              | the          |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_STRING    | \"hermite\"    | type of inte | CasADi::Sund |
| n_type       |              |              | rpolation    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint sens |              |
|              |              |              | itivities (h |              |
|              |              |              | ermite|polyn |              |
|              |              |              | omial)       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| lver         |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      | (user_define | CasADi::Sund |
| r            |              |              | d|dense|band | ials::Sundia |
|              |              |              | ed|iterative | lsInternal   |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | An linear    | CasADi::Sund |
| r_creator    | VER          | )            | solver       | ials::Sundia |
|              |              |              | creator      | lsInternal   |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Sundia |
|              |              |              | the linear   | lsInternal   |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
|              |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| max_multiste | OT_INTEGER   | 5            |              | CasADi::Sund |
| p_order      |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_num_step | OT_INTEGER   | 10000        | maximum      | CasADi::Sund |
| s            |              |              | number of    | ials::Sundia |
|              |              |              | steps        | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_step_siz | OT_REAL      | 0            | maximim step | CasADi::Sund |
| e            |              |              | size         | ials::IdasIn |
|              |              |              |              | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Sundial |
|              |              |              | uts)  (corre | s::IdasInter |
|              |              |              | ctInitialCon | nal          |
|              |              |              | ditions|res| |              |
|              |              |              | resS)        |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quad_err_con | OT_BOOLEAN   | false        | should the   | CasADi::Sund |
|              |              |              | quadratures  | ials::Sundia |
|              |              |              | affect the   | lsInternal   |
|              |              |              | step size    |              |
|              |              |              | control      |              |
+--------------+--------------+--------------+--------------+--------------+
| reltol       | OT_REAL      | 0.000        | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| sensitivity_ | OT_STRING    | \"simultaneou | (simultaneou | CasADi::Sund |
| method       |              | s\"           | s|staggered) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| steps_per_ch | OT_INTEGER   | 20           | number of    | CasADi::Sund |
| eckpoint     |              |              | steps        | ials::Sundia |
|              |              |              | between two  | lsInternal   |
|              |              |              | consecutive  |              |
|              |              |              | checkpoints  |              |
+--------------+--------------+--------------+--------------+--------------+
| stop_at_end  | OT_BOOLEAN   | false        | Stop the     | CasADi::Sund |
|              |              |              | integrator   | ials::Sundia |
|              |              |              | at the end   | lsInternal   |
|              |              |              | of the       |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| suppress_alg | OT_BOOLEAN   | false        | supress      | CasADi::Sund |
| ebraic       |              |              | algebraic    | ials::IdasIn |
|              |              |              | variables in | ternal       |
|              |              |              | the error    |              |
|              |              |              | testing      |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Sundia |
|              |              |              | solver       | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+--------------------------+--------------------------------+
|            Id            |            Used in             |
+==========================+================================+
| correctInitialConditions | CasADi::Sundials::IdasInternal |
+--------------------------+--------------------------------+
| inputs                   | CasADi::FXInternal             |
+--------------------------+--------------------------------+
| outputs                  | CasADi::FXInternal             |
+--------------------------+--------------------------------+
| res                      | CasADi::Sundials::IdasInternal |
+--------------------------+--------------------------------+
| resS                     | CasADi::Sundials::IdasInternal |
+--------------------------+--------------------------------+

C++ includes: idas_integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::makeUnique "";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::IdasIntegrator "

Default constructor. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::IdasIntegrator "

Create an integrator for a fully implicit DAE with quadrature states (nz is
the number of states not to be included in the state vector)

Create an integrator for a fully implicit DAE with quadrature states (nz is
the number of states not to be included in the state vector)

Parameters:
-----------

f:  dynamical system >Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

>Output scheme: CasADi::DAEOutput (DAE_NUM_OUT = 3)
+----------+------------------------------------------+
|   Name   |               Description                |
+==========+==========================================+
| DAE_ODE  | Right hand side of the implicit ODE      |
+----------+------------------------------------------+
| DAE_ALG  | Right hand side of algebraic equations   |
+----------+------------------------------------------+
| DAE_QUAD | Right hand side of quadratures equations |
+----------+------------------------------------------+
";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")
CasADi::Sundials::IdasIntegrator::correctInitialConditions "

Correct the initial value for yp and z after resetting the solver. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getJacobian "

Get the Jacobian. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setInitialTime "

Set initial time. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setFinalTime "

Set final time. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setStopTime "

Set a stop time for the forward integration. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::clone "

Clone. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::indexed_one_based "";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::indexed_zero_based
"";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Sundials::IdasIntegrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Sundials::IdasIntegrator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Sundials_1_1IdasInternal.xml
%feature("docstring") CasADi::Sundials::IdasInternal "

Solves an initial value problem in differential-algebraic equations of the
form:

Creates an integrator instance which solves initial value problems in
differential-algebraic equations of the form:

f(t,y,der(y),z,p) == 0   der(q) = g(t,y,z,p)

The DAE thus consists of a fully implicit part (f) and an explicit
quadrature part (g). In the same way, the state vector is also composed of
two parts, the differential states and the quadrature states, i.e. x = [y,q]

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| abstolv      | OT_REALVECTO |              |              | CasADi::Sund |
|              | R            |              |              | ials::IdasIn |
|              |              |              |              | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_iterat | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| ive_solver   |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_linear | OT_STRING    | \"dense\"      | (dense|bande | CasADi::Sund |
| _solver      |              |              | d|iterative) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_lower_ | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_max_kr | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
| ylov         |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_pretyp | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
| e            |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_upper_ | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| calc_ic      | OT_BOOLEAN   | true         | use          | CasADi::Sund |
|              |              |              | IDACalcIC to | ials::IdasIn |
|              |              |              | get          | ternal       |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions.  |              |
|              |              |              | This only    |              |
|              |              |              | works for    |              |
|              |              |              | semi-        |              |
|              |              |              | explicit     |              |
|              |              |              | index-one    |              |
|              |              |              | systems.     |              |
|              |              |              | Else, you    |              |
|              |              |              | must provide |              |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions   |              |
|              |              |              | yourself.    |              |
+--------------+--------------+--------------+--------------+--------------+
| calc_icB     | OT_BOOLEAN   | false        | use          | CasADi::Sund |
|              |              |              | IDACalcIC to | ials::IdasIn |
|              |              |              | get          | ternal       |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions.  |              |
|              |              |              | This only    |              |
|              |              |              | works for    |              |
|              |              |              | semi-        |              |
|              |              |              | explicit     |              |
|              |              |              | index-one    |              |
|              |              |              | systems.     |              |
|              |              |              | Else, you    |              |
|              |              |              | must provide |              |
|              |              |              | consistent   |              |
|              |              |              | initial      |              |
|              |              |              | conditions   |              |
|              |              |              | yourself.    |              |
+--------------+--------------+--------------+--------------+--------------+
| cj_scaling   | OT_BOOLEAN   | false        | IDAS scaling | CasADi::Sund |
|              |              |              | on cj for    | ials::IdasIn |
|              |              |              | the user-    | ternal       |
|              |              |              | defined      |              |
|              |              |              | linear       |              |
|              |              |              | solver       |              |
|              |              |              | module       |              |
+--------------+--------------+--------------+--------------+--------------+
| disable_inte | OT_BOOLEAN   | false        | Disable IDAS | CasADi::Sund |
| rnal_warning |              |              | internal     | ials::IdasIn |
| s            |              |              | warning      | ternal       |
|              |              |              | messages     |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | false        |              | CasADi::Sund |
| an           |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| extra_fsens_ | OT_BOOLEAN   | false        | Call calc ic | CasADi::Sund |
| calc_ic      |              |              | an extra     | ials::IdasIn |
|              |              |              | time, with   | ternal       |
|              |              |              | fsens=0      |              |
+--------------+--------------+--------------+--------------+--------------+
| finite_diffe | OT_BOOLEAN   | false        | use finite   | CasADi::Sund |
| rence_fsens  |              |              | differences  | ials::Sundia |
|              |              |              | to           | lsInternal   |
|              |              |              | approximate  |              |
|              |              |              | the forward  |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
|              |              |              | (if AD is    |              |
|              |              |              | not          |              |
|              |              |              | available)   |              |
+--------------+--------------+--------------+--------------+--------------+
| first_time   | OT_REAL      | GenericType( | first        | CasADi::Sund |
|              |              | )            | requested    | ials::IdasIn |
|              |              |              | time as a    | ternal       |
|              |              |              | fraction of  |              |
|              |              |              | the time     |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REALVECTO |              |              | CasADi::Sund |
| v            | R            |              |              | ials::IdasIn |
|              |              |              |              | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| fsens_err_co | OT_BOOLEAN   | true         | include the  | CasADi::Sund |
| n            |              |              | forward sens | ials::Sundia |
|              |              |              | itivities in | lsInternal   |
|              |              |              | all error    |              |
|              |              |              | controls     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_scalin | OT_REALVECTO |              | scaling      | CasADi::Sund |
| g_factors    | R            |              | factor for   | ials::Sundia |
|              |              |              | the          | lsInternal   |
|              |              |              | components   |              |
|              |              |              | if finite    |              |
|              |              |              | differences  |              |
|              |              |              | is used      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_sensit | OT_INTEGERVE |              | specifies    | CasADi::Sund |
| iviy_paramet | CTOR         |              | which        | ials::Sundia |
| ers          |              |              | components   | lsInternal   |
|              |              |              | will be used |              |
|              |              |              | when         |              |
|              |              |              | estimating   |              |
|              |              |              | the          |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_STRING    | \"hermite\"    | type of inte | CasADi::Sund |
| n_type       |              |              | rpolation    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint sens |              |
|              |              |              | itivities (h |              |
|              |              |              | ermite|polyn |              |
|              |              |              | omial)       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| lver         |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      | (user_define | CasADi::Sund |
| r            |              |              | d|dense|band | ials::Sundia |
|              |              |              | ed|iterative | lsInternal   |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | An linear    | CasADi::Sund |
| r_creator    | VER          | )            | solver       | ials::Sundia |
|              |              |              | creator      | lsInternal   |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Sundia |
|              |              |              | the linear   | lsInternal   |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
|              |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| max_multiste | OT_INTEGER   | 5            |              | CasADi::Sund |
| p_order      |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_num_step | OT_INTEGER   | 10000        | maximum      | CasADi::Sund |
| s            |              |              | number of    | ials::Sundia |
|              |              |              | steps        | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_step_siz | OT_REAL      | 0            | maximim step | CasADi::Sund |
| e            |              |              | size         | ials::IdasIn |
|              |              |              |              | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Sundial |
|              |              |              | uts)  (corre | s::IdasInter |
|              |              |              | ctInitialCon | nal          |
|              |              |              | ditions|res| |              |
|              |              |              | resS)        |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quad_err_con | OT_BOOLEAN   | false        | should the   | CasADi::Sund |
|              |              |              | quadratures  | ials::Sundia |
|              |              |              | affect the   | lsInternal   |
|              |              |              | step size    |              |
|              |              |              | control      |              |
+--------------+--------------+--------------+--------------+--------------+
| reltol       | OT_REAL      | 0.000        | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| sensitivity_ | OT_STRING    | \"simultaneou | (simultaneou | CasADi::Sund |
| method       |              | s\"           | s|staggered) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| steps_per_ch | OT_INTEGER   | 20           | number of    | CasADi::Sund |
| eckpoint     |              |              | steps        | ials::Sundia |
|              |              |              | between two  | lsInternal   |
|              |              |              | consecutive  |              |
|              |              |              | checkpoints  |              |
+--------------+--------------+--------------+--------------+--------------+
| stop_at_end  | OT_BOOLEAN   | false        | Stop the     | CasADi::Sund |
|              |              |              | integrator   | ials::Sundia |
|              |              |              | at the end   | lsInternal   |
|              |              |              | of the       |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| suppress_alg | OT_BOOLEAN   | false        | supress      | CasADi::Sund |
| ebraic       |              |              | algebraic    | ials::IdasIn |
|              |              |              | variables in | ternal       |
|              |              |              | the error    |              |
|              |              |              | testing      |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Sundia |
|              |              |              | solver       | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+--------------------------+--------------------------------+
|            Id            |            Used in             |
+==========================+================================+
| correctInitialConditions | CasADi::Sundials::IdasInternal |
+--------------------------+--------------------------------+
| inputs                   | CasADi::FXInternal             |
+--------------------------+--------------------------------+
| outputs                  | CasADi::FXInternal             |
+--------------------------+--------------------------------+
| res                      | CasADi::Sundials::IdasInternal |
+--------------------------+--------------------------------+
| resS                     | CasADi::Sundials::IdasInternal |
+--------------------------+--------------------------------+

C++ includes: idas_internal.hpp ";

%feature("docstring")  CasADi::Sundials::IdasInternal::IdasInternal "

Constructor. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::clone "

Copy constructor.

Clone ";

%feature("docstring")  CasADi::Sundials::IdasInternal::create "

Create a new integrator. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::~IdasInternal "

Destructor. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::freeIDAS "

Free all IDAS memory. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::init "

Initialize. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization.
";

%feature("docstring")  CasADi::Sundials::IdasInternal::initTaping "

Initialize the taping. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::initAdj "

Initialize the adjoint problem (can only be called after the first
integration) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setStopTime "

Set the stop time of the forward integration. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getJacobian "

Get the Jacobian. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")
CasADi::Sundials::IdasInternal::correctInitialConditions "

Correct the initial conditions, i.e. calculate. ";

%feature("docstring")
CasADi::Sundials::IdasInternal::initUserDefinedLinearSolver "";

%feature("docstring")  CasADi::Sundials::IdasInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::jac "

Create an integrator which integrates the ODE/DAE augmented with the forward
sensitivity equations. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setInitialTime "

Set initial time (to be removed) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setFinalTime "

Set final time (to be removed) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::evaluate "

evaluate ";

%feature("docstring")  CasADi::Sundials::IdasInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Sundials::IdasInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::print "

Print. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::repr "

Print. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Sundials::IdasInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::IdasInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::IdasInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOptionDescription
"

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::IdasInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::IdasInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::IdasInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Sundials::IdasInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1IfNode.xml
%feature("docstring") CasADi::IfNode "

Represents a branch in an MX tree TODO: Change name of file.

Joel Andersson

C++ includes: if_else_node.hpp ";

%feature("docstring")  CasADi::IfNode::IfNode "

Constructors. ";

%feature("docstring")  CasADi::IfNode::~IfNode "

Destructor. ";

%feature("docstring")  CasADi::IfNode::clone "

Clone function. ";

%feature("docstring")  CasADi::IfNode::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::IfNode::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::IfNode::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::IfNode::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::IfNode::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::IfNode::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::IfNode::repr "

Print a representation. ";

%feature("docstring")  CasADi::IfNode::print "

Print a description. ";

%feature("docstring")  CasADi::IfNode::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::IfNode::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::IfNode::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::IfNode::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::IfNode::getName "

Get the name. ";

%feature("docstring")  CasADi::IfNode::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::IfNode::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::IfNode::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::IfNode::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::IfNode::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::IfNode::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::IfNode::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::IfNode::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::IfNode::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::IfNode::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::IfNode::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::IfNode::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::IfNode::dep "";

%feature("docstring")  CasADi::IfNode::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::IfNode::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::IfNode::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::IfNode::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::IfNode::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::IfNode::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::IfNode::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::IfNode::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::IfNode::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::IfNode::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::IfNode::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::IfNode::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::IfNode::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::IfNode::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::IfNode::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::IfNode::numel "

Number of elements. ";

%feature("docstring")  CasADi::IfNode::size "

Get size. ";

%feature("docstring")  CasADi::IfNode::size1 "

Get size. ";

%feature("docstring")  CasADi::IfNode::size2 "

Get size. ";

%feature("docstring")  CasADi::IfNode::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::IfNode::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::IfNode::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::IfNode::init "

Initialize the object. ";

%feature("docstring")  CasADi::IfNode::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::IfNode::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1ImplicitFunction.xml
%feature("docstring") CasADi::ImplicitFunction "

Abstract base class for the implicit function classes The equation:

F(z, x1, x2, ..., xn) == 0

where d_F/dz is invertable, implicitly defines the equation:

z := G(x1, x2, ..., xn)

F should be an FX mapping from (n+1) inputs to 1 output. ImplicitFunction
(G) is an FX mapping from n inputs to 1 output.

n may be zero.

You can provide an initial guess for z by setting output(0) of
ImplicitFunction.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | Stopping     | CasADi::Impl |
|              |              |              | criterion    | icitFunction |
|              |              |              | tolerance    | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: implicit_function.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::ImplicitFunction::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::ImplicitFunction::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::ImplicitFunction::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::ImplicitFunction::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::ImplicitFunction::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::ImplicitFunction::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::ImplicitFunction::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::ImplicitFunction::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::ImplicitFunction::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::ImplicitFunction::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::ImplicitFunction::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::ImplicitFunction::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::ImplicitFunction::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::ImplicitFunction::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::ImplicitFunction::getOption "

get an option value ";

%feature("docstring")  CasADi::ImplicitFunction::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ImplicitFunction::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ImplicitFunction::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ImplicitFunction::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ImplicitFunction::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ImplicitFunction::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::ImplicitFunction::makeUnique "";

%feature("docstring")  CasADi::ImplicitFunction::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::ImplicitFunction::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::ImplicitFunction::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::ImplicitFunction::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ImplicitFunction::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ImplicitFunction::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::ImplicitFunction::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::ImplicitFunction::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::ImplicitFunction::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::ImplicitFunction::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::ImplicitFunction::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::ImplicitFunction::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ImplicitFunction::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ImplicitFunction::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::ImplicitFunction::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::ImplicitFunction::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::ImplicitFunction::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::ImplicitFunction::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::ImplicitFunction::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ImplicitFunction::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ImplicitFunction::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ImplicitFunction::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ImplicitFunction::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::ImplicitFunction::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::ImplicitFunction::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ImplicitFunction::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::ImplicitFunction::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::ImplicitFunction::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::ImplicitFunction::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ImplicitFunction::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ImplicitFunction::indexed_one_based "";

%feature("docstring")  CasADi::ImplicitFunction::indexed_zero_based "";

%feature("docstring")  CasADi::ImplicitFunction::input "

Const access input argument. ";

%feature("docstring")  CasADi::ImplicitFunction::input "

Access input argument. ";

%feature("docstring")  CasADi::ImplicitFunction::output "

Const access input argument. ";

%feature("docstring")  CasADi::ImplicitFunction::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::ImplicitFunction::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ImplicitFunction::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ImplicitFunction::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunction::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunction::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ImplicitFunction::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ImplicitFunction::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunction::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunction::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ImplicitFunction::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ImplicitFunction::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::ImplicitFunction::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::ImplicitFunction::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ImplicitFunction::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ImplicitFunction::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::ImplicitFunction::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::ImplicitFunction::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunction::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunction::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunction::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunction::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunction::clone "

Deep copy. ";

%feature("docstring")  CasADi::ImplicitFunction::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::ImplicitFunction::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::ImplicitFunction::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::ImplicitFunction::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::ImplicitFunction::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ImplicitFunction::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::ImplicitFunction::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::ImplicitFunction::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::ImplicitFunction::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::ImplicitFunction::isInit "

Is initialized? ";

%feature("docstring")  CasADi::ImplicitFunction::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::ImplicitFunction::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::ImplicitFunction::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::ImplicitFunction::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1ImplicitFunctionInternal.xml
%feature("docstring") CasADi::ImplicitFunctionInternal "

Internal class.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | Stopping     | CasADi::Impl |
|              |              |              | criterion    | icitFunction |
|              |              |              | tolerance    | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: implicit_function_internal.hpp ";

%feature("docstring")
CasADi::ImplicitFunctionInternal::ImplicitFunctionInternal "

Constructor.

Parameters:
-----------

f:   FX mapping from (n+1) inputs to 1 output. ";

%feature("docstring")
CasADi::ImplicitFunctionInternal::~ImplicitFunctionInternal "

Destructor. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::init "

Initialize. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::evaluate "

Solve the system of equations. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::print "

Print. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::repr "

Print. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ImplicitFunctionInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ImplicitFunctionInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::ImplicitFunctionInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::ImplicitFunctionInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1IndexList.xml
%feature("docstring") CasADi::IndexList "

Class representing a non-regular (and thus non-slice) index list

C++ includes: slice.hpp ";

%feature("docstring")  CasADi::IndexList::IndexList "

Constructor. ";

%feature("docstring")  CasADi::IndexList::IndexList "";

%feature("docstring")  CasADi::IndexList::IndexList "";

%feature("docstring")  CasADi::IndexList::IndexList "";

%feature("docstring")  CasADi::IndexList::getAll "

Get a vector of indices. ";


// File: classCasADi_1_1IndexSet.xml
%feature("docstring") CasADi::IndexSet "

Class representing a set of indices of arbitrary order

C++ includes: slice.hpp ";

%feature("docstring")  CasADi::IndexSet::IndexSet "

A single element. ";

%feature("docstring")  CasADi::IndexSet::IndexSet "

A set of indices. ";

%feature("docstring")  CasADi::IndexSet::getAll "

Get a vector of indices. ";


// File: classCasADi_1_1InfSX.xml
%feature("docstring") CasADi::InfSX "

Represents an infinity SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::InfSX::isInteger "";

%feature("docstring")  CasADi::InfSX::isSymbolic "";

%feature("docstring")  CasADi::InfSX::hasDep "";

%feature("docstring")  CasADi::InfSX::isZero "";

%feature("docstring")  CasADi::InfSX::isOne "";

%feature("docstring")  CasADi::InfSX::isMinusOne "";

%feature("docstring")  CasADi::InfSX::isNan "";

%feature("docstring")  CasADi::InfSX::isMinusInf "";

%feature("docstring")  CasADi::InfSX::getIntValue "";

%feature("docstring")  CasADi::InfSX::InfSX "";

%feature("docstring")  CasADi::InfSX::~InfSX "";

%feature("docstring")  CasADi::InfSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::InfSX::isInf "

Properties. ";

%feature("docstring")  CasADi::InfSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::InfSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::InfSX::print "

print ";

%feature("docstring")  CasADi::InfSX::getName "";

%feature("docstring")  CasADi::InfSX::isEqual "

comparison ";

%feature("docstring")  CasADi::InfSX::isEqual "

comparison ";

%feature("docstring")  CasADi::InfSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::InfSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::InfSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::InfSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::InfSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::InfSX::marked "";

%feature("docstring")  CasADi::InfSX::mark "";


// File: structCasADi_1_1SXFunctionInternal_1_1int__compiletime.xml
%feature("docstring") CasADi::SXFunctionInternal::int_compiletime "

Helper class to be plugged into evaluateGen when working with a value known
already at compiletime.

C++ includes: sx_function_internal.hpp ";


// File: structCasADi_1_1SXFunctionInternal_1_1int__runtime.xml
%feature("docstring") CasADi::SXFunctionInternal::int_runtime "

Helper class to be plugged into evaluateGen when working with a value known
only at runtime.

C++ includes: sx_function_internal.hpp ";

%feature("docstring")  CasADi::SXFunctionInternal::int_runtime::int_runtime
"";


// File: classCasADi_1_1IntegerSX.xml
%feature("docstring") CasADi::IntegerSX "

Represents a constant integer SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::IntegerSX::getValue "

evaluate function ";

%feature("docstring")  CasADi::IntegerSX::getIntValue "";

%feature("docstring")  CasADi::IntegerSX::isSymbolic "";

%feature("docstring")  CasADi::IntegerSX::hasDep "";

%feature("docstring")  CasADi::IntegerSX::isZero "";

%feature("docstring")  CasADi::IntegerSX::isOne "";

%feature("docstring")  CasADi::IntegerSX::isMinusOne "";

%feature("docstring")  CasADi::IntegerSX::isNan "";

%feature("docstring")  CasADi::IntegerSX::isInf "";

%feature("docstring")  CasADi::IntegerSX::isMinusInf "";

%feature("docstring")  CasADi::IntegerSX::~IntegerSX "

Destructor. ";

%feature("docstring")  CasADi::IntegerSX::isInteger "

Properties. ";

%feature("docstring")  CasADi::IntegerSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::IntegerSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::IntegerSX::print "

print ";

%feature("docstring")  CasADi::IntegerSX::getName "";

%feature("docstring")  CasADi::IntegerSX::isEqual "

comparison ";

%feature("docstring")  CasADi::IntegerSX::isEqual "

comparison ";

%feature("docstring")  CasADi::IntegerSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::IntegerSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::IntegerSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::IntegerSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::IntegerSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::IntegerSX::marked "";

%feature("docstring")  CasADi::IntegerSX::mark "";


// File: classCasADi_1_1Integrator.xml
%feature("docstring") CasADi::Integrator "

Integrator abstract base class Solves the following initial value problem
(IVP):

F(t,x,der(x),z,p) == 0   x(t0) = x0   over a time interval [t0, tf].

NOTE: The ODE/DAE initial-value problem formulation in CasADi is being
replaced with a new formulation which solves an initial value problem (IVP)
coupled to a terminal value problem with differential equation given as an
implicit ODE coupled to an algebraic equation and a set of quadratures:
Initial conditions at t=t0     x(t0)  = x0     q(t0)  = 0 Forward
integration from t=t0 to t=tf          0 = fx(x,z,p,t,der(x)) Forward ODE
0 = fz(x,z,p,t)                  Forward algebraic equations     der(q) =
fq(x,z,p,t)                  Forward quadratures      Terminal conditions at
t=tf     rx(tf)  = rx0 rq(tf)  = 0      Backward integration from t=tf to
t=t0           0 = gx(rx,rz,x,z,p,t,der(rx))   Backward ODE           0 =
gz(rx,rz,x,z,p,t)           Backward algebraic equations     der(rq) =
gq(rx,rz,x,z,p,t)           Backward quadratures    where we assume that
both the forward and backwards integrations are index-1   (i.e. dfx/dxdot,
dfz/dz, dgz/drz, dgx/drxdot are invertible) and furthermore that    gx, gz
and gq have a linear dependency on rx and rz and that f_x and g_x have a
linear dependence on xdot and rxdot respectively.

The Integrator class provides some additional functionality, such as getting
the value of the state and/or sensitivities at certain time points. Controls
are assumed to be parametrized at this point.

The class does not specify how the function F above should be represented,
nor the method used for the integration, but assumes that it steps forward
in time (ruling out collocation in particular). The actual form of the
ODE/DAE is defined in the derived classes.

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Integrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Integrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Integrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Integrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Integrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Integrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Integrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Integrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Integrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Integrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Integrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Integrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Integrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Integrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Integrator::getOption "

get an option value ";

%feature("docstring")  CasADi::Integrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Integrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Integrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Integrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Integrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Integrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Integrator::makeUnique "";

%feature("docstring")  CasADi::Integrator::Integrator "

Default constructor. ";

%feature("docstring")  CasADi::Integrator::clone "

Clone. ";

%feature("docstring")  CasADi::Integrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::Integrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::Integrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Integrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Integrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Integrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Integrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::Integrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Integrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Integrator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Integrator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Integrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Integrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Integrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Integrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Integrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Integrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Integrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Integrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Integrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Integrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Integrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Integrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Integrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Integrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Integrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Integrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Integrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Integrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Integrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Integrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Integrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Integrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Integrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Integrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Integrator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Integrator::indexed_one_based "";

%feature("docstring")  CasADi::Integrator::indexed_zero_based "";

%feature("docstring")  CasADi::Integrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::Integrator::input "

Access input argument. ";

%feature("docstring")  CasADi::Integrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::Integrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Integrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Integrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Integrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Integrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Integrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Integrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Integrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Integrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Integrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Integrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Integrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Integrator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Integrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Integrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Integrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Integrator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Integrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Integrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Integrator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Integrator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Integrator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Integrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Integrator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Integrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Integrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Integrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Integrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Integrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Integrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Integrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Integrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Integrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Integrator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Integrator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Integrator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1IntegratorInternal.xml
%feature("docstring") CasADi::IntegratorInternal "

Internal storage for integrator related data.

Solves the following initial value problem (IVP):

F(t,x,der(x),z,p) == 0   x(t0) = x0   over a time interval [t0, tf].

NOTE: The ODE/DAE initial-value problem formulation in CasADi is being
replaced with a new formulation which solves an initial value problem (IVP)
coupled to a terminal value problem with differential equation given as an
implicit ODE coupled to an algebraic equation and a set of quadratures:
Initial conditions at t=t0     x(t0)  = x0     q(t0)  = 0 Forward
integration from t=t0 to t=tf          0 = fx(x,z,p,t,der(x)) Forward ODE
0 = fz(x,z,p,t)                  Forward algebraic equations     der(q) =
fq(x,z,p,t)                  Forward quadratures      Terminal conditions at
t=tf     rx(tf)  = rx0 rq(tf)  = 0      Backward integration from t=tf to
t=t0           0 = gx(rx,rz,x,z,p,t,der(rx))   Backward ODE           0 =
gz(rx,rz,x,z,p,t)           Backward algebraic equations     der(rq) =
gq(rx,rz,x,z,p,t)           Backward quadratures    where we assume that
both the forward and backwards integrations are index-1   (i.e. dfx/dxdot,
dfz/dz, dgz/drz, dgx/drxdot are invertible) and furthermore that    gx, gz
and gq have a linear dependency on rx and rz and that f_x and g_x have a
linear dependence on xdot and rxdot respectively.

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: integrator_internal.hpp ";

%feature("docstring")  CasADi::IntegratorInternal::IntegratorInternal "

Constructor. ";

%feature("docstring")  CasADi::IntegratorInternal::~IntegratorInternal "

Destructor. ";

%feature("docstring")  CasADi::IntegratorInternal::clone "

Clone. ";

%feature("docstring")  CasADi::IntegratorInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::IntegratorInternal::create "

Create a new integrator. ";

%feature("docstring")  CasADi::IntegratorInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::IntegratorInternal::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::IntegratorInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::IntegratorInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::IntegratorInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::IntegratorInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::IntegratorInternal::evaluate "

evaluate ";

%feature("docstring")  CasADi::IntegratorInternal::init "

Initialize. ";

%feature("docstring")  CasADi::IntegratorInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::IntegratorInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::IntegratorInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::IntegratorInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::IntegratorInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::IntegratorInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::IntegratorInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::IntegratorInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::IntegratorInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::IntegratorInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::IntegratorInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::IntegratorInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::IntegratorInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::IntegratorInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::IntegratorInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::IntegratorInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::IntegratorInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::IntegratorInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::IntegratorInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::IntegratorInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::IntegratorInternal::print "

Print. ";

%feature("docstring")  CasADi::IntegratorInternal::repr "

Print. ";

%feature("docstring")  CasADi::IntegratorInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::IntegratorInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::IntegratorInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::IntegratorInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::IntegratorInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::IntegratorInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::IntegratorInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::IntegratorInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::IntegratorInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::IntegratorInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IntegratorInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IntegratorInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::IntegratorInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::IntegratorInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IntegratorInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IntegratorInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::IntegratorInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::IntegratorInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::IntegratorInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::IntegratorInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::IntegratorInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::IntegratorInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IntegratorInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IntegratorInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IntegratorInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IntegratorInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IntegratorInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::IntegratorInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::IntegratorInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::IntegratorInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::IntegratorInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::IntegratorInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::IntegratorInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::IntegratorInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::IntegratorInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::IntegratorInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::IntegratorInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::IntegratorInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::IntegratorInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::IntegratorInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::IntegratorInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::IntegratorInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::IntegratorInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::IntegratorInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::IntegratorInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::IntegratorInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::IntegratorInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::IntegratorInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::IntegratorInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::IntegratorInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::IntegratorInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1IPInternal.xml
%feature("docstring") CasADi::IPInternal "

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | The linear   | CasADi::IPIn |
| r            | VER          | )            | solver to be | ternal       |
|              |              |              | used by the  |              |
|              |              |              | IP method    |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::IPIn |
| r_options    | Y            | )            | be passed to | ternal       |
|              |              |              | the linear   |              |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ip_internal.hpp ";

%feature("docstring")  CasADi::IPInternal::IPInternal "";

%feature("docstring")  CasADi::IPInternal::~IPInternal "";

%feature("docstring")  CasADi::IPInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::IPInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::IPInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::IPInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::IPInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::IPInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::IPInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::IPInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::IPInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::IPInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::IPInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::IPInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::IPInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::IPInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::IPInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::IPInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::IPInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::IPInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::IPInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::IPInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::IPInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::IPInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::IPInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::IPInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::IPInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::IPInternal::print "

Print. ";

%feature("docstring")  CasADi::IPInternal::repr "

Print. ";

%feature("docstring")  CasADi::IPInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::IPInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::IPInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::IPInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::IPInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::IPInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::IPInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::IPInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::IPInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::IPInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IPInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IPInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::IPInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::IPInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IPInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IPInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::IPInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::IPInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::IPInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::IPInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::IPInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::IPInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IPInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IPInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IPInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IPInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IPInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::IPInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::IPInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::IPInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::IPInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::IPInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::IPInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::IPInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::IPInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::IPInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::IPInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::IPInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::IPInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::IPInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::IPInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::IPInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::IPInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::IPInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::IPInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::IPInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::IPInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::IPInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::IPInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::IPInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::IPInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::IPInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1IPMethod.xml
%feature("docstring") CasADi::IPMethod "

Interior point method This method is experimental only. Do not attempt to
use if you do not intend to dive into the source code. The current purpose
of the class is to show how an IP method can be implemeted in CasADi. If
someone wants to take responsibility for this class and make it work, then
please contact the CasADi developers.

Joel Andersson

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | The linear   | CasADi::IPIn |
| r            | VER          | )            | solver to be | ternal       |
|              |              |              | used by the  |              |
|              |              |              | IP method    |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::IPIn |
| r_options    | Y            | )            | be passed to | ternal       |
|              |              |              | the linear   |              |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ip_method.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::IPMethod::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::IPMethod::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::IPMethod::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::IPMethod::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::IPMethod::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::IPMethod::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::IPMethod::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::IPMethod::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::IPMethod::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::IPMethod::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::IPMethod::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::IPMethod::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::IPMethod::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::IPMethod::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::IPMethod::getOption "

get an option value ";

%feature("docstring")  CasADi::IPMethod::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::IPMethod::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::IPMethod::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::IPMethod::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::IPMethod::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::IPMethod::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::IPMethod::makeUnique "";

%feature("docstring")  CasADi::IPMethod::IPMethod "

Default constructor. ";

%feature("docstring")  CasADi::IPMethod::IPMethod "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::IPMethod::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::IPMethod::reportConstraints "";

%feature("docstring")  CasADi::IPMethod::getReportConstraints "";

%feature("docstring")  CasADi::IPMethod::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::IPMethod::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::IPMethod::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::IPMethod::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::IPMethod::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::IPMethod::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::IPMethod::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::IPMethod::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::IPMethod::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::IPMethod::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::IPMethod::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::IPMethod::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::IPMethod::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::IPMethod::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::IPMethod::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::IPMethod::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::IPMethod::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::IPMethod::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::IPMethod::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::IPMethod::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::IPMethod::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::IPMethod::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::IPMethod::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::IPMethod::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IPMethod::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IPMethod::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::IPMethod::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::IPMethod::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IPMethod::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::IPMethod::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IPMethod::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::IPMethod::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IPMethod::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IPMethod::indexed_one_based "";

%feature("docstring")  CasADi::IPMethod::indexed_zero_based "";

%feature("docstring")  CasADi::IPMethod::input "

Const access input argument. ";

%feature("docstring")  CasADi::IPMethod::input "

Access input argument. ";

%feature("docstring")  CasADi::IPMethod::output "

Const access input argument. ";

%feature("docstring")  CasADi::IPMethod::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::IPMethod::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::IPMethod::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::IPMethod::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IPMethod::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IPMethod::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::IPMethod::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::IPMethod::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IPMethod::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IPMethod::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IPMethod::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IPMethod::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::IPMethod::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::IPMethod::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::IPMethod::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::IPMethod::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::IPMethod::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::IPMethod::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::IPMethod::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::IPMethod::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::IPMethod::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::IPMethod::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::IPMethod::clone "

Deep copy. ";

%feature("docstring")  CasADi::IPMethod::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::IPMethod::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::IPMethod::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::IPMethod::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::IPMethod::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::IPMethod::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::IPMethod::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::IPMethod::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::IPMethod::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::IPMethod::isInit "

Is initialized? ";

%feature("docstring")  CasADi::IPMethod::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::IPMethod::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::IPMethod::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::IPMethod::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1IpoptInternal.xml
%feature("docstring") CasADi::IpoptInternal "

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| accept_after | OT_INTEGER   | -1           | Accept a     | CasADi::Ipop |
| _max_steps   |              |              | trial point  | tInternal    |
|              |              |              | after        |              |
|              |              |              | maximal this |              |
|              |              |              | number of    |              |
|              |              |              | steps. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| accept_every | OT_STRING    | no           | Always       | CasADi::Ipop |
| _trial_step  |              |              | accept the   | tInternal    |
|              |              |              | first trial  |              |
|              |              |              | step. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      | 0.010        | \"Acceptance\" | CasADi::Ipop |
| ompl_inf_tol |              |              | threshold    | tInternal    |
|              |              |              | for the comp |              |
|              |              |              | lementarity  |              |
|              |              |              | conditions.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      | 0.010        | \"Acceptance\" | CasADi::Ipop |
| onstr_viol_t |              |              | threshold    | tInternal    |
| ol           |              |              | for the      |              |
|              |              |              | constraint   |              |
|              |              |              | violation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_d | OT_REAL      | 1.000e+10    | \"Acceptance\" | CasADi::Ipop |
| ual_inf_tol  |              |              | threshold    | tInternal    |
|              |              |              | for the dual |              |
|              |              |              | infeasibilit |              |
|              |              |              | y. (see      |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_i | OT_INTEGER   | 15           | Number of    | CasADi::Ipop |
| ter          |              |              | \"acceptable\" | tInternal    |
|              |              |              | iterates     |              |
|              |              |              | before       |              |
|              |              |              | triggering   |              |
|              |              |              | termination. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_o | OT_REAL      | 1.000e+20    | \"Acceptance\" | CasADi::Ipop |
| bj_change_to |              |              | stopping     | tInternal    |
| l            |              |              | criterion    |              |
|              |              |              | based on     |              |
|              |              |              | objective    |              |
|              |              |              | function     |              |
|              |              |              | change. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_t | OT_REAL      | 0.000        | \"Acceptable\" | CasADi::Ipop |
| ol           |              |              | convergence  | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | (relative).  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | automatic    | How to       | CasADi::Ipop |
|              |              |              | calculate    | tInternal    |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_STRING    | obj-constr-  | Globalizatio | CasADi::Ipop |
| globalizatio |              | filter       | n strategy   | tInternal    |
| n            |              |              | for the      |              |
|              |              |              | adaptive mu  |              |
|              |              |              | selection    |              |
|              |              |              | mode. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_STRING    | 2-norm-      | Norm used    | CasADi::Ipop |
| kkt_norm_typ |              | squared      | for the KKT  | tInternal    |
| e            |              |              | error in the |              |
|              |              |              | adaptive mu  |              |
|              |              |              | globalizatio |              |
|              |              |              | n            |              |
|              |              |              | strategies.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_REAL      | 1.000        | Sufficient   | CasADi::Ipop |
| kkterror_red |              |              | decrease     | tInternal    |
| _fact        |              |              | factor for   |              |
|              |              |              | \"kkt-error\"  |              |
|              |              |              | globalizatio |              |
|              |              |              | n strategy.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_INTEGER   | 4            | Maximum      | CasADi::Ipop |
| kkterror_red |              |              | number of    | tInternal    |
| _iters       |              |              | iterations   |              |
|              |              |              | requiring    |              |
|              |              |              | sufficient   |              |
|              |              |              | progress.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_REAL      | 0.800        | Determines   | CasADi::Ipop |
| monotone_ini |              |              | the initial  | tInternal    |
| t_factor     |              |              | value of the |              |
|              |              |              | barrier      |              |
|              |              |              | parameter    |              |
|              |              |              | when         |              |
|              |              |              | switching to |              |
|              |              |              | the monotone |              |
|              |              |              | mode. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| restore_prev |              |              | the previous | tInternal    |
| ious_iterate |              |              | iterate      |              |
|              |              |              | should be    |              |
|              |              |              | restored if  |              |
|              |              |              | the monotone |              |
|              |              |              | mode is      |              |
|              |              |              | entered.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_REAL      | 0            | (see IPOPT d | CasADi::Ipop |
| safeguard_fa |              |              | ocumentation | tInternal    |
| ctor         |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y  | OT_STRING    | primal       | Method to    | CasADi::Ipop |
|              |              |              | determine    | tInternal    |
|              |              |              | the step     |              |
|              |              |              | size for     |              |
|              |              |              | constraint   |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y_ | OT_REAL      | 10           | Tolerance    | CasADi::Ipop |
| tol          |              |              | for          | tInternal    |
|              |              |              | switching to |              |
|              |              |              | full         |              |
|              |              |              | equality     |              |
|              |              |              | multiplier   |              |
|              |              |              | steps. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_min_fr | OT_REAL      | 0.050        | Safety       | CasADi::Ipop |
| ac           |              |              | factor for   | tInternal    |
|              |              |              | the minimal  |              |
|              |              |              | step size    |              |
|              |              |              | (before      |              |
|              |              |              | switching to |              |
|              |              |              | restoration  |              |
|              |              |              | phase). (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_red_fa | OT_REAL      | 0.500        | Fractional   | CasADi::Ipop |
| ctor         |              |              | reduction of | tInternal    |
|              |              |              | the trial    |              |
|              |              |              | step size in |              |
|              |              |              | the          |              |
|              |              |              | backtracking |              |
|              |              |              | line search. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| barrier_tol_ | OT_REAL      | 10           | Factor for   | CasADi::Ipop |
| factor       |              |              | mu in        | tInternal    |
|              |              |              | barrier stop |              |
|              |              |              | test. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_frac   | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
|              |              |              | minimum      | tInternal    |
|              |              |              | relative     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | point to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_STRING    | constant     | Initializati | CasADi::Ipop |
| nit_method   |              |              | on method    | tInternal    |
|              |              |              | for bound    |              |
|              |              |              | multipliers  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_REAL      | 1            | Initial      | CasADi::Ipop |
| nit_val      |              |              | value for    | tInternal    |
|              |              |              | the bound    |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_r | OT_REAL      | 1000         | Threshold    | CasADi::Ipop |
| eset_thresho |              |              | for          | tInternal    |
| ld           |              |              | resetting    |              |
|              |              |              | bound        |              |
|              |              |              | multipliers  |              |
|              |              |              | after the    |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_push   | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
|              |              |              | minimum      | tInternal    |
|              |              |              | absolute     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | point to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_relax_ | OT_REAL      | 0.000        | Factor for   | CasADi::Ipop |
| factor       |              |              | initial      | tInternal    |
|              |              |              | relaxation   |              |
|              |              |              | of the       |              |
|              |              |              | bounds. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| check_deriva | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| tives_for_na |              |              | whether it   | tInternal    |
| ninf         |              |              | is desired   |              |
|              |              |              | to check for |              |
|              |              |              | Nan/Inf in   |              |
|              |              |              | derivative   |              |
|              |              |              | matrices     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| chi_cup      | OT_REAL      | 1.500        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| chi_hat      | OT_REAL      | 2            | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| chi_tilde    | OT_REAL      | 5            | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| compl_inf_to | OT_REAL      | 0.000        | Desired      | CasADi::Ipop |
| l            |              |              | threshold    | tInternal    |
|              |              |              | for the comp |              |
|              |              |              | lementarity  |              |
|              |              |              | conditions.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      | 1000         | Maximum      | CasADi::Ipop |
| init_max     |              |              | allowed      | tInternal    |
|              |              |              | least-square |              |
|              |              |              | guess of     |              |
|              |              |              | constraint   |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      | 0            | Threshold    | CasADi::Ipop |
| reset_thresh |              |              | for          | tInternal    |
| old          |              |              | resetting    |              |
|              |              |              | equality and |              |
|              |              |              | inequality   |              |
|              |              |              | multipliers  |              |
|              |              |              | after        |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| constr_viol_ | OT_REAL      | 0.000        | Desired      | CasADi::Ipop |
| tol          |              |              | threshold    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | constraint   |              |
|              |              |              | violation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| constraint_v | OT_STRING    | 1-norm       | Norm to be   | CasADi::Ipop |
| iolation_nor |              |              | used for the | tInternal    |
| m_type       |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the line     |              |
|              |              |              | search. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| corrector_co | OT_REAL      | 1            | Complementar | CasADi::Ipop |
| mpl_avrg_red |              |              | ity          | tInternal    |
| _fact        |              |              | tolerance    |              |
|              |              |              | factor for   |              |
|              |              |              | accepting    |              |
|              |              |              | corrector    |              |
|              |              |              | step (unsupp |              |
|              |              |              | orted!).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| corrector_ty | OT_STRING    | none         | The type of  | CasADi::Ipop |
| pe           |              |              | corrector    | tInternal    |
|              |              |              | steps that   |              |
|              |              |              | should be    |              |
|              |              |              | taken (unsup |              |
|              |              |              | ported!).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| delta        | OT_REAL      | 1            | Multiplier   | CasADi::Ipop |
|              |              |              | for          | tInternal    |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the          |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| delta_y_max  | OT_REAL      | 1.000e+12    | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| dependency_d | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| etection_wit |              |              | the right    | tInternal    |
| h_rhs        |              |              | hand sides   |              |
|              |              |              | of the       |              |
|              |              |              | constraints  |              |
|              |              |              | should be    |              |
|              |              |              | considered   |              |
|              |              |              | during       |              |
|              |              |              | dependency   |              |
|              |              |              | detection    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| dependency_d | OT_STRING    | none         | Indicates    | CasADi::Ipop |
| etector      |              |              | which linear | tInternal    |
|              |              |              | solver       |              |
|              |              |              | should be    |              |
|              |              |              | used to      |              |
|              |              |              | detect       |              |
|              |              |              | linearly     |              |
|              |              |              | dependent    |              |
|              |              |              | equality     |              |
|              |              |              | constraints. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    | none         | Enable       | CasADi::Ipop |
| est          |              |              | derivative   | tInternal    |
|              |              |              | checker (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_INTEGER   | -2           | Index of     | CasADi::Ipop |
| est_first_in |              |              | first        | tInternal    |
| dex          |              |              | quantity to  |              |
|              |              |              | be checked   |              |
|              |              |              | by           |              |
|              |              |              | derivative   |              |
|              |              |              | checker (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      | 0.000        | Size of the  | CasADi::Ipop |
| est_perturba |              |              | finite       | tInternal    |
| tion         |              |              | difference   |              |
|              |              |              | perturbation |              |
|              |              |              | in           |              |
|              |              |              | derivative   |              |
|              |              |              | test. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| est_print_al |              |              | whether      | tInternal    |
| l            |              |              | information  |              |
|              |              |              | for all      |              |
|              |              |              | estimated    |              |
|              |              |              | derivatives  |              |
|              |              |              | should be    |              |
|              |              |              | printed.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      | 0.000        | Threshold    | CasADi::Ipop |
| est_tol      |              |              | for          | tInternal    |
|              |              |              | indicating   |              |
|              |              |              | wrong        |              |
|              |              |              | derivative.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| diverging_it | OT_REAL      | 1.000e+20    | Threshold    | CasADi::Ipop |
| erates_tol   |              |              | for maximal  | tInternal    |
|              |              |              | value of     |              |
|              |              |              | primal       |              |
|              |              |              | iterates.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| dual_inf_tol | OT_REAL      | 1            | Desired      | CasADi::Ipop |
|              |              |              | threshold    | tInternal    |
|              |              |              | for the dual |              |
|              |              |              | infeasibilit |              |
|              |              |              | y. (see      |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| epsilon_c    | OT_REAL      | 0.010        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| eta_min      | OT_REAL      | 10           | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| eta_penalty  | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the Armijo   |              |
|              |              |              | condition    |              |
|              |              |              | for the      |              |
|              |              |              | penalty      |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| eta_phi      | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the Armijo   |              |
|              |              |              | condition.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| evaluate_ori | OT_STRING    | yes          | Determines   | CasADi::Ipop |
| g_obj_at_res |              |              | if the       | tInternal    |
| to_trial     |              |              | original     |              |
|              |              |              | objective    |              |
|              |              |              | function     |              |
|              |              |              | should be    |              |
|              |              |              | evaluated at |              |
|              |              |              | restoration  |              |
|              |              |              | phase trial  |              |
|              |              |              | points. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | False        | Expand the   | CasADi::Ipop |
|              |              |              | objective    | tInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | False        | Expand the   | CasADi::Ipop |
|              |              |              | constraint   | tInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_STRING    | no           | Enable       | CasADi::Ipop |
| sible_proble |              |              | heuristics   | tInternal    |
| m            |              |              | to quickly   |              |
|              |              |              | detect an    |              |
|              |              |              | infeasible   |              |
|              |              |              | problem.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      | 0.001        | Threshold    | CasADi::Ipop |
| sible_proble |              |              | for          | tInternal    |
| m_ctol       |              |              | disabling \"e |              |
|              |              |              | xpect_infeas |              |
|              |              |              | ible_problem |              |
|              |              |              | \" option.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      | 100000000    | Multiplier   | CasADi::Ipop |
| sible_proble |              |              | threshold    | tInternal    |
| m_ytol       |              |              | for          |              |
|              |              |              | activating \" |              |
|              |              |              | expect_infea |              |
|              |              |              | sible_proble |              |
|              |              |              | m\" option.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| fast_des_fac | OT_REAL      | 0.100        | a parameter  | CasADi::Ipop |
| t            |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| fast_step_co | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| mputation    |              |              | the linear   | tInternal    |
|              |              |              | system       |              |
|              |              |              | should be    |              |
|              |              |              | solved       |              |
|              |              |              | quickly.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| file_print_l | OT_INTEGER   | 5            | Verbosity    | CasADi::Ipop |
| evel         |              |              | level for    | tInternal    |
|              |              |              | output file. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| filter_margi | OT_REAL      | 0.000        | Factor       | CasADi::Ipop |
| n_fact       |              |              | determining  | tInternal    |
|              |              |              | width of     |              |
|              |              |              | margin for   |              |
|              |              |              | obj-constr-  |              |
|              |              |              | filter       |              |
|              |              |              | adaptive glo |              |
|              |              |              | balization   |              |
|              |              |              | strategy.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| filter_max_m | OT_REAL      | 1            | Maximum      | CasADi::Ipop |
| argin        |              |              | width of     | tInternal    |
|              |              |              | margin in    |              |
|              |              |              | obj-constr-  |              |
|              |              |              | filter       |              |
|              |              |              | adaptive glo |              |
|              |              |              | balization   |              |
|              |              |              | strategy.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| filter_reset | OT_INTEGER   | 5            | Number of    | CasADi::Ipop |
| _trigger     |              |              | iterations   | tInternal    |
|              |              |              | that trigger |              |
|              |              |              | the filter   |              |
|              |              |              | reset. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| findiff_pert | OT_REAL      | 0.000        | Size of the  | CasADi::Ipop |
| urbation     |              |              | finite       | tInternal    |
|              |              |              | difference   |              |
|              |              |              | perturbation |              |
|              |              |              | for          |              |
|              |              |              | derivative a |              |
|              |              |              | pproximation |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| first_hessia | OT_REAL      | 0.000        | Size of      | CasADi::Ipop |
| n_perturbati |              |              | first x-s    | tInternal    |
| on           |              |              | perturbation |              |
|              |              |              | tried. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| fixed_mu_ora | OT_STRING    | average_comp | Oracle for   | CasADi::Ipop |
| cle          |              | l            | the barrier  | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | when         |              |
|              |              |              | switching to |              |
|              |              |              | fixed mode.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| fixed_variab | OT_STRING    | make_paramet | Determines   | CasADi::Ipop |
| le_treatment |              | er           | how fixed    | tInternal    |
|              |              |              | variables    |              |
|              |              |              | should be    |              |
|              |              |              | handled.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_hat    | OT_REAL      | 0.040        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_phi    | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the filter   |              |
|              |              |              | margin for   |              |
|              |              |              | the barrier  |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_theta  | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the filter   |              |
|              |              |              | margin for   |              |
|              |              |              | the          |              |
|              |              |              | constraint   |              |
|              |              |              | violation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_tilde  | OT_REAL      | 4            | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | False        | Use Gauss    | CasADi::Ipop |
|              |              |              | Newton       | tInternal    |
|              |              |              | Hessian appr |              |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | False        | Generate an  | CasADi::Ipop |
| sian         |              |              | exact        | tInternal    |
|              |              |              | Hessian of   |              |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | True         | Generate an  | CasADi::Ipop |
| obian        |              |              | exact        | tInternal    |
|              |              |              | Jacobian of  |              |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | exact        | Indicates    | CasADi::Ipop |
| oximation    |              |              | what Hessian | tInternal    |
|              |              |              | information  |              |
|              |              |              | is to be     |              |
|              |              |              | used. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | nonlinear-   | Indicates in | CasADi::Ipop |
| oximation_sp |              | variables    | which        | tInternal    |
| ace          |              |              | subspace the |              |
|              |              |              | Hessian      |              |
|              |              |              | information  |              |
|              |              |              | is to be app |              |
|              |              |              | roximated.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_cons | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| tant         |              |              | whether the  | tInternal    |
|              |              |              | problem is a |              |
|              |              |              | quadratic    |              |
|              |              |              | problem (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| honor_origin | OT_STRING    | yes          | Indicates    | CasADi::Ipop |
| al_bounds    |              |              | whether      | tInternal    |
|              |              |              | final points |              |
|              |              |              | should be    |              |
|              |              |              | projected    |              |
|              |              |              | into         |              |
|              |              |              | original     |              |
|              |              |              | bounds. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | False        | If set to    | CasADi::Ipop |
| _vec         |              |              | true, the    | tInternal    |
|              |              |              | input shape  |              |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| inf_pr_outpu | OT_STRING    | original     | Determines   | CasADi::Ipop |
| t            |              |              | what value   | tInternal    |
|              |              |              | is printed   |              |
|              |              |              | in the       |              |
|              |              |              | \"inf_pr\"     |              |
|              |              |              | output       |              |
|              |              |              | column. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        |              | A function   | CasADi::Ipop |
| llback       |              |              | that will be | tInternal    |
|              |              |              | called at    |              |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | False        | If set to    | CasADi::Ipop |
| llback_ignor |              |              | true, errors | tInternal    |
| e_errors     |              |              | thrown by it |              |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::Ipop |
| llback_step  |              |              | the callback | tInternal    |
|              |              |              | function     |              |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_c_consta | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| nt           |              |              | whether all  | tInternal    |
|              |              |              | equality     |              |
|              |              |              | constraints  |              |
|              |              |              | are linear   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_d_consta | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| nt           |              |              | whether all  | tInternal    |
|              |              |              | inequality   |              |
|              |              |              | constraints  |              |
|              |              |              | are linear   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | False        | Create the a | CasADi::Ipop |
|              |              |              | Jacobian     | tInternal    |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_app | OT_STRING    | exact        | Specifies    | CasADi::Ipop |
| roximation   |              |              | technique to | tInternal    |
|              |              |              | compute      |              |
|              |              |              | constraint   |              |
|              |              |              | Jacobian     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG |              | Function     | CasADi::Ipop |
| erator       | ENERATOR     |              | pointer that | tInternal    |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_reg | OT_REAL      | 0.250        | Exponent for | CasADi::Ipop |
| ularization_ |              |              | mu in the re | tInternal    |
| exponent     |              |              | gularization |              |
|              |              |              | for rank-    |              |
|              |              |              | deficient    |              |
|              |              |              | constraint   |              |
|              |              |              | Jacobians.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_reg | OT_REAL      | 0.000        | Size of the  | CasADi::Ipop |
| ularization_ |              |              | regularizati | tInternal    |
| value        |              |              | on for rank- |              |
|              |              |              | deficient    |              |
|              |              |              | constraint   |              |
|              |              |              | Jacobians.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_d      | OT_REAL      | 0.000        | Weight for   | CasADi::Ipop |
|              |              |              | linear       | tInternal    |
|              |              |              | damping term |              |
|              |              |              | (to handle   |              |
|              |              |              | one-sided    |              |
|              |              |              | bounds).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_sigma  | OT_REAL      | 1.000e+10    | Factor       | CasADi::Ipop |
|              |              |              | limiting the | tInternal    |
|              |              |              | deviation of |              |
|              |              |              | dual         |              |
|              |              |              | variables    |              |
|              |              |              | from primal  |              |
|              |              |              | estimates.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_soc    | OT_REAL      | 0.990        | Factor in    | CasADi::Ipop |
|              |              |              | the          | tInternal    |
|              |              |              | sufficient   |              |
|              |              |              | reduction    |              |
|              |              |              | rule for     |              |
|              |              |              | second order |              |
|              |              |              | correction.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_x_dis  | OT_REAL      | 100          | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_y_dis  | OT_REAL      | 10000        | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| least_square | OT_STRING    | no           | Least square | CasADi::Ipop |
| _init_duals  |              |              | initializati | tInternal    |
|              |              |              | on of all    |              |
|              |              |              | dual         |              |
|              |              |              | variables    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| least_square | OT_STRING    | no           | Least square | CasADi::Ipop |
| _init_primal |              |              | initializati | tInternal    |
|              |              |              | on of the    |              |
|              |              |              | primal       |              |
|              |              |              | variables    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | sherman-     | Strategy for | CasADi::Ipop |
| ry_aug_solve |              | morrison     | solving the  | tInternal    |
| r            |              |              | augmented    |              |
|              |              |              | system for   |              |
|              |              |              | low-rank     |              |
|              |              |              | Hessian.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_REAL      | 1            | Value for B0 | CasADi::Ipop |
| ry_init_val  |              |              | in low-rank  | tInternal    |
|              |              |              | update. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_REAL      | 100000000    | Upper bound  | CasADi::Ipop |
| ry_init_val_ |              |              | on value for | tInternal    |
| max          |              |              | B0 in low-   |              |
|              |              |              | rank update. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_REAL      | 0.000        | Lower bound  | CasADi::Ipop |
| ry_init_val_ |              |              | on value for | tInternal    |
| min          |              |              | B0 in low-   |              |
|              |              |              | rank update. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | scalar1      | Initializati | CasADi::Ipop |
| ry_initializ |              |              | on strategy  | tInternal    |
| ation        |              |              | for the      |              |
|              |              |              | limited      |              |
|              |              |              | memory       |              |
|              |              |              | quasi-Newton |              |
|              |              |              | approximatio |              |
|              |              |              | n. (see      |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   | 6            | Maximum size | CasADi::Ipop |
| ry_max_histo |              |              | of the       | tInternal    |
| ry           |              |              | history for  |              |
|              |              |              | the limited  |              |
|              |              |              | quasi-Newton |              |
|              |              |              | Hessian appr |              |
|              |              |              | oximation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   | 2            | Threshold    | CasADi::Ipop |
| ry_max_skipp |              |              | for          | tInternal    |
| ing          |              |              | successive   |              |
|              |              |              | iterations   |              |
|              |              |              | where update |              |
|              |              |              | is skipped.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | no           | Determines   | CasADi::Ipop |
| ry_special_f |              |              | if the       | tInternal    |
| or_resto     |              |              | quasi-Newton |              |
|              |              |              | updates      |              |
|              |              |              | should be    |              |
|              |              |              | special      |              |
|              |              |              | during the   |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | bfgs         | Quasi-Newton | CasADi::Ipop |
| ry_update_ty |              |              | update       | tInternal    |
| pe           |              |              | formula for  |              |
|              |              |              | the limited  |              |
|              |              |              | memory appro |              |
|              |              |              | ximation.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| line_search_ | OT_STRING    | filter       | Globalizatio | CasADi::Ipop |
| method       |              |              | n method     | tInternal    |
|              |              |              | used in      |              |
|              |              |              | backtracking |              |
|              |              |              | line search  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_scali | OT_STRING    | yes          | Flag         | CasADi::Ipop |
| ng_on_demand |              |              | indicating   | tInternal    |
|              |              |              | that linear  |              |
|              |              |              | scaling is   |              |
|              |              |              | only done if |              |
|              |              |              | it seems     |              |
|              |              |              | required.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | ma27         | Linear       | CasADi::Ipop |
| r            |              |              | solver used  | tInternal    |
|              |              |              | for step com |              |
|              |              |              | putations.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_syste | OT_STRING    | mc19         | Method for   | CasADi::Ipop |
| m_scaling    |              |              | scaling the  | tInternal    |
|              |              |              | linear       |              |
|              |              |              | system. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_ignore_ | OT_STRING    | no           | Enables      | CasADi::Ipop |
| singularity  |              |              | MA27's       | tInternal    |
|              |              |              | ability to   |              |
|              |              |              | solve a      |              |
|              |              |              | linear       |              |
|              |              |              | system even  |              |
|              |              |              | if the       |              |
|              |              |              | matrix is    |              |
|              |              |              | singular.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_la_init | OT_REAL      | 5            | Real         | CasADi::Ipop |
| _factor      |              |              | workspace    | tInternal    |
|              |              |              | memory for   |              |
|              |              |              | MA27. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_liw_ini | OT_REAL      | 5            | Integer      | CasADi::Ipop |
| t_factor     |              |              | workspace    | tInternal    |
|              |              |              | memory for   |              |
|              |              |              | MA27. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_meminc_ | OT_REAL      | 10           | Increment    | CasADi::Ipop |
| factor       |              |              | factor for   | tInternal    |
|              |              |              | workspace    |              |
|              |              |              | size for     |              |
|              |              |              | MA27. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtol  | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA27. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtolm | OT_REAL      | 0.000        | Maximum      | CasADi::Ipop |
| ax           |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA27. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_skip_in | OT_STRING    | no           | Always       | CasADi::Ipop |
| ertia_check  |              |              | pretend      | tInternal    |
|              |              |              | inertia is   |              |
|              |              |              | correct.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma28_pivtol  | OT_REAL      | 0.010        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for linear   |              |
|              |              |              | solver MA28. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_automat | OT_STRING    | yes          | Controls     | CasADi::Ipop |
| ic_scaling   |              |              | MA57         | tInternal    |
|              |              |              | automatic    |              |
|              |              |              | scaling (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_block_s | OT_INTEGER   | 16           | Controls     | CasADi::Ipop |
| ize          |              |              | block size   | tInternal    |
|              |              |              | used by      |              |
|              |              |              | Level 3 BLAS |              |
|              |              |              | in MA57BD    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_node_am | OT_INTEGER   | 16           | Node         | CasADi::Ipop |
| algamation   |              |              | amalgamation | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivot_o | OT_INTEGER   | 5            | Controls     | CasADi::Ipop |
| rder         |              |              | pivot order  | tInternal    |
|              |              |              | in MA57 (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtol  | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA57. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtolm | OT_REAL      | 0.000        | Maximum      | CasADi::Ipop |
| ax           |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA57. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pre_all | OT_REAL      | 1.050        | Safety       | CasADi::Ipop |
| oc           |              |              | factor for   | tInternal    |
|              |              |              | work space   |              |
|              |              |              | memory       |              |
|              |              |              | allocation   |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA57. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_small_p | OT_INTEGER   | 0            | If set to 1, | CasADi::Ipop |
| ivot_flag    |              |              | then when    | tInternal    |
|              |              |              | small        |              |
|              |              |              | entries      |              |
|              |              |              | defined by   |              |
|              |              |              | CNTL(2) are  |              |
|              |              |              | detected     |              |
|              |              |              | they are     |              |
|              |              |              | removed and  |              |
|              |              |              | the correspo |              |
|              |              |              | nding pivots |              |
|              |              |              | placed at    |              |
|              |              |              | the end of   |              |
|              |              |              | the factoriz |              |
|              |              |              | ation. This  |              |
|              |              |              | can be       |              |
|              |              |              | particularly |              |
|              |              |              | efficient if |              |
|              |              |              | the matrix   |              |
|              |              |              | is highly    |              |
|              |              |              | rank         |              |
|              |              |              | deficient.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_nemin   | OT_INTEGER   | 32           | Node         | CasADi::Ipop |
|              |              |              | Amalgamation | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_print_l | OT_INTEGER   | 0            | Debug        | CasADi::Ipop |
| evel         |              |              | printing     | tInternal    |
|              |              |              | level for    |              |
|              |              |              | the linear   |              |
|              |              |              | solver MA86  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_small   | OT_REAL      | 0.000        | Zero Pivot   | CasADi::Ipop |
|              |              |              | Threshold    | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_static  | OT_REAL      | 0            | Static       | CasADi::Ipop |
|              |              |              | Pivoting     | tInternal    |
|              |              |              | Threshold    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_u       | OT_REAL      | 0.000        | Pivoting     | CasADi::Ipop |
|              |              |              | Threshold    | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_umax    | OT_REAL      | 0.000        | Maximum      | CasADi::Ipop |
|              |              |              | Pivoting     | tInternal    |
|              |              |              | Threshold    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| magic_steps  | OT_STRING    | no           | Enables      | CasADi::Ipop |
|              |              |              | magic steps. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_cpu_time | OT_REAL      | 1000000      | Maximum      | CasADi::Ipop |
|              |              |              | number of    | tInternal    |
|              |              |              | CPU seconds. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_filter_r | OT_INTEGER   | 5            | Maximal      | CasADi::Ipop |
| esets        |              |              | allowed      | tInternal    |
|              |              |              | number of    |              |
|              |              |              | filter       |              |
|              |              |              | resets (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| max_hessian_ | OT_REAL      | 1.000e+20    | Maximum      | CasADi::Ipop |
| perturbation |              |              | value of reg | tInternal    |
|              |              |              | ularization  |              |
|              |              |              | parameter    |              |
|              |              |              | for handling |              |
|              |              |              | negative     |              |
|              |              |              | curvature.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_iter     | OT_INTEGER   | 3000         | Maximum      | CasADi::Ipop |
|              |              |              | number of    | tInternal    |
|              |              |              | iterations.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_refineme | OT_INTEGER   | 10           | Maximum      | CasADi::Ipop |
| nt_steps     |              |              | number of    | tInternal    |
|              |              |              | iterative    |              |
|              |              |              | refinement   |              |
|              |              |              | steps per    |              |
|              |              |              | linear       |              |
|              |              |              | system       |              |
|              |              |              | solve. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| max_resto_it | OT_INTEGER   | 3000000      | Maximum      | CasADi::Ipop |
| er           |              |              | number of    | tInternal    |
|              |              |              | successive   |              |
|              |              |              | iterations   |              |
|              |              |              | in           |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| max_soc      | OT_INTEGER   | 4            | Maximum      | CasADi::Ipop |
|              |              |              | number of    | tInternal    |
|              |              |              | second order |              |
|              |              |              | correction   |              |
|              |              |              | trial steps  |              |
|              |              |              | at each      |              |
|              |              |              | iteration.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_soft_res | OT_INTEGER   | 10           | Maximum      | CasADi::Ipop |
| to_iters     |              |              | number of    | tInternal    |
|              |              |              | iterations   |              |
|              |              |              | performed    |              |
|              |              |              | successively |              |
|              |              |              | in soft      |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mehrotra_alg | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| orithm       |              |              | we want to   | tInternal    |
|              |              |              | do           |              |
|              |              |              | Mehrotra's   |              |
|              |              |              | algorithm.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| min_alpha_pr | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
| imal         |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| min_hessian_ | OT_REAL      | 0.000        | Smallest     | CasADi::Ipop |
| perturbation |              |              | perturbation | tInternal    |
|              |              |              | of the       |              |
|              |              |              | Hessian      |              |
|              |              |              | block. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| min_refineme | OT_INTEGER   | 1            | Minimum      | CasADi::Ipop |
| nt_steps     |              |              | number of    | tInternal    |
|              |              |              | iterative    |              |
|              |              |              | refinement   |              |
|              |              |              | steps per    |              |
|              |              |              | linear       |              |
|              |              |              | system       |              |
|              |              |              | solve. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::IpoptIn |
|              |              |              | uts)  (eval_ | ternal       |
|              |              |              | f|eval_g|eva |              |
|              |              |              | l_jac_g|eval |              |
|              |              |              | _grad_f)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_allow_fas | OT_STRING    | yes          | Allow        | CasADi::Ipop |
| t_monotone_d |              |              | skipping of  | tInternal    |
| ecrease      |              |              | barrier      |              |
|              |              |              | problem if   |              |
|              |              |              | barrier test |              |
|              |              |              | is already   |              |
|              |              |              | met. (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_init      | OT_REAL      | 0.100        | Initial      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | the barrier  |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_linear_de | OT_REAL      | 0.200        | Determines   | CasADi::Ipop |
| crease_facto |              |              | linear       | tInternal    |
| r            |              |              | decrease     |              |
|              |              |              | rate of      |              |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_max       | OT_REAL      | 100000       | Maximum      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_max_fact  | OT_REAL      | 1000         | Factor for i | CasADi::Ipop |
|              |              |              | nitializatio | tInternal    |
|              |              |              | n of maximum |              |
|              |              |              | value for    |              |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_min       | OT_REAL      | 0.000        | Minimum      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_oracle    | OT_STRING    | quality-     | Oracle for a | CasADi::Ipop |
|              |              | function     | new barrier  | tInternal    |
|              |              |              | parameter in |              |
|              |              |              | the adaptive |              |
|              |              |              | strategy.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_strategy  | OT_STRING    | monotone     | Update       | CasADi::Ipop |
|              |              |              | strategy for | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_superline | OT_REAL      | 1.500        | Determines   | CasADi::Ipop |
| ar_decrease_ |              |              | superlinear  | tInternal    |
| power        |              |              | decrease     |              |
|              |              |              | rate of      |              |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_target    | OT_REAL      | 0            | Desired      | CasADi::Ipop |
|              |              |              | value of com | tInternal    |
|              |              |              | plementarity |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| mult_diverg_ | OT_REAL      | 0.000        | tolerance    | CasADi::Ipop |
| feasibility_ |              |              | for deciding | tInternal    |
| tol          |              |              | if the       |              |
|              |              |              | multipliers  |              |
|              |              |              | are          |              |
|              |              |              | diverging    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mult_diverg_ | OT_REAL      | 100000000    | tolerance    | CasADi::Ipop |
| y_tol        |              |              | for deciding | tInternal    |
|              |              |              | if the       |              |
|              |              |              | multipliers  |              |
|              |              |              | are          |              |
|              |              |              | diverging    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_dep_to | OT_REAL      | -1           | Pivot        | CasADi::Ipop |
| l            |              |              | threshold    | tInternal    |
|              |              |              | for          |              |
|              |              |              | detection of |              |
|              |              |              | linearly     |              |
|              |              |              | dependent    |              |
|              |              |              | constraints  |              |
|              |              |              | in MUMPS.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_mem_pe | OT_INTEGER   | 1000         | Percentage   | CasADi::Ipop |
| rcent        |              |              | increase in  | tInternal    |
|              |              |              | the          |              |
|              |              |              | estimated    |              |
|              |              |              | working      |              |
|              |              |              | space for    |              |
|              |              |              | MUMPS. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_permut | OT_INTEGER   | 7            | Controls     | CasADi::Ipop |
| ing_scaling  |              |              | permuting    | tInternal    |
|              |              |              | and scaling  |              |
|              |              |              | in MUMPS     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivot_ | OT_INTEGER   | 7            | Controls     | CasADi::Ipop |
| order        |              |              | pivot order  | tInternal    |
|              |              |              | in MUMPS     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver       |              |
|              |              |              | MUMPS. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      | 0.100        | Maximum      | CasADi::Ipop |
| max          |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver       |              |
|              |              |              | MUMPS. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_scalin | OT_INTEGER   | 77           | Controls     | CasADi::Ipop |
| g            |              |              | scaling in   | tInternal    |
|              |              |              | MUMPS (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | unnamed_shar | n/a          | CasADi::Ipop |
|              |              | ed_object    |              | tInternal    |
+--------------+--------------+--------------+--------------+--------------+
| neg_curv_tes | OT_REAL      | 0            | Tolerance    | CasADi::Ipop |
| t_tol        |              |              | for          | tInternal    |
|              |              |              | heuristic to |              |
|              |              |              | ignore wrong |              |
|              |              |              | inertia.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| never_use_fa | OT_STRING    | no           | Toggle to    | CasADi::Ipop |
| ct_cgpen_dir |              |              | switch off   | tInternal    |
| ection       |              |              | the fast     |              |
|              |              |              | Chen-        |              |
|              |              |              | Goldfarb     |              |
|              |              |              | direction    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| never_use_pi | OT_STRING    | no           | Toggle to    | CasADi::Ipop |
| ecewise_pena |              |              | switch off   | tInternal    |
| lty_ls       |              |              | the          |              |
|              |              |              | piecewise    |              |
|              |              |              | penalty      |              |
|              |              |              | method (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_lower_bo | OT_REAL      | -1.000e+19   | any bound    | CasADi::Ipop |
| und_inf      |              |              | less or      | tInternal    |
|              |              |              | equal this   |              |
|              |              |              | value will   |              |
|              |              |              | be           |              |
|              |              |              | considered   |              |
|              |              |              | -inf (i.e.   |              |
|              |              |              | not lower    |              |
|              |              |              | bounded).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 0            | Target value | CasADi::Ipop |
| constr_targe |              |              | for          | tInternal    |
| t_gradient   |              |              | constraint   |              |
|              |              |              | function     |              |
|              |              |              | gradient     |              |
|              |              |              | size. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 100          | Maximum      | CasADi::Ipop |
| max_gradient |              |              | gradient     | tInternal    |
|              |              |              | after NLP    |              |
|              |              |              | scaling.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_STRING    | gradient-    | Select the   | CasADi::Ipop |
| method       |              | based        | technique    | tInternal    |
|              |              |              | used for     |              |
|              |              |              | scaling the  |              |
|              |              |              | NLP. (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 0.000        | Minimum      | CasADi::Ipop |
| min_value    |              |              | value of     | tInternal    |
|              |              |              | gradient-    |              |
|              |              |              | based        |              |
|              |              |              | scaling      |              |
|              |              |              | values. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 0            | Target value | CasADi::Ipop |
| obj_target_g |              |              | for          | tInternal    |
| radient      |              |              | objective    |              |
|              |              |              | function     |              |
|              |              |              | gradient     |              |
|              |              |              | size. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_upper_bo | OT_REAL      | 1.000e+19    | any bound    | CasADi::Ipop |
| und_inf      |              |              | greater or   | tInternal    |
|              |              |              | this value   |              |
|              |              |              | will be      |              |
|              |              |              | considered   |              |
|              |              |              | +inf (i.e.   |              |
|              |              |              | not upper    |              |
|              |              |              | bounded).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nu_inc       | OT_REAL      | 0.000        | Increment of | CasADi::Ipop |
|              |              |              | the penalty  | tInternal    |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nu_init      | OT_REAL      | 0.000        | Initial      | CasADi::Ipop |
|              |              |              | value of the | tInternal    |
|              |              |              | penalty      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| num_linear_v | OT_INTEGER   | 0            | Number of    | CasADi::Ipop |
| ariables     |              |              | linear       | tInternal    |
|              |              |              | variables    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::Ipop |
| j_dir        |              |              | adjoint      | tInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::Ipop |
| d_dir        |              |              | forward      | tInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | False        | Calculate    | CasADi::Ipop |
| ian          |              |              | Hessians     | tInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | False        | Calculate    | CasADi::Ipop |
| bian         |              |              | Jacobians    | tInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| obj_max_inc  | OT_REAL      | 5            | Determines   | CasADi::Ipop |
|              |              |              | the upper    | tInternal    |
|              |              |              | bound on the |              |
|              |              |              | acceptable   |              |
|              |              |              | increase of  |              |
|              |              |              | barrier      |              |
|              |              |              | objective    |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| obj_scaling_ | OT_REAL      | 1            | Scaling      | CasADi::Ipop |
| factor       |              |              | factor for   | tInternal    |
|              |              |              | the          |              |
|              |              |              | objective    |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| option_file_ | OT_STRING    |              | File name of | CasADi::Ipop |
| name         |              |              | options file | tInternal    |
|              |              |              | (to          |              |
|              |              |              | overwrite    |              |
|              |              |              | default).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| output_file  | OT_STRING    |              | File name of | CasADi::Ipop |
|              |              |              | desired      | tInternal    |
|              |              |              | output file  |              |
|              |              |              | (leave unset |              |
|              |              |              | for no file  |              |
|              |              |              | output).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | False        | Expect F, G, | CasADi::Ipop |
|              |              |              | H, J to have | tInternal    |
|              |              |              | an           |              |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_INTEGER   | 5000         | Maximum Size | CasADi::Ipop |
| _coarse_size |              |              | of Coarse    | tInternal    |
|              |              |              | Grid Matrix  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 0.500        | dropping     | CasADi::Ipop |
| _dropping_fa |              |              | value for    | tInternal    |
| ctor         |              |              | incomplete   |              |
|              |              |              | factor (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 0.100        | dropping     | CasADi::Ipop |
| _dropping_sc |              |              | value for    | tInternal    |
| hur          |              |              | sparsify     |              |
|              |              |              | schur        |              |
|              |              |              | complement   |              |
|              |              |              | factor (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 5000000      | (see IPOPT d | CasADi::Ipop |
| _inverse_nor |              |              | ocumentation | tInternal    |
| m_factor     |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_INTEGER   | 10           | Maximum Size | CasADi::Ipop |
| _max_levels  |              |              | of Grid      | tInternal    |
|              |              |              | Levels (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_INTEGER   | 10000000     | max fill for | CasADi::Ipop |
| _max_row_fil |              |              | each row     | tInternal    |
| l            |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 0.000        | Relative     | CasADi::Ipop |
| _relative_to |              |              | Residual     | tInternal    |
| l            |              |              | Convergence  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_STRING    | no           | Switch on    | CasADi::Ipop |
| ative        |              |              | iterative    | tInternal    |
|              |              |              | solver in    |              |
|              |              |              | Pardiso      |              |
|              |              |              | library (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_matc | OT_STRING    | complete+2x2 | Matching     | CasADi::Ipop |
| hing_strateg |              |              | strategy to  | tInternal    |
| y            |              |              | be used by   |              |
|              |              |              | Pardiso (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_max_ | OT_INTEGER   | 4            | Maximal      | CasADi::Ipop |
| droptol_corr |              |              | number of    | tInternal    |
| ections      |              |              | decreases of |              |
|              |              |              | drop         |              |
|              |              |              | tolerance    |              |
|              |              |              | during one   |              |
|              |              |              | solve. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_max_ | OT_INTEGER   | 500          | Maximum      | CasADi::Ipop |
| iter         |              |              | number of    | tInternal    |
|              |              |              | Krylov-      |              |
|              |              |              | Subspace     |              |
|              |              |              | Iteration    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_msgl | OT_INTEGER   | 0            | Pardiso      | CasADi::Ipop |
| vl           |              |              | message      | tInternal    |
|              |              |              | level (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_out_ | OT_INTEGER   | 0            | Enables out- | CasADi::Ipop |
| of_core_powe |              |              | of-core      | tInternal    |
| r            |              |              | variant of   |              |
|              |              |              | Pardiso (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_redo | OT_STRING    | no           | Toggle for   | CasADi::Ipop |
| _symbolic_fa |              |              | handling     | tInternal    |
| ct_only_if_i |              |              | case when    |              |
| nertia_wrong |              |              | elements     |              |
|              |              |              | were         |              |
|              |              |              | perturbed by |              |
|              |              |              | Pardiso.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_repe | OT_STRING    | no           | Interpretati | CasADi::Ipop |
| ated_perturb |              |              | on of        | tInternal    |
| ation_means_ |              |              | perturbed    |              |
| singular     |              |              | elements.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_skip | OT_STRING    | no           | Always       | CasADi::Ipop |
| _inertia_che |              |              | pretend      | tInternal    |
| ck           |              |              | inertia is   |              |
|              |              |              | correct.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pass_nonline | OT_BOOLEAN   | true         |              | CasADi::Ipop |
| ar_variables |              |              |              | tInternal    |
+--------------+--------------+--------------+--------------+--------------+
| pen_des_fact | OT_REAL      | 0.200        | a parameter  | CasADi::Ipop |
|              |              |              | used in      | tInternal    |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | computation  |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pen_init_fac | OT_REAL      | 50           | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | choose       |              |
|              |              |              | initial      |              |
|              |              |              | penalty para |              |
|              |              |              | meterswhen   |              |
|              |              |              | the          |              |
|              |              |              | regularized  |              |
|              |              |              | Newton       |              |
|              |              |              | method is    |              |
|              |              |              | used. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pen_theta_ma | OT_REAL      | 10000        | Determines   | CasADi::Ipop |
| x_fact       |              |              | upper bound  | tInternal    |
|              |              |              | for          |              |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the filter.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_init | OT_REAL      | 100000       | Maximal      | CasADi::Ipop |
| _max         |              |              | value for    | tInternal    |
|              |              |              | the intial   |              |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_init | OT_REAL      | 1            | Minimal      | CasADi::Ipop |
| _min         |              |              | value for    | tInternal    |
|              |              |              | the intial   |              |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | for line     |              |
|              |              |              | search(for   |              |
|              |              |              | Chen-        |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_max  | OT_REAL      | 1.000e+30    | Maximal      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | the penalty  |              |
|              |              |              | parameter    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_upda | OT_REAL      | 10           | LIFENG       | CasADi::Ipop |
| te_compl_tol |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_upda | OT_REAL      | 0.000        | Threshold    | CasADi::Ipop |
| te_infeasibi |              |              | for infeasib | tInternal    |
| lity_tol     |              |              | ility in     |              |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | update test. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_alwa | OT_STRING    | no           | Active       | CasADi::Ipop |
| ys_cd        |              |              | permanent    | tInternal    |
|              |              |              | perturbation |              |
|              |              |              | of           |              |
|              |              |              | constraint l |              |
|              |              |              | inearization |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_dec_ | OT_REAL      | 0.333        | Decrease     | CasADi::Ipop |
| fact         |              |              | factor for   | tInternal    |
|              |              |              | x-s perturba |              |
|              |              |              | tion. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      | 8            | Increase     | CasADi::Ipop |
| fact         |              |              | factor for   | tInternal    |
|              |              |              | x-s perturba |              |
|              |              |              | tion. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      | 100          | Increase     | CasADi::Ipop |
| fact_first   |              |              | factor for   | tInternal    |
|              |              |              | x-s          |              |
|              |              |              | perturbation |              |
|              |              |              | for very     |              |
|              |              |              | first pertur |              |
|              |              |              | bation. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| piecewisepen | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
| alty_gamma_i |              |              | WRITES THIS. | tInternal    |
| nfeasi       |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| piecewisepen | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
| alty_gamma_o |              |              | WRITES THIS. | tInternal    |
| bj           |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| point_pertur | OT_REAL      | 10           | Maximal      | CasADi::Ipop |
| bation_radiu |              |              | perturbation | tInternal    |
| s            |              |              | of an        |              |
|              |              |              | evaluation   |              |
|              |              |              | point. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| print_info_s | OT_STRING    | no           | Enables      | CasADi::Ipop |
| tring        |              |              | printing of  | tInternal    |
|              |              |              | additional   |              |
|              |              |              | info string  |              |
|              |              |              | at end of    |              |
|              |              |              | iteration    |              |
|              |              |              | output. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_INTEGER   | 5            | Output       | CasADi::Ipop |
|              |              |              | verbosity    | tInternal    |
|              |              |              | level. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| print_option | OT_STRING    | no           | Switch to    | CasADi::Ipop |
| s_documentat |              |              | print all    | tInternal    |
| ion          |              |              | algorithmic  |              |
|              |              |              | options.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| print_option | OT_STRING    | no           | Undocumented | CasADi::Ipop |
| s_latex_mode |              |              | (see IPOPT d | tInternal    |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| print_time   | OT_BOOLEAN   | true         | print        | CasADi::Ipop |
|              |              |              | information  | tInternal    |
|              |              |              | about        |              |
|              |              |              | execution    |              |
|              |              |              | time         |              |
+--------------+--------------+--------------+--------------+--------------+
| print_timing | OT_STRING    | no           | Switch to    | CasADi::Ipop |
| _statistics  |              |              | print timing | tInternal    |
|              |              |              | statistics.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| print_user_o | OT_STRING    | no           | Print all    | CasADi::Ipop |
| ptions       |              |              | options set  | tInternal    |
|              |              |              | by the user. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_STRING    | none         | The          | CasADi::Ipop |
| tion_balanci |              |              | balancing    | tInternal    |
| ng_term      |              |              | term         |              |
|              |              |              | included in  |              |
|              |              |              | the quality  |              |
|              |              |              | function for |              |
|              |              |              | centrality.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_STRING    | none         | The penalty  | CasADi::Ipop |
| tion_central |              |              | term for     | tInternal    |
| ity          |              |              | centrality   |              |
|              |              |              | that is      |              |
|              |              |              | included in  |              |
|              |              |              | quality      |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_INTEGER   | 8            | Maximum      | CasADi::Ipop |
| tion_max_sec |              |              | number of    | tInternal    |
| tion_steps   |              |              | search steps |              |
|              |              |              | during       |              |
|              |              |              | direct       |              |
|              |              |              | search       |              |
|              |              |              | procedure    |              |
|              |              |              | determining  |              |
|              |              |              | the optimal  |              |
|              |              |              | centering    |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_STRING    | 2-norm-      | Norm used    | CasADi::Ipop |
| tion_norm_ty |              | squared      | for          | tInternal    |
| pe           |              |              | components   |              |
|              |              |              | of the       |              |
|              |              |              | quality      |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_REAL      | 0            | Tolerance    | CasADi::Ipop |
| tion_section |              |              | for the      | tInternal    |
| _qf_tol      |              |              | golden       |              |
|              |              |              | section      |              |
|              |              |              | search       |              |
|              |              |              | procedure    |              |
|              |              |              | determining  |              |
|              |              |              | the optimal  |              |
|              |              |              | centering    |              |
|              |              |              | parameter    |              |
|              |              |              | (in the      |              |
|              |              |              | function     |              |
|              |              |              | value        |              |
|              |              |              | space). (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_REAL      | 0.010        | Tolerance    | CasADi::Ipop |
| tion_section |              |              | for the      | tInternal    |
| _sigma_tol   |              |              | section      |              |
|              |              |              | search       |              |
|              |              |              | procedure    |              |
|              |              |              | determining  |              |
|              |              |              | the optimal  |              |
|              |              |              | centering    |              |
|              |              |              | parameter    |              |
|              |              |              | (in sigma    |              |
|              |              |              | space). (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y     | OT_STRING    | no           | Tells the    | CasADi::Ipop |
|              |              |              | algorithm to | tInternal    |
|              |              |              | recalculate  |              |
|              |              |              | the equality |              |
|              |              |              | and          |              |
|              |              |              | inequality   |              |
|              |              |              | multipliers  |              |
|              |              |              | as least     |              |
|              |              |              | square       |              |
|              |              |              | estimates.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y_fea | OT_REAL      | 0.000        | Feasibility  | CasADi::Ipop |
| s_tol        |              |              | threshold    | tInternal    |
|              |              |              | for recomput |              |
|              |              |              | ation of     |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| replace_boun | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| ds           |              |              | all variable | tInternal    |
|              |              |              | bounds       |              |
|              |              |              | should be    |              |
|              |              |              | replaced by  |              |
|              |              |              | inequality   |              |
|              |              |              | constraints  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| required_inf | OT_REAL      | 0.900        | Required     | CasADi::Ipop |
| easibility_r |              |              | reduction of | tInternal    |
| eduction     |              |              | infeasibilit |              |
|              |              |              | y before     |              |
|              |              |              | leaving      |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| residual_imp | OT_REAL      | 1.000        | Minimal      | CasADi::Ipop |
| rovement_fac |              |              | required     | tInternal    |
| tor          |              |              | reduction of |              |
|              |              |              | residual     |              |
|              |              |              | test ratio   |              |
|              |              |              | in iterative |              |
|              |              |              | refinement.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| residual_rat | OT_REAL      | 0.000        | Iterative    | CasADi::Ipop |
| io_max       |              |              | refinement   | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| residual_rat | OT_REAL      | 0.000        | Threshold    | CasADi::Ipop |
| io_singular  |              |              | for          | tInternal    |
|              |              |              | declaring    |              |
|              |              |              | linear       |              |
|              |              |              | system       |              |
|              |              |              | singular     |              |
|              |              |              | after failed |              |
|              |              |              | iterative    |              |
|              |              |              | refinement.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| resto_failur | OT_REAL      | 0            | Threshold    | CasADi::Ipop |
| e_feasibilit |              |              | for primal i | tInternal    |
| y_threshold  |              |              | nfeasibility |              |
|              |              |              | to declare   |              |
|              |              |              | failure of   |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| resto_penalt | OT_REAL      | 1000         | Penalty      | CasADi::Ipop |
| y_parameter  |              |              | parameter in | tInternal    |
|              |              |              | the          |              |
|              |              |              | restoration  |              |
|              |              |              | phase        |              |
|              |              |              | objective    |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| resto_proxim | OT_REAL      | 1            | Weighting    | CasADi::Ipop |
| ity_weight   |              |              | factor for   | tInternal    |
|              |              |              | the          |              |
|              |              |              | proximity    |              |
|              |              |              | term in      |              |
|              |              |              | restoration  |              |
|              |              |              | phase        |              |
|              |              |              | objective.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| rho          | OT_REAL      | 0.100        | Value in     | CasADi::Ipop |
|              |              |              | penalty      | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | update       |              |
|              |              |              | formula.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| s_max        | OT_REAL      | 100          | Scaling      | CasADi::Ipop |
|              |              |              | threshold    | tInternal    |
|              |              |              | for the NLP  |              |
|              |              |              | error. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| s_phi        | OT_REAL      | 2.300        | Exponent for | CasADi::Ipop |
|              |              |              | linear       | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | function     |              |
|              |              |              | model in the |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| s_theta      | OT_REAL      | 1.100        | Exponent for | CasADi::Ipop |
|              |              |              | current      | tInternal    |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the          |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| sb           | OT_STRING    | no           | (see IPOPT d | CasADi::Ipop |
|              |              |              | ocumentation | tInternal    |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| sigma_max    | OT_REAL      | 100          | Maximum      | CasADi::Ipop |
|              |              |              | value of the | tInternal    |
|              |              |              | centering    |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| sigma_min    | OT_REAL      | 0.000        | Minimum      | CasADi::Ipop |
|              |              |              | value of the | tInternal    |
|              |              |              | centering    |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| skip_corr_if | OT_STRING    | yes          | Skip the     | CasADi::Ipop |
| _neg_curv    |              |              | corrector    | tInternal    |
|              |              |              | step in      |              |
|              |              |              | negative     |              |
|              |              |              | curvature    |              |
|              |              |              | iteration (u |              |
|              |              |              | nsupported!) |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| skip_corr_in | OT_STRING    | yes          | Skip the     | CasADi::Ipop |
| _monotone_mo |              |              | corrector    | tInternal    |
| de           |              |              | step during  |              |
|              |              |              | monotone     |              |
|              |              |              | barrier      |              |
|              |              |              | parameter    |              |
|              |              |              | mode (unsupp |              |
|              |              |              | orted!).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| skip_finaliz | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| e_solution_c |              |              | call to NLP: | tInternal    |
| all          |              |              | :FinalizeSol |              |
|              |              |              | ution after  |              |
|              |              |              | optimization |              |
|              |              |              | should be    |              |
|              |              |              | suppressed   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
| frac         |              |              | minimum      | tInternal    |
|              |              |              | relative     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | slack to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
| push         |              |              | minimum      | tInternal    |
|              |              |              | absolute     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | slack to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| slack_move   | OT_REAL      | 0.000        | Correction   | CasADi::Ipop |
|              |              |              | size for     | tInternal    |
|              |              |              | very small   |              |
|              |              |              | slacks. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| soft_resto_p | OT_REAL      | 1.000        | Required     | CasADi::Ipop |
| derror_reduc |              |              | reduction in | tInternal    |
| tion_factor  |              |              | primal-dual  |              |
|              |              |              | error in the |              |
|              |              |              | soft         |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | True         | function is  | CasADi::Ipop |
|              |              |              | sparse       | tInternal    |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG |              | Function     | CasADi::Ipop |
| erator       | ENERATOR     |              | that         | tInternal    |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| start_with_r | OT_STRING    | no           | Tells        | CasADi::Ipop |
| esto         |              |              | algorithm to | tInternal    |
|              |              |              | switch to    |              |
|              |              |              | restoration  |              |
|              |              |              | phase in     |              |
|              |              |              | first        |              |
|              |              |              | iteration.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | False        | keep         | CasADi::Ipop |
| ans          |              |              | references   | tInternal    |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| suppress_all | OT_STRING    | no           | Undocumented | CasADi::Ipop |
| _output      |              |              | (see IPOPT d | tInternal    |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| tau_min      | OT_REAL      | 0.990        | Lower bound  | CasADi::Ipop |
|              |              |              | on fraction- | tInternal    |
|              |              |              | to-the-      |              |
|              |              |              | boundary     |              |
|              |              |              | parameter    |              |
|              |              |              | tau. (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| theta_max_fa | OT_REAL      | 10000        | Determines   | CasADi::Ipop |
| ct           |              |              | upper bound  | tInternal    |
|              |              |              | for          |              |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the filter.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| theta_min    | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| theta_min_fa | OT_REAL      | 0.000        | Determines   | CasADi::Ipop |
| ct           |              |              | constraint   | tInternal    |
|              |              |              | violation    |              |
|              |              |              | threshold in |              |
|              |              |              | the          |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| tiny_step_to | OT_REAL      | 0.000        | Tolerance    | CasADi::Ipop |
| l            |              |              | for          | tInternal    |
|              |              |              | detecting    |              |
|              |              |              | numerically  |              |
|              |              |              | insignifican |              |
|              |              |              | t steps.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| tiny_step_y_ | OT_REAL      | 0.010        | Tolerance    | CasADi::Ipop |
| tol          |              |              | for quitting | tInternal    |
|              |              |              | because of   |              |
|              |              |              | numerically  |              |
|              |              |              | insignifican |              |
|              |              |              | t steps.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| tol          | OT_REAL      | 0.000        | Desired      | CasADi::Ipop |
|              |              |              | convergence  | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | (relative).  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_UNKNOWN   |              | A user-      | CasADi::Ipop |
|              |              |              | defined      | tInternal    |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| vartheta     | OT_REAL      | 0.500        | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | False        | verbose      | CasADi::Ipop |
|              |              |              | evaluation   | tInternal    |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      | 0.001        | same as      | CasADi::Ipop |
| ound_frac    |              |              | bound_frac   | tInternal    |
|              |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      | 0.001        | same as      | CasADi::Ipop |
| ound_push    |              |              | bound_push   | tInternal    |
|              |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_e | OT_STRING    | no           | Tells        | CasADi::Ipop |
| ntire_iterat |              |              | algorithm    | tInternal    |
| e            |              |              | whether to   |              |
|              |              |              | use the GetW |              |
|              |              |              | armStartIter |              |
|              |              |              | ate method   |              |
|              |              |              | in the NLP.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_i | OT_STRING    | no           | Warm-start   | CasADi::Ipop |
| nit_point    |              |              | for initial  | tInternal    |
|              |              |              | point (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      | 0.001        | same as mult | CasADi::Ipop |
| ult_bound_pu |              |              | _bound_push  | tInternal    |
| sh           |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      | 1000000      | Maximum      | CasADi::Ipop |
| ult_init_max |              |              | initial      | tInternal    |
|              |              |              | value for    |              |
|              |              |              | the equality |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| ame_structur |              |              | whether a    | tInternal    |
| e            |              |              | problem with |              |
|              |              |              | a structure  |              |
|              |              |              | identical to |              |
|              |              |              | the previous |              |
|              |              |              | one is to be |              |
|              |              |              | solved. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      | 0.001        | same as slac | CasADi::Ipop |
| lack_bound_f |              |              | k_bound_frac | tInternal    |
| rac          |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      | 0.001        | same as slac | CasADi::Ipop |
| lack_bound_p |              |              | k_bound_push | tInternal    |
| ush          |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_t | OT_REAL      | 0            | Unsupported! | CasADi::Ipop |
| arget_mu     |              |              | (see IPOPT d | tInternal    |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | False        | Warn if the  | CasADi::Ipop |
| _bounds      |              |              | initial      | tInternal    |
|              |              |              | guess does   |              |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_sho | OT_INTEGER   | 10           | Number of    | CasADi::Ipop |
| rtened_iter_ |              |              | shortened    | tInternal    |
| trigger      |              |              | iterations   |              |
|              |              |              | that trigger |              |
|              |              |              | the          |              |
|              |              |              | watchdog.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_tri | OT_INTEGER   | 3            | Maximum      | CasADi::Ipop |
| al_iter_max  |              |              | number of    | tInternal    |
|              |              |              | watchdog     |              |
|              |              |              | iterations.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_inexact | OT_REAL      | 0            | Drop         | CasADi::Ipop |
| _droptol     |              |              | tolerance    | tInternal    |
|              |              |              | for inexact  |              |
|              |              |              | factorizatio |              |
|              |              |              | n preconditi |              |
|              |              |              | oner in      |              |
|              |              |              | WISMP. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_inexact | OT_REAL      | 0            | Fill-in      | CasADi::Ipop |
| _fillin_limi |              |              | limit for    | tInternal    |
| t            |              |              | inexact fact |              |
|              |              |              | orization pr |              |
|              |              |              | econditioner |              |
|              |              |              | in WISMP.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_iterati | OT_STRING    | no           | Switches to  | CasADi::Ipop |
| ve           |              |              | iterative    | tInternal    |
|              |              |              | solver in    |              |
|              |              |              | WSMP. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_max_ite | OT_INTEGER   | 1000         | Maximal      | CasADi::Ipop |
| r            |              |              | number of    | tInternal    |
|              |              |              | iterations   |              |
|              |              |              | in iterative |              |
|              |              |              | WISMP (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_no_pivo | OT_STRING    | no           | Use the      | CasADi::Ipop |
| ting         |              |              | static       | tInternal    |
|              |              |              | pivoting     |              |
|              |              |              | option of    |              |
|              |              |              | WSMP. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_num_thr | OT_INTEGER   | 1            | Number of    | CasADi::Ipop |
| eads         |              |              | threads to   | tInternal    |
|              |              |              | be used in   |              |
|              |              |              | WSMP (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_orderin | OT_INTEGER   | 1            | Determines   | CasADi::Ipop |
| g_option     |              |              | how ordering | tInternal    |
|              |              |              | is done in   |              |
|              |              |              | WSMP         |              |
|              |              |              | (IPARM(16)   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_orderin | OT_INTEGER   | 1            | Determines   | CasADi::Ipop |
| g_option2    |              |              | how ordering | tInternal    |
|              |              |              | is done in   |              |
|              |              |              | WSMP         |              |
|              |              |              | (IPARM(20)   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtol  | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver WSMP. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtolm | OT_REAL      | 0.100        | Maximum      | CasADi::Ipop |
| ax           |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver WSMP. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_scaling | OT_INTEGER   | 0            | Determines   | CasADi::Ipop |
|              |              |              | how the      | tInternal    |
|              |              |              | matrix is    |              |
|              |              |              | scaled by    |              |
|              |              |              | WSMP. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_singula | OT_REAL      | 0.000        | WSMP's       | CasADi::Ipop |
| rity_thresho |              |              | singularity  | tInternal    |
| ld           |              |              | threshold.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_skip_in | OT_STRING    | no           | Always       | CasADi::Ipop |
| ertia_check  |              |              | pretent      | tInternal    |
|              |              |              | inertia is   |              |
|              |              |              | correct.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_write_m | OT_INTEGER   | -1           | Iteration in | CasADi::Ipop |
| atrix_iterat |              |              | which the    | tInternal    |
| ion          |              |              | matrices are |              |
|              |              |              | written to   |              |
|              |              |              | files. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+-----------------------+
|     Id      |        Used in        |
+=============+=======================+
| eval_f      | CasADi::IpoptInternal |
+-------------+-----------------------+
| eval_g      | CasADi::IpoptInternal |
+-------------+-----------------------+
| eval_grad_f | CasADi::IpoptInternal |
+-------------+-----------------------+
| eval_jac_g  | CasADi::IpoptInternal |
+-------------+-----------------------+
| inputs      | CasADi::FXInternal    |
+-------------+-----------------------+
| outputs     | CasADi::FXInternal    |
+-------------+-----------------------+

>List of available stats
+---------------------+-----------------------+
|         Id          |        Used in        |
+=====================+=======================+
| alpha_du            | CasADi::IpoptInternal |
+---------------------+-----------------------+
| alpha_pr            | CasADi::IpoptInternal |
+---------------------+-----------------------+
| d_norm              | CasADi::IpoptInternal |
+---------------------+-----------------------+
| inf_du              | CasADi::IpoptInternal |
+---------------------+-----------------------+
| inf_pr              | CasADi::IpoptInternal |
+---------------------+-----------------------+
| iter                | CasADi::IpoptInternal |
+---------------------+-----------------------+
| iter_count          | CasADi::IpoptInternal |
+---------------------+-----------------------+
| ls_trials           | CasADi::IpoptInternal |
+---------------------+-----------------------+
| mu                  | CasADi::IpoptInternal |
+---------------------+-----------------------+
| regularization_size | CasADi::IpoptInternal |
+---------------------+-----------------------+
| return_status       | CasADi::IpoptInternal |
+---------------------+-----------------------+

C++ includes: ipopt_internal.hpp ";

%feature("docstring")  CasADi::IpoptInternal::IpoptInternal "";

%feature("docstring")  CasADi::IpoptInternal::~IpoptInternal "";

%feature("docstring")  CasADi::IpoptInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::IpoptInternal::getGF "";

%feature("docstring")  CasADi::IpoptInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::IpoptInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::IpoptInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::IpoptInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::IpoptInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::IpoptInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::IpoptInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::IpoptInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::IpoptInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::IpoptInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::IpoptInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::IpoptInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::IpoptInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::IpoptInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::IpoptInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::IpoptInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::IpoptInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::IpoptInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::IpoptInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::IpoptInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::IpoptInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::IpoptInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::IpoptInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::IpoptInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::IpoptInternal::print "

Print. ";

%feature("docstring")  CasADi::IpoptInternal::repr "

Print. ";

%feature("docstring")  CasADi::IpoptInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::IpoptInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::IpoptInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::IpoptInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::IpoptInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::IpoptInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::IpoptInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::IpoptInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::IpoptInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::IpoptInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::IpoptInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::IpoptInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::IpoptInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::IpoptInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::IpoptInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::IpoptInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::IpoptInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::IpoptInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IpoptInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IpoptInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IpoptInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IpoptInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IpoptInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::IpoptInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::IpoptInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::IpoptInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::IpoptInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::IpoptInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::IpoptInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::IpoptInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::IpoptInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::IpoptInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::IpoptInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::IpoptInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::IpoptInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::IpoptInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::IpoptInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::IpoptInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::IpoptInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::IpoptInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::IpoptInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::IpoptInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::IpoptInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::IpoptInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::IpoptInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::IpoptInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::IpoptInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::IpoptInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1IpoptQPInternal.xml
%feature("docstring") CasADi::Interfaces::IpoptQPInternal "

Internal class for IpoptQPSolver.

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| accept_every | OT_STRING    |              |              | CasADi::Inte |
| _trial_step  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      |              |              | CasADi::Inte |
| ompl_inf_tol |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      |              |              | CasADi::Inte |
| onstr_viol_t |              |              |              | rfaces::Ipop |
| ol           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_d | OT_REAL      |              |              | CasADi::Inte |
| ual_inf_tol  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_i | OT_INTEGER   |              |              | CasADi::Inte |
| ter          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_o | OT_REAL      |              |              | CasADi::Inte |
| bj_change_to |              |              |              | rfaces::Ipop |
| l            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_t | OT_REAL      |              |              | CasADi::Inte |
| ol           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y  | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y_ | OT_REAL      |              |              | CasADi::Inte |
| tol          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| barrier_tol_ | OT_REAL      |              |              | CasADi::Inte |
| factor       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_frac   | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_STRING    |              |              | CasADi::Inte |
| nit_method   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_REAL      |              |              | CasADi::Inte |
| nit_val      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_r | OT_REAL      |              |              | CasADi::Inte |
| eset_thresho |              |              |              | rfaces::Ipop |
| ld           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_push   | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_relax_ | OT_REAL      |              |              | CasADi::Inte |
| factor       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| check_deriva | OT_STRING    |              |              | CasADi::Inte |
| tives_for_na |              |              |              | rfaces::Ipop |
| ninf         |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| compl_inf_to | OT_REAL      |              |              | CasADi::Inte |
| l            |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      |              |              | CasADi::Inte |
| init_max     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      |              |              | CasADi::Inte |
| reset_thresh |              |              |              | rfaces::Ipop |
| old          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| constr_viol_ | OT_REAL      |              |              | CasADi::Inte |
| tol          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| corrector_ty | OT_STRING    |              |              | CasADi::Inte |
| pe           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    |              |              | CasADi::Inte |
| est          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      |              |              | CasADi::Inte |
| est_perturba |              |              |              | rfaces::Ipop |
| tion         |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    |              |              | CasADi::Inte |
| est_print_al |              |              |              | rfaces::Ipop |
| l            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      |              |              | CasADi::Inte |
| est_tol      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| diverging_it | OT_REAL      |              |              | CasADi::Inte |
| erates_tol   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| dual_inf_tol | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| evaluate_ori | OT_STRING    |              |              | CasADi::Inte |
| g_obj_at_res |              |              |              | rfaces::Ipop |
| to_trial     |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_STRING    |              |              | CasADi::Inte |
| sible_proble |              |              |              | rfaces::Ipop |
| m            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      |              |              | CasADi::Inte |
| sible_proble |              |              |              | rfaces::Ipop |
| m_ctol       |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      |              |              | CasADi::Inte |
| sible_proble |              |              |              | rfaces::Ipop |
| m_ytol       |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| file_print_l | OT_INTEGER   |              |              | CasADi::Inte |
| evel         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| first_hessia | OT_REAL      |              |              | CasADi::Inte |
| n_perturbati |              |              |              | rfaces::Ipop |
| on           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| fixed_mu_ora | OT_STRING    |              |              | CasADi::Inte |
| cle          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| fixed_variab | OT_STRING    |              |              | CasADi::Inte |
| le_treatment |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    |              |              | CasADi::Inte |
| oximation    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| honor_origin | OT_STRING    |              |              | CasADi::Inte |
| al_bounds    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_reg | OT_REAL      |              |              | CasADi::Inte |
| ularization_ |              |              |              | rfaces::Ipop |
| value        |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   |              |              | CasADi::Inte |
| ry_max_histo |              |              |              | rfaces::Ipop |
| ry           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   |              |              | CasADi::Inte |
| ry_max_skipp |              |              |              | rfaces::Ipop |
| ing          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| linear_scali | OT_STRING    |              |              | CasADi::Inte |
| ng_on_demand |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    |              |              | CasADi::Inte |
| r            |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| linear_syste | OT_STRING    |              |              | CasADi::Inte |
| m_scaling    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_la_init | OT_REAL      |              |              | CasADi::Inte |
| _factor      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_liw_ini | OT_REAL      |              |              | CasADi::Inte |
| t_factor     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_meminc_ | OT_REAL      |              |              | CasADi::Inte |
| factor       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtol  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtolm | OT_REAL      |              |              | CasADi::Inte |
| ax           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_automat | OT_STRING    |              |              | CasADi::Inte |
| ic_scaling   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_block_s | OT_INTEGER   |              |              | CasADi::Inte |
| ize          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_node_am | OT_INTEGER   |              |              | CasADi::Inte |
| algamation   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivot_o | OT_INTEGER   |              |              | CasADi::Inte |
| rder         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtol  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtolm | OT_REAL      |              |              | CasADi::Inte |
| ax           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pre_all | OT_REAL      |              |              | CasADi::Inte |
| oc           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_cpu_time | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_hessian_ | OT_REAL      |              |              | CasADi::Inte |
| perturbation |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_iter     | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_refineme | OT_INTEGER   |              |              | CasADi::Inte |
| nt_steps     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_soc      | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mehrotra_alg | OT_STRING    |              |              | CasADi::Inte |
| orithm       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| min_hessian_ | OT_REAL      |              |              | CasADi::Inte |
| perturbation |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| min_refineme | OT_INTEGER   |              |              | CasADi::Inte |
| nt_steps     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_init      | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_linear_de | OT_REAL      |              |              | CasADi::Inte |
| crease_facto |              |              |              | rfaces::Ipop |
| r            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_max       | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_max_fact  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_min       | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_oracle    | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_strategy  | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_superline | OT_REAL      |              |              | CasADi::Inte |
| ar_decrease_ |              |              |              | rfaces::Ipop |
| power        |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_target    | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_mem_pe | OT_INTEGER   |              |              | CasADi::Inte |
| rcent        |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_permut | OT_INTEGER   |              |              | CasADi::Inte |
| ing_scaling  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivot_ | OT_INTEGER   |              |              | CasADi::Inte |
| order        |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      |              |              | CasADi::Inte |
| max          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_scalin | OT_INTEGER   |              |              | CasADi::Inte |
| g            |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nlp_lower_bo | OT_REAL      |              |              | CasADi::Inte |
| und_inf      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| nlp_upper_bo | OT_REAL      |              |              | CasADi::Inte |
| und_inf      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| option_file_ | OT_STRING    |              |              | CasADi::Inte |
| name         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| output_file  | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_matc | OT_STRING    |              |              | CasADi::Inte |
| hing_strateg |              |              |              | rfaces::Ipop |
| y            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_msgl | OT_INTEGER   |              |              | CasADi::Inte |
| vl           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_out_ | OT_INTEGER   |              |              | CasADi::Inte |
| of_core_powe |              |              |              | rfaces::Ipop |
| r            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| perturb_dec_ | OT_REAL      |              |              | CasADi::Inte |
| fact         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      |              |              | CasADi::Inte |
| fact         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      |              |              | CasADi::Inte |
| fact_first   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| point_pertur | OT_REAL      |              |              | CasADi::Inte |
| bation_radiu |              |              |              | rfaces::Ipop |
| s            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| print_option | OT_STRING    |              |              | CasADi::Inte |
| s_documentat |              |              |              | rfaces::Ipop |
| ion          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| print_user_o | OT_STRING    |              |              | CasADi::Inte |
| ptions       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_INTEGER   |              |              | CasADi::Inte |
| tion_max_sec |              |              |              | rfaces::Ipop |
| tion_steps   |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y     | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y_fea | OT_REAL      |              |              | CasADi::Inte |
| s_tol        |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| required_inf | OT_REAL      |              |              | CasADi::Inte |
| easibility_r |              |              |              | rfaces::Ipop |
| eduction     |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      |              |              | CasADi::Inte |
| frac         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      |              |              | CasADi::Inte |
| push         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| soft_resto_p | OT_REAL      |              |              | CasADi::Inte |
| derror_reduc |              |              |              | rfaces::Ipop |
| tion_factor  |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| start_with_r | OT_STRING    |              |              | CasADi::Inte |
| esto         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| tol          | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      |              |              | CasADi::Inte |
| ound_frac    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      |              |              | CasADi::Inte |
| ound_push    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_i | OT_STRING    |              |              | CasADi::Inte |
| nit_point    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      |              |              | CasADi::Inte |
| ult_bound_pu |              |              |              | rfaces::Ipop |
| sh           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      |              |              | CasADi::Inte |
| ult_init_max |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      |              |              | CasADi::Inte |
| lack_bound_f |              |              |              | rfaces::Ipop |
| rac          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      |              |              | CasADi::Inte |
| lack_bound_p |              |              |              | rfaces::Ipop |
| ush          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_sho | OT_INTEGER   |              |              | CasADi::Inte |
| rtened_iter_ |              |              |              | rfaces::Ipop |
| trigger      |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_tri | OT_INTEGER   |              |              | CasADi::Inte |
| al_iter_max  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_num_thr | OT_INTEGER   |              |              | CasADi::Inte |
| eads         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_orderin | OT_INTEGER   |              |              | CasADi::Inte |
| g_option     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtol  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtolm | OT_REAL      |              |              | CasADi::Inte |
| ax           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_scaling | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_singula | OT_REAL      |              |              | CasADi::Inte |
| rity_thresho |              |              |              | rfaces::Ipop |
| ld           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ipopt_qp_internal.hpp ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::IpoptQPInternal
"

Constructor. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::clone "

Clone. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::IpoptQPInternal
"

Create a new Solver. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::~IpoptQPInternal
"

Destructor. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::init "

Initialize. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::solve "";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::jacobian_switch
"

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::numeric_jacobian
"

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::repr "

Print. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::IpoptQPInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::IpoptQPInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::symbolicInputSX
"

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::IpoptQPInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Interfaces::IpoptQPInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::deepCopyMembers
"

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1IpoptQPSolver.xml
%feature("docstring") CasADi::Interfaces::IpoptQPSolver "

IPOPT QP Solver for quadratic programming.

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

Joris Gillis

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| accept_every | OT_STRING    |              |              | CasADi::Inte |
| _trial_step  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      |              |              | CasADi::Inte |
| ompl_inf_tol |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      |              |              | CasADi::Inte |
| onstr_viol_t |              |              |              | rfaces::Ipop |
| ol           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_d | OT_REAL      |              |              | CasADi::Inte |
| ual_inf_tol  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_i | OT_INTEGER   |              |              | CasADi::Inte |
| ter          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_o | OT_REAL      |              |              | CasADi::Inte |
| bj_change_to |              |              |              | rfaces::Ipop |
| l            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_t | OT_REAL      |              |              | CasADi::Inte |
| ol           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y  | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y_ | OT_REAL      |              |              | CasADi::Inte |
| tol          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| barrier_tol_ | OT_REAL      |              |              | CasADi::Inte |
| factor       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_frac   | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_STRING    |              |              | CasADi::Inte |
| nit_method   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_REAL      |              |              | CasADi::Inte |
| nit_val      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_r | OT_REAL      |              |              | CasADi::Inte |
| eset_thresho |              |              |              | rfaces::Ipop |
| ld           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_push   | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| bound_relax_ | OT_REAL      |              |              | CasADi::Inte |
| factor       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| check_deriva | OT_STRING    |              |              | CasADi::Inte |
| tives_for_na |              |              |              | rfaces::Ipop |
| ninf         |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| compl_inf_to | OT_REAL      |              |              | CasADi::Inte |
| l            |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      |              |              | CasADi::Inte |
| init_max     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      |              |              | CasADi::Inte |
| reset_thresh |              |              |              | rfaces::Ipop |
| old          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| constr_viol_ | OT_REAL      |              |              | CasADi::Inte |
| tol          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| corrector_ty | OT_STRING    |              |              | CasADi::Inte |
| pe           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    |              |              | CasADi::Inte |
| est          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      |              |              | CasADi::Inte |
| est_perturba |              |              |              | rfaces::Ipop |
| tion         |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    |              |              | CasADi::Inte |
| est_print_al |              |              |              | rfaces::Ipop |
| l            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      |              |              | CasADi::Inte |
| est_tol      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| diverging_it | OT_REAL      |              |              | CasADi::Inte |
| erates_tol   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| dual_inf_tol | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| evaluate_ori | OT_STRING    |              |              | CasADi::Inte |
| g_obj_at_res |              |              |              | rfaces::Ipop |
| to_trial     |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_STRING    |              |              | CasADi::Inte |
| sible_proble |              |              |              | rfaces::Ipop |
| m            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      |              |              | CasADi::Inte |
| sible_proble |              |              |              | rfaces::Ipop |
| m_ctol       |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      |              |              | CasADi::Inte |
| sible_proble |              |              |              | rfaces::Ipop |
| m_ytol       |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| file_print_l | OT_INTEGER   |              |              | CasADi::Inte |
| evel         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| first_hessia | OT_REAL      |              |              | CasADi::Inte |
| n_perturbati |              |              |              | rfaces::Ipop |
| on           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| fixed_mu_ora | OT_STRING    |              |              | CasADi::Inte |
| cle          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| fixed_variab | OT_STRING    |              |              | CasADi::Inte |
| le_treatment |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    |              |              | CasADi::Inte |
| oximation    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| honor_origin | OT_STRING    |              |              | CasADi::Inte |
| al_bounds    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_reg | OT_REAL      |              |              | CasADi::Inte |
| ularization_ |              |              |              | rfaces::Ipop |
| value        |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   |              |              | CasADi::Inte |
| ry_max_histo |              |              |              | rfaces::Ipop |
| ry           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   |              |              | CasADi::Inte |
| ry_max_skipp |              |              |              | rfaces::Ipop |
| ing          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| linear_scali | OT_STRING    |              |              | CasADi::Inte |
| ng_on_demand |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    |              |              | CasADi::Inte |
| r            |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| linear_syste | OT_STRING    |              |              | CasADi::Inte |
| m_scaling    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_la_init | OT_REAL      |              |              | CasADi::Inte |
| _factor      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_liw_ini | OT_REAL      |              |              | CasADi::Inte |
| t_factor     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_meminc_ | OT_REAL      |              |              | CasADi::Inte |
| factor       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtol  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtolm | OT_REAL      |              |              | CasADi::Inte |
| ax           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_automat | OT_STRING    |              |              | CasADi::Inte |
| ic_scaling   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_block_s | OT_INTEGER   |              |              | CasADi::Inte |
| ize          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_node_am | OT_INTEGER   |              |              | CasADi::Inte |
| algamation   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivot_o | OT_INTEGER   |              |              | CasADi::Inte |
| rder         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtol  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtolm | OT_REAL      |              |              | CasADi::Inte |
| ax           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pre_all | OT_REAL      |              |              | CasADi::Inte |
| oc           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_cpu_time | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_hessian_ | OT_REAL      |              |              | CasADi::Inte |
| perturbation |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_iter     | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_refineme | OT_INTEGER   |              |              | CasADi::Inte |
| nt_steps     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| max_soc      | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mehrotra_alg | OT_STRING    |              |              | CasADi::Inte |
| orithm       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| min_hessian_ | OT_REAL      |              |              | CasADi::Inte |
| perturbation |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| min_refineme | OT_INTEGER   |              |              | CasADi::Inte |
| nt_steps     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_init      | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_linear_de | OT_REAL      |              |              | CasADi::Inte |
| crease_facto |              |              |              | rfaces::Ipop |
| r            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_max       | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_max_fact  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_min       | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_oracle    | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_strategy  | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_superline | OT_REAL      |              |              | CasADi::Inte |
| ar_decrease_ |              |              |              | rfaces::Ipop |
| power        |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mu_target    | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_mem_pe | OT_INTEGER   |              |              | CasADi::Inte |
| rcent        |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_permut | OT_INTEGER   |              |              | CasADi::Inte |
| ing_scaling  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivot_ | OT_INTEGER   |              |              | CasADi::Inte |
| order        |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      |              |              | CasADi::Inte |
| max          |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| mumps_scalin | OT_INTEGER   |              |              | CasADi::Inte |
| g            |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nlp_lower_bo | OT_REAL      |              |              | CasADi::Inte |
| und_inf      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| nlp_upper_bo | OT_REAL      |              |              | CasADi::Inte |
| und_inf      |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| option_file_ | OT_STRING    |              |              | CasADi::Inte |
| name         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| output_file  | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_matc | OT_STRING    |              |              | CasADi::Inte |
| hing_strateg |              |              |              | rfaces::Ipop |
| y            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_msgl | OT_INTEGER   |              |              | CasADi::Inte |
| vl           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_out_ | OT_INTEGER   |              |              | CasADi::Inte |
| of_core_powe |              |              |              | rfaces::Ipop |
| r            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| perturb_dec_ | OT_REAL      |              |              | CasADi::Inte |
| fact         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      |              |              | CasADi::Inte |
| fact         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      |              |              | CasADi::Inte |
| fact_first   |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| point_pertur | OT_REAL      |              |              | CasADi::Inte |
| bation_radiu |              |              |              | rfaces::Ipop |
| s            |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| print_option | OT_STRING    |              |              | CasADi::Inte |
| s_documentat |              |              |              | rfaces::Ipop |
| ion          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| print_user_o | OT_STRING    |              |              | CasADi::Inte |
| ptions       |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_INTEGER   |              |              | CasADi::Inte |
| tion_max_sec |              |              |              | rfaces::Ipop |
| tion_steps   |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y     | OT_STRING    |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y_fea | OT_REAL      |              |              | CasADi::Inte |
| s_tol        |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| required_inf | OT_REAL      |              |              | CasADi::Inte |
| easibility_r |              |              |              | rfaces::Ipop |
| eduction     |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      |              |              | CasADi::Inte |
| frac         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      |              |              | CasADi::Inte |
| push         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| soft_resto_p | OT_REAL      |              |              | CasADi::Inte |
| derror_reduc |              |              |              | rfaces::Ipop |
| tion_factor  |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| start_with_r | OT_STRING    |              |              | CasADi::Inte |
| esto         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| tol          | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      |              |              | CasADi::Inte |
| ound_frac    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      |              |              | CasADi::Inte |
| ound_push    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_i | OT_STRING    |              |              | CasADi::Inte |
| nit_point    |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      |              |              | CasADi::Inte |
| ult_bound_pu |              |              |              | rfaces::Ipop |
| sh           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      |              |              | CasADi::Inte |
| ult_init_max |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      |              |              | CasADi::Inte |
| lack_bound_f |              |              |              | rfaces::Ipop |
| rac          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      |              |              | CasADi::Inte |
| lack_bound_p |              |              |              | rfaces::Ipop |
| ush          |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_sho | OT_INTEGER   |              |              | CasADi::Inte |
| rtened_iter_ |              |              |              | rfaces::Ipop |
| trigger      |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_tri | OT_INTEGER   |              |              | CasADi::Inte |
| al_iter_max  |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_num_thr | OT_INTEGER   |              |              | CasADi::Inte |
| eads         |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_orderin | OT_INTEGER   |              |              | CasADi::Inte |
| g_option     |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtol  | OT_REAL      |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtolm | OT_REAL      |              |              | CasADi::Inte |
| ax           |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_scaling | OT_INTEGER   |              |              | CasADi::Inte |
|              |              |              |              | rfaces::Ipop |
|              |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_singula | OT_REAL      |              |              | CasADi::Inte |
| rity_thresho |              |              |              | rfaces::Ipop |
| ld           |              |              |              | tQPInternal  |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ipopt_qp_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::makeUnique "";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::IpoptQPSolver "

Default constructor. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::IpoptQPSolver "";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::IpoptQPSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::indexed_one_based
"";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::indexed_zero_based
"";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::IpoptQPSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::assignNodeNoCount
"

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getRepresentation
"

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::IpoptQPSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1IpoptSolver.xml
%feature("docstring") CasADi::IpoptSolver "

interface to IPOPT NLP solver

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

NOTE: Even when max_iter == 0, it is not guaranteed that input(NLP_X_INIT)
== output(NLP_X_OPT). Indeed if bounds on X or constraints are unmet, they
will differ.

A good resource about the algorithms in IPOPT is: Wachter and L. T. Biegler,
On the Implementation of an Interior-Point Filter Line-Search Algorithm for
Large-Scale Nonlinear Programming, Mathematical Programming 106(1), pp.
25-57, 2006 (As Research Report RC 23149, IBM T. J. Watson Research Center,
Yorktown, USA

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| accept_after | OT_INTEGER   | -1           | Accept a     | CasADi::Ipop |
| _max_steps   |              |              | trial point  | tInternal    |
|              |              |              | after        |              |
|              |              |              | maximal this |              |
|              |              |              | number of    |              |
|              |              |              | steps. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| accept_every | OT_STRING    | no           | Always       | CasADi::Ipop |
| _trial_step  |              |              | accept the   | tInternal    |
|              |              |              | first trial  |              |
|              |              |              | step. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      | 0.010        | \"Acceptance\" | CasADi::Ipop |
| ompl_inf_tol |              |              | threshold    | tInternal    |
|              |              |              | for the comp |              |
|              |              |              | lementarity  |              |
|              |              |              | conditions.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_c | OT_REAL      | 0.010        | \"Acceptance\" | CasADi::Ipop |
| onstr_viol_t |              |              | threshold    | tInternal    |
| ol           |              |              | for the      |              |
|              |              |              | constraint   |              |
|              |              |              | violation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_d | OT_REAL      | 1.000e+10    | \"Acceptance\" | CasADi::Ipop |
| ual_inf_tol  |              |              | threshold    | tInternal    |
|              |              |              | for the dual |              |
|              |              |              | infeasibilit |              |
|              |              |              | y. (see      |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_i | OT_INTEGER   | 15           | Number of    | CasADi::Ipop |
| ter          |              |              | \"acceptable\" | tInternal    |
|              |              |              | iterates     |              |
|              |              |              | before       |              |
|              |              |              | triggering   |              |
|              |              |              | termination. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_o | OT_REAL      | 1.000e+20    | \"Acceptance\" | CasADi::Ipop |
| bj_change_to |              |              | stopping     | tInternal    |
| l            |              |              | criterion    |              |
|              |              |              | based on     |              |
|              |              |              | objective    |              |
|              |              |              | function     |              |
|              |              |              | change. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| acceptable_t | OT_REAL      | 0.000        | \"Acceptable\" | CasADi::Ipop |
| ol           |              |              | convergence  | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | (relative).  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | automatic    | How to       | CasADi::Ipop |
|              |              |              | calculate    | tInternal    |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_STRING    | obj-constr-  | Globalizatio | CasADi::Ipop |
| globalizatio |              | filter       | n strategy   | tInternal    |
| n            |              |              | for the      |              |
|              |              |              | adaptive mu  |              |
|              |              |              | selection    |              |
|              |              |              | mode. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_STRING    | 2-norm-      | Norm used    | CasADi::Ipop |
| kkt_norm_typ |              | squared      | for the KKT  | tInternal    |
| e            |              |              | error in the |              |
|              |              |              | adaptive mu  |              |
|              |              |              | globalizatio |              |
|              |              |              | n            |              |
|              |              |              | strategies.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_REAL      | 1.000        | Sufficient   | CasADi::Ipop |
| kkterror_red |              |              | decrease     | tInternal    |
| _fact        |              |              | factor for   |              |
|              |              |              | \"kkt-error\"  |              |
|              |              |              | globalizatio |              |
|              |              |              | n strategy.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_INTEGER   | 4            | Maximum      | CasADi::Ipop |
| kkterror_red |              |              | number of    | tInternal    |
| _iters       |              |              | iterations   |              |
|              |              |              | requiring    |              |
|              |              |              | sufficient   |              |
|              |              |              | progress.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_REAL      | 0.800        | Determines   | CasADi::Ipop |
| monotone_ini |              |              | the initial  | tInternal    |
| t_factor     |              |              | value of the |              |
|              |              |              | barrier      |              |
|              |              |              | parameter    |              |
|              |              |              | when         |              |
|              |              |              | switching to |              |
|              |              |              | the monotone |              |
|              |              |              | mode. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| restore_prev |              |              | the previous | tInternal    |
| ious_iterate |              |              | iterate      |              |
|              |              |              | should be    |              |
|              |              |              | restored if  |              |
|              |              |              | the monotone |              |
|              |              |              | mode is      |              |
|              |              |              | entered.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| adaptive_mu_ | OT_REAL      | 0            | (see IPOPT d | CasADi::Ipop |
| safeguard_fa |              |              | ocumentation | tInternal    |
| ctor         |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y  | OT_STRING    | primal       | Method to    | CasADi::Ipop |
|              |              |              | determine    | tInternal    |
|              |              |              | the step     |              |
|              |              |              | size for     |              |
|              |              |              | constraint   |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_for_y_ | OT_REAL      | 10           | Tolerance    | CasADi::Ipop |
| tol          |              |              | for          | tInternal    |
|              |              |              | switching to |              |
|              |              |              | full         |              |
|              |              |              | equality     |              |
|              |              |              | multiplier   |              |
|              |              |              | steps. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_min_fr | OT_REAL      | 0.050        | Safety       | CasADi::Ipop |
| ac           |              |              | factor for   | tInternal    |
|              |              |              | the minimal  |              |
|              |              |              | step size    |              |
|              |              |              | (before      |              |
|              |              |              | switching to |              |
|              |              |              | restoration  |              |
|              |              |              | phase). (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| alpha_red_fa | OT_REAL      | 0.500        | Fractional   | CasADi::Ipop |
| ctor         |              |              | reduction of | tInternal    |
|              |              |              | the trial    |              |
|              |              |              | step size in |              |
|              |              |              | the          |              |
|              |              |              | backtracking |              |
|              |              |              | line search. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| barrier_tol_ | OT_REAL      | 10           | Factor for   | CasADi::Ipop |
| factor       |              |              | mu in        | tInternal    |
|              |              |              | barrier stop |              |
|              |              |              | test. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_frac   | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
|              |              |              | minimum      | tInternal    |
|              |              |              | relative     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | point to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_STRING    | constant     | Initializati | CasADi::Ipop |
| nit_method   |              |              | on method    | tInternal    |
|              |              |              | for bound    |              |
|              |              |              | multipliers  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_i | OT_REAL      | 1            | Initial      | CasADi::Ipop |
| nit_val      |              |              | value for    | tInternal    |
|              |              |              | the bound    |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_mult_r | OT_REAL      | 1000         | Threshold    | CasADi::Ipop |
| eset_thresho |              |              | for          | tInternal    |
| ld           |              |              | resetting    |              |
|              |              |              | bound        |              |
|              |              |              | multipliers  |              |
|              |              |              | after the    |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_push   | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
|              |              |              | minimum      | tInternal    |
|              |              |              | absolute     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | point to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| bound_relax_ | OT_REAL      | 0.000        | Factor for   | CasADi::Ipop |
| factor       |              |              | initial      | tInternal    |
|              |              |              | relaxation   |              |
|              |              |              | of the       |              |
|              |              |              | bounds. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| check_deriva | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| tives_for_na |              |              | whether it   | tInternal    |
| ninf         |              |              | is desired   |              |
|              |              |              | to check for |              |
|              |              |              | Nan/Inf in   |              |
|              |              |              | derivative   |              |
|              |              |              | matrices     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| chi_cup      | OT_REAL      | 1.500        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| chi_hat      | OT_REAL      | 2            | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| chi_tilde    | OT_REAL      | 5            | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| compl_inf_to | OT_REAL      | 0.000        | Desired      | CasADi::Ipop |
| l            |              |              | threshold    | tInternal    |
|              |              |              | for the comp |              |
|              |              |              | lementarity  |              |
|              |              |              | conditions.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      | 1000         | Maximum      | CasADi::Ipop |
| init_max     |              |              | allowed      | tInternal    |
|              |              |              | least-square |              |
|              |              |              | guess of     |              |
|              |              |              | constraint   |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| constr_mult_ | OT_REAL      | 0            | Threshold    | CasADi::Ipop |
| reset_thresh |              |              | for          | tInternal    |
| old          |              |              | resetting    |              |
|              |              |              | equality and |              |
|              |              |              | inequality   |              |
|              |              |              | multipliers  |              |
|              |              |              | after        |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| constr_viol_ | OT_REAL      | 0.000        | Desired      | CasADi::Ipop |
| tol          |              |              | threshold    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | constraint   |              |
|              |              |              | violation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| constraint_v | OT_STRING    | 1-norm       | Norm to be   | CasADi::Ipop |
| iolation_nor |              |              | used for the | tInternal    |
| m_type       |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the line     |              |
|              |              |              | search. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| corrector_co | OT_REAL      | 1            | Complementar | CasADi::Ipop |
| mpl_avrg_red |              |              | ity          | tInternal    |
| _fact        |              |              | tolerance    |              |
|              |              |              | factor for   |              |
|              |              |              | accepting    |              |
|              |              |              | corrector    |              |
|              |              |              | step (unsupp |              |
|              |              |              | orted!).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| corrector_ty | OT_STRING    | none         | The type of  | CasADi::Ipop |
| pe           |              |              | corrector    | tInternal    |
|              |              |              | steps that   |              |
|              |              |              | should be    |              |
|              |              |              | taken (unsup |              |
|              |              |              | ported!).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| delta        | OT_REAL      | 1            | Multiplier   | CasADi::Ipop |
|              |              |              | for          | tInternal    |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the          |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| delta_y_max  | OT_REAL      | 1.000e+12    | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| dependency_d | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| etection_wit |              |              | the right    | tInternal    |
| h_rhs        |              |              | hand sides   |              |
|              |              |              | of the       |              |
|              |              |              | constraints  |              |
|              |              |              | should be    |              |
|              |              |              | considered   |              |
|              |              |              | during       |              |
|              |              |              | dependency   |              |
|              |              |              | detection    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| dependency_d | OT_STRING    | none         | Indicates    | CasADi::Ipop |
| etector      |              |              | which linear | tInternal    |
|              |              |              | solver       |              |
|              |              |              | should be    |              |
|              |              |              | used to      |              |
|              |              |              | detect       |              |
|              |              |              | linearly     |              |
|              |              |              | dependent    |              |
|              |              |              | equality     |              |
|              |              |              | constraints. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    | none         | Enable       | CasADi::Ipop |
| est          |              |              | derivative   | tInternal    |
|              |              |              | checker (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_INTEGER   | -2           | Index of     | CasADi::Ipop |
| est_first_in |              |              | first        | tInternal    |
| dex          |              |              | quantity to  |              |
|              |              |              | be checked   |              |
|              |              |              | by           |              |
|              |              |              | derivative   |              |
|              |              |              | checker (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      | 0.000        | Size of the  | CasADi::Ipop |
| est_perturba |              |              | finite       | tInternal    |
| tion         |              |              | difference   |              |
|              |              |              | perturbation |              |
|              |              |              | in           |              |
|              |              |              | derivative   |              |
|              |              |              | test. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| est_print_al |              |              | whether      | tInternal    |
| l            |              |              | information  |              |
|              |              |              | for all      |              |
|              |              |              | estimated    |              |
|              |              |              | derivatives  |              |
|              |              |              | should be    |              |
|              |              |              | printed.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| derivative_t | OT_REAL      | 0.000        | Threshold    | CasADi::Ipop |
| est_tol      |              |              | for          | tInternal    |
|              |              |              | indicating   |              |
|              |              |              | wrong        |              |
|              |              |              | derivative.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| diverging_it | OT_REAL      | 1.000e+20    | Threshold    | CasADi::Ipop |
| erates_tol   |              |              | for maximal  | tInternal    |
|              |              |              | value of     |              |
|              |              |              | primal       |              |
|              |              |              | iterates.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| dual_inf_tol | OT_REAL      | 1            | Desired      | CasADi::Ipop |
|              |              |              | threshold    | tInternal    |
|              |              |              | for the dual |              |
|              |              |              | infeasibilit |              |
|              |              |              | y. (see      |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| epsilon_c    | OT_REAL      | 0.010        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| eta_min      | OT_REAL      | 10           | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| eta_penalty  | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the Armijo   |              |
|              |              |              | condition    |              |
|              |              |              | for the      |              |
|              |              |              | penalty      |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| eta_phi      | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the Armijo   |              |
|              |              |              | condition.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| evaluate_ori | OT_STRING    | yes          | Determines   | CasADi::Ipop |
| g_obj_at_res |              |              | if the       | tInternal    |
| to_trial     |              |              | original     |              |
|              |              |              | objective    |              |
|              |              |              | function     |              |
|              |              |              | should be    |              |
|              |              |              | evaluated at |              |
|              |              |              | restoration  |              |
|              |              |              | phase trial  |              |
|              |              |              | points. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | False        | Expand the   | CasADi::Ipop |
|              |              |              | objective    | tInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | False        | Expand the   | CasADi::Ipop |
|              |              |              | constraint   | tInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_STRING    | no           | Enable       | CasADi::Ipop |
| sible_proble |              |              | heuristics   | tInternal    |
| m            |              |              | to quickly   |              |
|              |              |              | detect an    |              |
|              |              |              | infeasible   |              |
|              |              |              | problem.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      | 0.001        | Threshold    | CasADi::Ipop |
| sible_proble |              |              | for          | tInternal    |
| m_ctol       |              |              | disabling \"e |              |
|              |              |              | xpect_infeas |              |
|              |              |              | ible_problem |              |
|              |              |              | \" option.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| expect_infea | OT_REAL      | 100000000    | Multiplier   | CasADi::Ipop |
| sible_proble |              |              | threshold    | tInternal    |
| m_ytol       |              |              | for          |              |
|              |              |              | activating \" |              |
|              |              |              | expect_infea |              |
|              |              |              | sible_proble |              |
|              |              |              | m\" option.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| fast_des_fac | OT_REAL      | 0.100        | a parameter  | CasADi::Ipop |
| t            |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| fast_step_co | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| mputation    |              |              | the linear   | tInternal    |
|              |              |              | system       |              |
|              |              |              | should be    |              |
|              |              |              | solved       |              |
|              |              |              | quickly.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| file_print_l | OT_INTEGER   | 5            | Verbosity    | CasADi::Ipop |
| evel         |              |              | level for    | tInternal    |
|              |              |              | output file. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| filter_margi | OT_REAL      | 0.000        | Factor       | CasADi::Ipop |
| n_fact       |              |              | determining  | tInternal    |
|              |              |              | width of     |              |
|              |              |              | margin for   |              |
|              |              |              | obj-constr-  |              |
|              |              |              | filter       |              |
|              |              |              | adaptive glo |              |
|              |              |              | balization   |              |
|              |              |              | strategy.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| filter_max_m | OT_REAL      | 1            | Maximum      | CasADi::Ipop |
| argin        |              |              | width of     | tInternal    |
|              |              |              | margin in    |              |
|              |              |              | obj-constr-  |              |
|              |              |              | filter       |              |
|              |              |              | adaptive glo |              |
|              |              |              | balization   |              |
|              |              |              | strategy.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| filter_reset | OT_INTEGER   | 5            | Number of    | CasADi::Ipop |
| _trigger     |              |              | iterations   | tInternal    |
|              |              |              | that trigger |              |
|              |              |              | the filter   |              |
|              |              |              | reset. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| findiff_pert | OT_REAL      | 0.000        | Size of the  | CasADi::Ipop |
| urbation     |              |              | finite       | tInternal    |
|              |              |              | difference   |              |
|              |              |              | perturbation |              |
|              |              |              | for          |              |
|              |              |              | derivative a |              |
|              |              |              | pproximation |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| first_hessia | OT_REAL      | 0.000        | Size of      | CasADi::Ipop |
| n_perturbati |              |              | first x-s    | tInternal    |
| on           |              |              | perturbation |              |
|              |              |              | tried. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| fixed_mu_ora | OT_STRING    | average_comp | Oracle for   | CasADi::Ipop |
| cle          |              | l            | the barrier  | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | when         |              |
|              |              |              | switching to |              |
|              |              |              | fixed mode.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| fixed_variab | OT_STRING    | make_paramet | Determines   | CasADi::Ipop |
| le_treatment |              | er           | how fixed    | tInternal    |
|              |              |              | variables    |              |
|              |              |              | should be    |              |
|              |              |              | handled.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_hat    | OT_REAL      | 0.040        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_phi    | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the filter   |              |
|              |              |              | margin for   |              |
|              |              |              | the barrier  |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_theta  | OT_REAL      | 0.000        | Relaxation   | CasADi::Ipop |
|              |              |              | factor in    | tInternal    |
|              |              |              | the filter   |              |
|              |              |              | margin for   |              |
|              |              |              | the          |              |
|              |              |              | constraint   |              |
|              |              |              | violation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gamma_tilde  | OT_REAL      | 4            | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | False        | Use Gauss    | CasADi::Ipop |
|              |              |              | Newton       | tInternal    |
|              |              |              | Hessian appr |              |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | False        | Generate an  | CasADi::Ipop |
| sian         |              |              | exact        | tInternal    |
|              |              |              | Hessian of   |              |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | True         | Generate an  | CasADi::Ipop |
| obian        |              |              | exact        | tInternal    |
|              |              |              | Jacobian of  |              |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | exact        | Indicates    | CasADi::Ipop |
| oximation    |              |              | what Hessian | tInternal    |
|              |              |              | information  |              |
|              |              |              | is to be     |              |
|              |              |              | used. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | nonlinear-   | Indicates in | CasADi::Ipop |
| oximation_sp |              | variables    | which        | tInternal    |
| ace          |              |              | subspace the |              |
|              |              |              | Hessian      |              |
|              |              |              | information  |              |
|              |              |              | is to be app |              |
|              |              |              | roximated.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_cons | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| tant         |              |              | whether the  | tInternal    |
|              |              |              | problem is a |              |
|              |              |              | quadratic    |              |
|              |              |              | problem (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| honor_origin | OT_STRING    | yes          | Indicates    | CasADi::Ipop |
| al_bounds    |              |              | whether      | tInternal    |
|              |              |              | final points |              |
|              |              |              | should be    |              |
|              |              |              | projected    |              |
|              |              |              | into         |              |
|              |              |              | original     |              |
|              |              |              | bounds. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | False        | If set to    | CasADi::Ipop |
| _vec         |              |              | true, the    | tInternal    |
|              |              |              | input shape  |              |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| inf_pr_outpu | OT_STRING    | original     | Determines   | CasADi::Ipop |
| t            |              |              | what value   | tInternal    |
|              |              |              | is printed   |              |
|              |              |              | in the       |              |
|              |              |              | \"inf_pr\"     |              |
|              |              |              | output       |              |
|              |              |              | column. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        |              | A function   | CasADi::Ipop |
| llback       |              |              | that will be | tInternal    |
|              |              |              | called at    |              |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | False        | If set to    | CasADi::Ipop |
| llback_ignor |              |              | true, errors | tInternal    |
| e_errors     |              |              | thrown by it |              |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::Ipop |
| llback_step  |              |              | the callback | tInternal    |
|              |              |              | function     |              |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_c_consta | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| nt           |              |              | whether all  | tInternal    |
|              |              |              | equality     |              |
|              |              |              | constraints  |              |
|              |              |              | are linear   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_d_consta | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| nt           |              |              | whether all  | tInternal    |
|              |              |              | inequality   |              |
|              |              |              | constraints  |              |
|              |              |              | are linear   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | False        | Create the a | CasADi::Ipop |
|              |              |              | Jacobian     | tInternal    |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_app | OT_STRING    | exact        | Specifies    | CasADi::Ipop |
| roximation   |              |              | technique to | tInternal    |
|              |              |              | compute      |              |
|              |              |              | constraint   |              |
|              |              |              | Jacobian     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG |              | Function     | CasADi::Ipop |
| erator       | ENERATOR     |              | pointer that | tInternal    |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_reg | OT_REAL      | 0.250        | Exponent for | CasADi::Ipop |
| ularization_ |              |              | mu in the re | tInternal    |
| exponent     |              |              | gularization |              |
|              |              |              | for rank-    |              |
|              |              |              | deficient    |              |
|              |              |              | constraint   |              |
|              |              |              | Jacobians.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_reg | OT_REAL      | 0.000        | Size of the  | CasADi::Ipop |
| ularization_ |              |              | regularizati | tInternal    |
| value        |              |              | on for rank- |              |
|              |              |              | deficient    |              |
|              |              |              | constraint   |              |
|              |              |              | Jacobians.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_d      | OT_REAL      | 0.000        | Weight for   | CasADi::Ipop |
|              |              |              | linear       | tInternal    |
|              |              |              | damping term |              |
|              |              |              | (to handle   |              |
|              |              |              | one-sided    |              |
|              |              |              | bounds).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_sigma  | OT_REAL      | 1.000e+10    | Factor       | CasADi::Ipop |
|              |              |              | limiting the | tInternal    |
|              |              |              | deviation of |              |
|              |              |              | dual         |              |
|              |              |              | variables    |              |
|              |              |              | from primal  |              |
|              |              |              | estimates.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_soc    | OT_REAL      | 0.990        | Factor in    | CasADi::Ipop |
|              |              |              | the          | tInternal    |
|              |              |              | sufficient   |              |
|              |              |              | reduction    |              |
|              |              |              | rule for     |              |
|              |              |              | second order |              |
|              |              |              | correction.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_x_dis  | OT_REAL      | 100          | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| kappa_y_dis  | OT_REAL      | 10000        | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| least_square | OT_STRING    | no           | Least square | CasADi::Ipop |
| _init_duals  |              |              | initializati | tInternal    |
|              |              |              | on of all    |              |
|              |              |              | dual         |              |
|              |              |              | variables    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| least_square | OT_STRING    | no           | Least square | CasADi::Ipop |
| _init_primal |              |              | initializati | tInternal    |
|              |              |              | on of the    |              |
|              |              |              | primal       |              |
|              |              |              | variables    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | sherman-     | Strategy for | CasADi::Ipop |
| ry_aug_solve |              | morrison     | solving the  | tInternal    |
| r            |              |              | augmented    |              |
|              |              |              | system for   |              |
|              |              |              | low-rank     |              |
|              |              |              | Hessian.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_REAL      | 1            | Value for B0 | CasADi::Ipop |
| ry_init_val  |              |              | in low-rank  | tInternal    |
|              |              |              | update. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_REAL      | 100000000    | Upper bound  | CasADi::Ipop |
| ry_init_val_ |              |              | on value for | tInternal    |
| max          |              |              | B0 in low-   |              |
|              |              |              | rank update. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_REAL      | 0.000        | Lower bound  | CasADi::Ipop |
| ry_init_val_ |              |              | on value for | tInternal    |
| min          |              |              | B0 in low-   |              |
|              |              |              | rank update. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | scalar1      | Initializati | CasADi::Ipop |
| ry_initializ |              |              | on strategy  | tInternal    |
| ation        |              |              | for the      |              |
|              |              |              | limited      |              |
|              |              |              | memory       |              |
|              |              |              | quasi-Newton |              |
|              |              |              | approximatio |              |
|              |              |              | n. (see      |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   | 6            | Maximum size | CasADi::Ipop |
| ry_max_histo |              |              | of the       | tInternal    |
| ry           |              |              | history for  |              |
|              |              |              | the limited  |              |
|              |              |              | quasi-Newton |              |
|              |              |              | Hessian appr |              |
|              |              |              | oximation.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_INTEGER   | 2            | Threshold    | CasADi::Ipop |
| ry_max_skipp |              |              | for          | tInternal    |
| ing          |              |              | successive   |              |
|              |              |              | iterations   |              |
|              |              |              | where update |              |
|              |              |              | is skipped.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | no           | Determines   | CasADi::Ipop |
| ry_special_f |              |              | if the       | tInternal    |
| or_resto     |              |              | quasi-Newton |              |
|              |              |              | updates      |              |
|              |              |              | should be    |              |
|              |              |              | special      |              |
|              |              |              | during the   |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| limited_memo | OT_STRING    | bfgs         | Quasi-Newton | CasADi::Ipop |
| ry_update_ty |              |              | update       | tInternal    |
| pe           |              |              | formula for  |              |
|              |              |              | the limited  |              |
|              |              |              | memory appro |              |
|              |              |              | ximation.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| line_search_ | OT_STRING    | filter       | Globalizatio | CasADi::Ipop |
| method       |              |              | n method     | tInternal    |
|              |              |              | used in      |              |
|              |              |              | backtracking |              |
|              |              |              | line search  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_scali | OT_STRING    | yes          | Flag         | CasADi::Ipop |
| ng_on_demand |              |              | indicating   | tInternal    |
|              |              |              | that linear  |              |
|              |              |              | scaling is   |              |
|              |              |              | only done if |              |
|              |              |              | it seems     |              |
|              |              |              | required.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | ma27         | Linear       | CasADi::Ipop |
| r            |              |              | solver used  | tInternal    |
|              |              |              | for step com |              |
|              |              |              | putations.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_syste | OT_STRING    | mc19         | Method for   | CasADi::Ipop |
| m_scaling    |              |              | scaling the  | tInternal    |
|              |              |              | linear       |              |
|              |              |              | system. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_ignore_ | OT_STRING    | no           | Enables      | CasADi::Ipop |
| singularity  |              |              | MA27's       | tInternal    |
|              |              |              | ability to   |              |
|              |              |              | solve a      |              |
|              |              |              | linear       |              |
|              |              |              | system even  |              |
|              |              |              | if the       |              |
|              |              |              | matrix is    |              |
|              |              |              | singular.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_la_init | OT_REAL      | 5            | Real         | CasADi::Ipop |
| _factor      |              |              | workspace    | tInternal    |
|              |              |              | memory for   |              |
|              |              |              | MA27. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_liw_ini | OT_REAL      | 5            | Integer      | CasADi::Ipop |
| t_factor     |              |              | workspace    | tInternal    |
|              |              |              | memory for   |              |
|              |              |              | MA27. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_meminc_ | OT_REAL      | 10           | Increment    | CasADi::Ipop |
| factor       |              |              | factor for   | tInternal    |
|              |              |              | workspace    |              |
|              |              |              | size for     |              |
|              |              |              | MA27. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtol  | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA27. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_pivtolm | OT_REAL      | 0.000        | Maximum      | CasADi::Ipop |
| ax           |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA27. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma27_skip_in | OT_STRING    | no           | Always       | CasADi::Ipop |
| ertia_check  |              |              | pretend      | tInternal    |
|              |              |              | inertia is   |              |
|              |              |              | correct.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma28_pivtol  | OT_REAL      | 0.010        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for linear   |              |
|              |              |              | solver MA28. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_automat | OT_STRING    | yes          | Controls     | CasADi::Ipop |
| ic_scaling   |              |              | MA57         | tInternal    |
|              |              |              | automatic    |              |
|              |              |              | scaling (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_block_s | OT_INTEGER   | 16           | Controls     | CasADi::Ipop |
| ize          |              |              | block size   | tInternal    |
|              |              |              | used by      |              |
|              |              |              | Level 3 BLAS |              |
|              |              |              | in MA57BD    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_node_am | OT_INTEGER   | 16           | Node         | CasADi::Ipop |
| algamation   |              |              | amalgamation | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivot_o | OT_INTEGER   | 5            | Controls     | CasADi::Ipop |
| rder         |              |              | pivot order  | tInternal    |
|              |              |              | in MA57 (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtol  | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA57. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pivtolm | OT_REAL      | 0.000        | Maximum      | CasADi::Ipop |
| ax           |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA57. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_pre_all | OT_REAL      | 1.050        | Safety       | CasADi::Ipop |
| oc           |              |              | factor for   | tInternal    |
|              |              |              | work space   |              |
|              |              |              | memory       |              |
|              |              |              | allocation   |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver MA57. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma57_small_p | OT_INTEGER   | 0            | If set to 1, | CasADi::Ipop |
| ivot_flag    |              |              | then when    | tInternal    |
|              |              |              | small        |              |
|              |              |              | entries      |              |
|              |              |              | defined by   |              |
|              |              |              | CNTL(2) are  |              |
|              |              |              | detected     |              |
|              |              |              | they are     |              |
|              |              |              | removed and  |              |
|              |              |              | the correspo |              |
|              |              |              | nding pivots |              |
|              |              |              | placed at    |              |
|              |              |              | the end of   |              |
|              |              |              | the factoriz |              |
|              |              |              | ation. This  |              |
|              |              |              | can be       |              |
|              |              |              | particularly |              |
|              |              |              | efficient if |              |
|              |              |              | the matrix   |              |
|              |              |              | is highly    |              |
|              |              |              | rank         |              |
|              |              |              | deficient.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_nemin   | OT_INTEGER   | 32           | Node         | CasADi::Ipop |
|              |              |              | Amalgamation | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_print_l | OT_INTEGER   | 0            | Debug        | CasADi::Ipop |
| evel         |              |              | printing     | tInternal    |
|              |              |              | level for    |              |
|              |              |              | the linear   |              |
|              |              |              | solver MA86  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_small   | OT_REAL      | 0.000        | Zero Pivot   | CasADi::Ipop |
|              |              |              | Threshold    | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_static  | OT_REAL      | 0            | Static       | CasADi::Ipop |
|              |              |              | Pivoting     | tInternal    |
|              |              |              | Threshold    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_u       | OT_REAL      | 0.000        | Pivoting     | CasADi::Ipop |
|              |              |              | Threshold    | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| ma86_umax    | OT_REAL      | 0.000        | Maximum      | CasADi::Ipop |
|              |              |              | Pivoting     | tInternal    |
|              |              |              | Threshold    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| magic_steps  | OT_STRING    | no           | Enables      | CasADi::Ipop |
|              |              |              | magic steps. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_cpu_time | OT_REAL      | 1000000      | Maximum      | CasADi::Ipop |
|              |              |              | number of    | tInternal    |
|              |              |              | CPU seconds. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_filter_r | OT_INTEGER   | 5            | Maximal      | CasADi::Ipop |
| esets        |              |              | allowed      | tInternal    |
|              |              |              | number of    |              |
|              |              |              | filter       |              |
|              |              |              | resets (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| max_hessian_ | OT_REAL      | 1.000e+20    | Maximum      | CasADi::Ipop |
| perturbation |              |              | value of reg | tInternal    |
|              |              |              | ularization  |              |
|              |              |              | parameter    |              |
|              |              |              | for handling |              |
|              |              |              | negative     |              |
|              |              |              | curvature.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_iter     | OT_INTEGER   | 3000         | Maximum      | CasADi::Ipop |
|              |              |              | number of    | tInternal    |
|              |              |              | iterations.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_refineme | OT_INTEGER   | 10           | Maximum      | CasADi::Ipop |
| nt_steps     |              |              | number of    | tInternal    |
|              |              |              | iterative    |              |
|              |              |              | refinement   |              |
|              |              |              | steps per    |              |
|              |              |              | linear       |              |
|              |              |              | system       |              |
|              |              |              | solve. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| max_resto_it | OT_INTEGER   | 3000000      | Maximum      | CasADi::Ipop |
| er           |              |              | number of    | tInternal    |
|              |              |              | successive   |              |
|              |              |              | iterations   |              |
|              |              |              | in           |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| max_soc      | OT_INTEGER   | 4            | Maximum      | CasADi::Ipop |
|              |              |              | number of    | tInternal    |
|              |              |              | second order |              |
|              |              |              | correction   |              |
|              |              |              | trial steps  |              |
|              |              |              | at each      |              |
|              |              |              | iteration.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| max_soft_res | OT_INTEGER   | 10           | Maximum      | CasADi::Ipop |
| to_iters     |              |              | number of    | tInternal    |
|              |              |              | iterations   |              |
|              |              |              | performed    |              |
|              |              |              | successively |              |
|              |              |              | in soft      |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mehrotra_alg | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| orithm       |              |              | we want to   | tInternal    |
|              |              |              | do           |              |
|              |              |              | Mehrotra's   |              |
|              |              |              | algorithm.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| min_alpha_pr | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
| imal         |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| min_hessian_ | OT_REAL      | 0.000        | Smallest     | CasADi::Ipop |
| perturbation |              |              | perturbation | tInternal    |
|              |              |              | of the       |              |
|              |              |              | Hessian      |              |
|              |              |              | block. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| min_refineme | OT_INTEGER   | 1            | Minimum      | CasADi::Ipop |
| nt_steps     |              |              | number of    | tInternal    |
|              |              |              | iterative    |              |
|              |              |              | refinement   |              |
|              |              |              | steps per    |              |
|              |              |              | linear       |              |
|              |              |              | system       |              |
|              |              |              | solve. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::IpoptIn |
|              |              |              | uts)  (eval_ | ternal       |
|              |              |              | f|eval_g|eva |              |
|              |              |              | l_jac_g|eval |              |
|              |              |              | _grad_f)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_allow_fas | OT_STRING    | yes          | Allow        | CasADi::Ipop |
| t_monotone_d |              |              | skipping of  | tInternal    |
| ecrease      |              |              | barrier      |              |
|              |              |              | problem if   |              |
|              |              |              | barrier test |              |
|              |              |              | is already   |              |
|              |              |              | met. (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_init      | OT_REAL      | 0.100        | Initial      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | the barrier  |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_linear_de | OT_REAL      | 0.200        | Determines   | CasADi::Ipop |
| crease_facto |              |              | linear       | tInternal    |
| r            |              |              | decrease     |              |
|              |              |              | rate of      |              |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_max       | OT_REAL      | 100000       | Maximum      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_max_fact  | OT_REAL      | 1000         | Factor for i | CasADi::Ipop |
|              |              |              | nitializatio | tInternal    |
|              |              |              | n of maximum |              |
|              |              |              | value for    |              |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_min       | OT_REAL      | 0.000        | Minimum      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_oracle    | OT_STRING    | quality-     | Oracle for a | CasADi::Ipop |
|              |              | function     | new barrier  | tInternal    |
|              |              |              | parameter in |              |
|              |              |              | the adaptive |              |
|              |              |              | strategy.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_strategy  | OT_STRING    | monotone     | Update       | CasADi::Ipop |
|              |              |              | strategy for | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_superline | OT_REAL      | 1.500        | Determines   | CasADi::Ipop |
| ar_decrease_ |              |              | superlinear  | tInternal    |
| power        |              |              | decrease     |              |
|              |              |              | rate of      |              |
|              |              |              | barrier      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_target    | OT_REAL      | 0            | Desired      | CasADi::Ipop |
|              |              |              | value of com | tInternal    |
|              |              |              | plementarity |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| mult_diverg_ | OT_REAL      | 0.000        | tolerance    | CasADi::Ipop |
| feasibility_ |              |              | for deciding | tInternal    |
| tol          |              |              | if the       |              |
|              |              |              | multipliers  |              |
|              |              |              | are          |              |
|              |              |              | diverging    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mult_diverg_ | OT_REAL      | 100000000    | tolerance    | CasADi::Ipop |
| y_tol        |              |              | for deciding | tInternal    |
|              |              |              | if the       |              |
|              |              |              | multipliers  |              |
|              |              |              | are          |              |
|              |              |              | diverging    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_dep_to | OT_REAL      | -1           | Pivot        | CasADi::Ipop |
| l            |              |              | threshold    | tInternal    |
|              |              |              | for          |              |
|              |              |              | detection of |              |
|              |              |              | linearly     |              |
|              |              |              | dependent    |              |
|              |              |              | constraints  |              |
|              |              |              | in MUMPS.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_mem_pe | OT_INTEGER   | 1000         | Percentage   | CasADi::Ipop |
| rcent        |              |              | increase in  | tInternal    |
|              |              |              | the          |              |
|              |              |              | estimated    |              |
|              |              |              | working      |              |
|              |              |              | space for    |              |
|              |              |              | MUMPS. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_permut | OT_INTEGER   | 7            | Controls     | CasADi::Ipop |
| ing_scaling  |              |              | permuting    | tInternal    |
|              |              |              | and scaling  |              |
|              |              |              | in MUMPS     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivot_ | OT_INTEGER   | 7            | Controls     | CasADi::Ipop |
| order        |              |              | pivot order  | tInternal    |
|              |              |              | in MUMPS     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver       |              |
|              |              |              | MUMPS. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_pivtol | OT_REAL      | 0.100        | Maximum      | CasADi::Ipop |
| max          |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver       |              |
|              |              |              | MUMPS. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| mumps_scalin | OT_INTEGER   | 77           | Controls     | CasADi::Ipop |
| g            |              |              | scaling in   | tInternal    |
|              |              |              | MUMPS (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | unnamed_shar | n/a          | CasADi::Ipop |
|              |              | ed_object    |              | tInternal    |
+--------------+--------------+--------------+--------------+--------------+
| neg_curv_tes | OT_REAL      | 0            | Tolerance    | CasADi::Ipop |
| t_tol        |              |              | for          | tInternal    |
|              |              |              | heuristic to |              |
|              |              |              | ignore wrong |              |
|              |              |              | inertia.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| never_use_fa | OT_STRING    | no           | Toggle to    | CasADi::Ipop |
| ct_cgpen_dir |              |              | switch off   | tInternal    |
| ection       |              |              | the fast     |              |
|              |              |              | Chen-        |              |
|              |              |              | Goldfarb     |              |
|              |              |              | direction    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| never_use_pi | OT_STRING    | no           | Toggle to    | CasADi::Ipop |
| ecewise_pena |              |              | switch off   | tInternal    |
| lty_ls       |              |              | the          |              |
|              |              |              | piecewise    |              |
|              |              |              | penalty      |              |
|              |              |              | method (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_lower_bo | OT_REAL      | -1.000e+19   | any bound    | CasADi::Ipop |
| und_inf      |              |              | less or      | tInternal    |
|              |              |              | equal this   |              |
|              |              |              | value will   |              |
|              |              |              | be           |              |
|              |              |              | considered   |              |
|              |              |              | -inf (i.e.   |              |
|              |              |              | not lower    |              |
|              |              |              | bounded).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 0            | Target value | CasADi::Ipop |
| constr_targe |              |              | for          | tInternal    |
| t_gradient   |              |              | constraint   |              |
|              |              |              | function     |              |
|              |              |              | gradient     |              |
|              |              |              | size. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 100          | Maximum      | CasADi::Ipop |
| max_gradient |              |              | gradient     | tInternal    |
|              |              |              | after NLP    |              |
|              |              |              | scaling.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_STRING    | gradient-    | Select the   | CasADi::Ipop |
| method       |              | based        | technique    | tInternal    |
|              |              |              | used for     |              |
|              |              |              | scaling the  |              |
|              |              |              | NLP. (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 0.000        | Minimum      | CasADi::Ipop |
| min_value    |              |              | value of     | tInternal    |
|              |              |              | gradient-    |              |
|              |              |              | based        |              |
|              |              |              | scaling      |              |
|              |              |              | values. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_scaling_ | OT_REAL      | 0            | Target value | CasADi::Ipop |
| obj_target_g |              |              | for          | tInternal    |
| radient      |              |              | objective    |              |
|              |              |              | function     |              |
|              |              |              | gradient     |              |
|              |              |              | size. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| nlp_upper_bo | OT_REAL      | 1.000e+19    | any bound    | CasADi::Ipop |
| und_inf      |              |              | greater or   | tInternal    |
|              |              |              | this value   |              |
|              |              |              | will be      |              |
|              |              |              | considered   |              |
|              |              |              | +inf (i.e.   |              |
|              |              |              | not upper    |              |
|              |              |              | bounded).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nu_inc       | OT_REAL      | 0.000        | Increment of | CasADi::Ipop |
|              |              |              | the penalty  | tInternal    |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| nu_init      | OT_REAL      | 0.000        | Initial      | CasADi::Ipop |
|              |              |              | value of the | tInternal    |
|              |              |              | penalty      |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| num_linear_v | OT_INTEGER   | 0            | Number of    | CasADi::Ipop |
| ariables     |              |              | linear       | tInternal    |
|              |              |              | variables    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::Ipop |
| j_dir        |              |              | adjoint      | tInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::Ipop |
| d_dir        |              |              | forward      | tInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | False        | Calculate    | CasADi::Ipop |
| ian          |              |              | Hessians     | tInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | False        | Calculate    | CasADi::Ipop |
| bian         |              |              | Jacobians    | tInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| obj_max_inc  | OT_REAL      | 5            | Determines   | CasADi::Ipop |
|              |              |              | the upper    | tInternal    |
|              |              |              | bound on the |              |
|              |              |              | acceptable   |              |
|              |              |              | increase of  |              |
|              |              |              | barrier      |              |
|              |              |              | objective    |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| obj_scaling_ | OT_REAL      | 1            | Scaling      | CasADi::Ipop |
| factor       |              |              | factor for   | tInternal    |
|              |              |              | the          |              |
|              |              |              | objective    |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| option_file_ | OT_STRING    |              | File name of | CasADi::Ipop |
| name         |              |              | options file | tInternal    |
|              |              |              | (to          |              |
|              |              |              | overwrite    |              |
|              |              |              | default).    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| output_file  | OT_STRING    |              | File name of | CasADi::Ipop |
|              |              |              | desired      | tInternal    |
|              |              |              | output file  |              |
|              |              |              | (leave unset |              |
|              |              |              | for no file  |              |
|              |              |              | output).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | False        | Expect F, G, | CasADi::Ipop |
|              |              |              | H, J to have | tInternal    |
|              |              |              | an           |              |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_INTEGER   | 5000         | Maximum Size | CasADi::Ipop |
| _coarse_size |              |              | of Coarse    | tInternal    |
|              |              |              | Grid Matrix  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 0.500        | dropping     | CasADi::Ipop |
| _dropping_fa |              |              | value for    | tInternal    |
| ctor         |              |              | incomplete   |              |
|              |              |              | factor (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 0.100        | dropping     | CasADi::Ipop |
| _dropping_sc |              |              | value for    | tInternal    |
| hur          |              |              | sparsify     |              |
|              |              |              | schur        |              |
|              |              |              | complement   |              |
|              |              |              | factor (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 5000000      | (see IPOPT d | CasADi::Ipop |
| _inverse_nor |              |              | ocumentation | tInternal    |
| m_factor     |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_INTEGER   | 10           | Maximum Size | CasADi::Ipop |
| _max_levels  |              |              | of Grid      | tInternal    |
|              |              |              | Levels (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_INTEGER   | 10000000     | max fill for | CasADi::Ipop |
| _max_row_fil |              |              | each row     | tInternal    |
| l            |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_REAL      | 0.000        | Relative     | CasADi::Ipop |
| _relative_to |              |              | Residual     | tInternal    |
| l            |              |              | Convergence  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_iter | OT_STRING    | no           | Switch on    | CasADi::Ipop |
| ative        |              |              | iterative    | tInternal    |
|              |              |              | solver in    |              |
|              |              |              | Pardiso      |              |
|              |              |              | library (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_matc | OT_STRING    | complete+2x2 | Matching     | CasADi::Ipop |
| hing_strateg |              |              | strategy to  | tInternal    |
| y            |              |              | be used by   |              |
|              |              |              | Pardiso (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_max_ | OT_INTEGER   | 4            | Maximal      | CasADi::Ipop |
| droptol_corr |              |              | number of    | tInternal    |
| ections      |              |              | decreases of |              |
|              |              |              | drop         |              |
|              |              |              | tolerance    |              |
|              |              |              | during one   |              |
|              |              |              | solve. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_max_ | OT_INTEGER   | 500          | Maximum      | CasADi::Ipop |
| iter         |              |              | number of    | tInternal    |
|              |              |              | Krylov-      |              |
|              |              |              | Subspace     |              |
|              |              |              | Iteration    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_msgl | OT_INTEGER   | 0            | Pardiso      | CasADi::Ipop |
| vl           |              |              | message      | tInternal    |
|              |              |              | level (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_out_ | OT_INTEGER   | 0            | Enables out- | CasADi::Ipop |
| of_core_powe |              |              | of-core      | tInternal    |
| r            |              |              | variant of   |              |
|              |              |              | Pardiso (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_redo | OT_STRING    | no           | Toggle for   | CasADi::Ipop |
| _symbolic_fa |              |              | handling     | tInternal    |
| ct_only_if_i |              |              | case when    |              |
| nertia_wrong |              |              | elements     |              |
|              |              |              | were         |              |
|              |              |              | perturbed by |              |
|              |              |              | Pardiso.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_repe | OT_STRING    | no           | Interpretati | CasADi::Ipop |
| ated_perturb |              |              | on of        | tInternal    |
| ation_means_ |              |              | perturbed    |              |
| singular     |              |              | elements.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pardiso_skip | OT_STRING    | no           | Always       | CasADi::Ipop |
| _inertia_che |              |              | pretend      | tInternal    |
| ck           |              |              | inertia is   |              |
|              |              |              | correct.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pass_nonline | OT_BOOLEAN   | true         |              | CasADi::Ipop |
| ar_variables |              |              |              | tInternal    |
+--------------+--------------+--------------+--------------+--------------+
| pen_des_fact | OT_REAL      | 0.200        | a parameter  | CasADi::Ipop |
|              |              |              | used in      | tInternal    |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | computation  |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| pen_init_fac | OT_REAL      | 50           | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | choose       |              |
|              |              |              | initial      |              |
|              |              |              | penalty para |              |
|              |              |              | meterswhen   |              |
|              |              |              | the          |              |
|              |              |              | regularized  |              |
|              |              |              | Newton       |              |
|              |              |              | method is    |              |
|              |              |              | used. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| pen_theta_ma | OT_REAL      | 10000        | Determines   | CasADi::Ipop |
| x_fact       |              |              | upper bound  | tInternal    |
|              |              |              | for          |              |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the filter.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_init | OT_REAL      | 100000       | Maximal      | CasADi::Ipop |
| _max         |              |              | value for    | tInternal    |
|              |              |              | the intial   |              |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_init | OT_REAL      | 1            | Minimal      | CasADi::Ipop |
| _min         |              |              | value for    | tInternal    |
|              |              |              | the intial   |              |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | for line     |              |
|              |              |              | search(for   |              |
|              |              |              | Chen-        |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_max  | OT_REAL      | 1.000e+30    | Maximal      | CasADi::Ipop |
|              |              |              | value for    | tInternal    |
|              |              |              | the penalty  |              |
|              |              |              | parameter    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_upda | OT_REAL      | 10           | LIFENG       | CasADi::Ipop |
| te_compl_tol |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| penalty_upda | OT_REAL      | 0.000        | Threshold    | CasADi::Ipop |
| te_infeasibi |              |              | for infeasib | tInternal    |
| lity_tol     |              |              | ility in     |              |
|              |              |              | penalty      |              |
|              |              |              | parameter    |              |
|              |              |              | update test. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_alwa | OT_STRING    | no           | Active       | CasADi::Ipop |
| ys_cd        |              |              | permanent    | tInternal    |
|              |              |              | perturbation |              |
|              |              |              | of           |              |
|              |              |              | constraint l |              |
|              |              |              | inearization |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_dec_ | OT_REAL      | 0.333        | Decrease     | CasADi::Ipop |
| fact         |              |              | factor for   | tInternal    |
|              |              |              | x-s perturba |              |
|              |              |              | tion. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      | 8            | Increase     | CasADi::Ipop |
| fact         |              |              | factor for   | tInternal    |
|              |              |              | x-s perturba |              |
|              |              |              | tion. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| perturb_inc_ | OT_REAL      | 100          | Increase     | CasADi::Ipop |
| fact_first   |              |              | factor for   | tInternal    |
|              |              |              | x-s          |              |
|              |              |              | perturbation |              |
|              |              |              | for very     |              |
|              |              |              | first pertur |              |
|              |              |              | bation. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| piecewisepen | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
| alty_gamma_i |              |              | WRITES THIS. | tInternal    |
| nfeasi       |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| piecewisepen | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
| alty_gamma_o |              |              | WRITES THIS. | tInternal    |
| bj           |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| point_pertur | OT_REAL      | 10           | Maximal      | CasADi::Ipop |
| bation_radiu |              |              | perturbation | tInternal    |
| s            |              |              | of an        |              |
|              |              |              | evaluation   |              |
|              |              |              | point. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| print_info_s | OT_STRING    | no           | Enables      | CasADi::Ipop |
| tring        |              |              | printing of  | tInternal    |
|              |              |              | additional   |              |
|              |              |              | info string  |              |
|              |              |              | at end of    |              |
|              |              |              | iteration    |              |
|              |              |              | output. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_INTEGER   | 5            | Output       | CasADi::Ipop |
|              |              |              | verbosity    | tInternal    |
|              |              |              | level. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| print_option | OT_STRING    | no           | Switch to    | CasADi::Ipop |
| s_documentat |              |              | print all    | tInternal    |
| ion          |              |              | algorithmic  |              |
|              |              |              | options.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| print_option | OT_STRING    | no           | Undocumented | CasADi::Ipop |
| s_latex_mode |              |              | (see IPOPT d | tInternal    |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| print_time   | OT_BOOLEAN   | true         | print        | CasADi::Ipop |
|              |              |              | information  | tInternal    |
|              |              |              | about        |              |
|              |              |              | execution    |              |
|              |              |              | time         |              |
+--------------+--------------+--------------+--------------+--------------+
| print_timing | OT_STRING    | no           | Switch to    | CasADi::Ipop |
| _statistics  |              |              | print timing | tInternal    |
|              |              |              | statistics.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| print_user_o | OT_STRING    | no           | Print all    | CasADi::Ipop |
| ptions       |              |              | options set  | tInternal    |
|              |              |              | by the user. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_STRING    | none         | The          | CasADi::Ipop |
| tion_balanci |              |              | balancing    | tInternal    |
| ng_term      |              |              | term         |              |
|              |              |              | included in  |              |
|              |              |              | the quality  |              |
|              |              |              | function for |              |
|              |              |              | centrality.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_STRING    | none         | The penalty  | CasADi::Ipop |
| tion_central |              |              | term for     | tInternal    |
| ity          |              |              | centrality   |              |
|              |              |              | that is      |              |
|              |              |              | included in  |              |
|              |              |              | quality      |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_INTEGER   | 8            | Maximum      | CasADi::Ipop |
| tion_max_sec |              |              | number of    | tInternal    |
| tion_steps   |              |              | search steps |              |
|              |              |              | during       |              |
|              |              |              | direct       |              |
|              |              |              | search       |              |
|              |              |              | procedure    |              |
|              |              |              | determining  |              |
|              |              |              | the optimal  |              |
|              |              |              | centering    |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_STRING    | 2-norm-      | Norm used    | CasADi::Ipop |
| tion_norm_ty |              | squared      | for          | tInternal    |
| pe           |              |              | components   |              |
|              |              |              | of the       |              |
|              |              |              | quality      |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_REAL      | 0            | Tolerance    | CasADi::Ipop |
| tion_section |              |              | for the      | tInternal    |
| _qf_tol      |              |              | golden       |              |
|              |              |              | section      |              |
|              |              |              | search       |              |
|              |              |              | procedure    |              |
|              |              |              | determining  |              |
|              |              |              | the optimal  |              |
|              |              |              | centering    |              |
|              |              |              | parameter    |              |
|              |              |              | (in the      |              |
|              |              |              | function     |              |
|              |              |              | value        |              |
|              |              |              | space). (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| quality_func | OT_REAL      | 0.010        | Tolerance    | CasADi::Ipop |
| tion_section |              |              | for the      | tInternal    |
| _sigma_tol   |              |              | section      |              |
|              |              |              | search       |              |
|              |              |              | procedure    |              |
|              |              |              | determining  |              |
|              |              |              | the optimal  |              |
|              |              |              | centering    |              |
|              |              |              | parameter    |              |
|              |              |              | (in sigma    |              |
|              |              |              | space). (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y     | OT_STRING    | no           | Tells the    | CasADi::Ipop |
|              |              |              | algorithm to | tInternal    |
|              |              |              | recalculate  |              |
|              |              |              | the equality |              |
|              |              |              | and          |              |
|              |              |              | inequality   |              |
|              |              |              | multipliers  |              |
|              |              |              | as least     |              |
|              |              |              | square       |              |
|              |              |              | estimates.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| recalc_y_fea | OT_REAL      | 0.000        | Feasibility  | CasADi::Ipop |
| s_tol        |              |              | threshold    | tInternal    |
|              |              |              | for recomput |              |
|              |              |              | ation of     |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| replace_boun | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| ds           |              |              | all variable | tInternal    |
|              |              |              | bounds       |              |
|              |              |              | should be    |              |
|              |              |              | replaced by  |              |
|              |              |              | inequality   |              |
|              |              |              | constraints  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| required_inf | OT_REAL      | 0.900        | Required     | CasADi::Ipop |
| easibility_r |              |              | reduction of | tInternal    |
| eduction     |              |              | infeasibilit |              |
|              |              |              | y before     |              |
|              |              |              | leaving      |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| residual_imp | OT_REAL      | 1.000        | Minimal      | CasADi::Ipop |
| rovement_fac |              |              | required     | tInternal    |
| tor          |              |              | reduction of |              |
|              |              |              | residual     |              |
|              |              |              | test ratio   |              |
|              |              |              | in iterative |              |
|              |              |              | refinement.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| residual_rat | OT_REAL      | 0.000        | Iterative    | CasADi::Ipop |
| io_max       |              |              | refinement   | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| residual_rat | OT_REAL      | 0.000        | Threshold    | CasADi::Ipop |
| io_singular  |              |              | for          | tInternal    |
|              |              |              | declaring    |              |
|              |              |              | linear       |              |
|              |              |              | system       |              |
|              |              |              | singular     |              |
|              |              |              | after failed |              |
|              |              |              | iterative    |              |
|              |              |              | refinement.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| resto_failur | OT_REAL      | 0            | Threshold    | CasADi::Ipop |
| e_feasibilit |              |              | for primal i | tInternal    |
| y_threshold  |              |              | nfeasibility |              |
|              |              |              | to declare   |              |
|              |              |              | failure of   |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| resto_penalt | OT_REAL      | 1000         | Penalty      | CasADi::Ipop |
| y_parameter  |              |              | parameter in | tInternal    |
|              |              |              | the          |              |
|              |              |              | restoration  |              |
|              |              |              | phase        |              |
|              |              |              | objective    |              |
|              |              |              | function.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| resto_proxim | OT_REAL      | 1            | Weighting    | CasADi::Ipop |
| ity_weight   |              |              | factor for   | tInternal    |
|              |              |              | the          |              |
|              |              |              | proximity    |              |
|              |              |              | term in      |              |
|              |              |              | restoration  |              |
|              |              |              | phase        |              |
|              |              |              | objective.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| rho          | OT_REAL      | 0.100        | Value in     | CasADi::Ipop |
|              |              |              | penalty      | tInternal    |
|              |              |              | parameter    |              |
|              |              |              | update       |              |
|              |              |              | formula.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| s_max        | OT_REAL      | 100          | Scaling      | CasADi::Ipop |
|              |              |              | threshold    | tInternal    |
|              |              |              | for the NLP  |              |
|              |              |              | error. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| s_phi        | OT_REAL      | 2.300        | Exponent for | CasADi::Ipop |
|              |              |              | linear       | tInternal    |
|              |              |              | barrier      |              |
|              |              |              | function     |              |
|              |              |              | model in the |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| s_theta      | OT_REAL      | 1.100        | Exponent for | CasADi::Ipop |
|              |              |              | current      | tInternal    |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the          |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| sb           | OT_STRING    | no           | (see IPOPT d | CasADi::Ipop |
|              |              |              | ocumentation | tInternal    |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| sigma_max    | OT_REAL      | 100          | Maximum      | CasADi::Ipop |
|              |              |              | value of the | tInternal    |
|              |              |              | centering    |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| sigma_min    | OT_REAL      | 0.000        | Minimum      | CasADi::Ipop |
|              |              |              | value of the | tInternal    |
|              |              |              | centering    |              |
|              |              |              | parameter.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| skip_corr_if | OT_STRING    | yes          | Skip the     | CasADi::Ipop |
| _neg_curv    |              |              | corrector    | tInternal    |
|              |              |              | step in      |              |
|              |              |              | negative     |              |
|              |              |              | curvature    |              |
|              |              |              | iteration (u |              |
|              |              |              | nsupported!) |              |
|              |              |              | . (see IPOPT |              |
|              |              |              | documentatio |              |
|              |              |              | n)           |              |
+--------------+--------------+--------------+--------------+--------------+
| skip_corr_in | OT_STRING    | yes          | Skip the     | CasADi::Ipop |
| _monotone_mo |              |              | corrector    | tInternal    |
| de           |              |              | step during  |              |
|              |              |              | monotone     |              |
|              |              |              | barrier      |              |
|              |              |              | parameter    |              |
|              |              |              | mode (unsupp |              |
|              |              |              | orted!).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| skip_finaliz | OT_STRING    | no           | Indicates if | CasADi::Ipop |
| e_solution_c |              |              | call to NLP: | tInternal    |
| all          |              |              | :FinalizeSol |              |
|              |              |              | ution after  |              |
|              |              |              | optimization |              |
|              |              |              | should be    |              |
|              |              |              | suppressed   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
| frac         |              |              | minimum      | tInternal    |
|              |              |              | relative     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | slack to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| slack_bound_ | OT_REAL      | 0.010        | Desired      | CasADi::Ipop |
| push         |              |              | minimum      | tInternal    |
|              |              |              | absolute     |              |
|              |              |              | distance     |              |
|              |              |              | from the     |              |
|              |              |              | initial      |              |
|              |              |              | slack to     |              |
|              |              |              | bound. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| slack_move   | OT_REAL      | 0.000        | Correction   | CasADi::Ipop |
|              |              |              | size for     | tInternal    |
|              |              |              | very small   |              |
|              |              |              | slacks. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| soft_resto_p | OT_REAL      | 1.000        | Required     | CasADi::Ipop |
| derror_reduc |              |              | reduction in | tInternal    |
| tion_factor  |              |              | primal-dual  |              |
|              |              |              | error in the |              |
|              |              |              | soft         |              |
|              |              |              | restoration  |              |
|              |              |              | phase. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | True         | function is  | CasADi::Ipop |
|              |              |              | sparse       | tInternal    |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG |              | Function     | CasADi::Ipop |
| erator       | ENERATOR     |              | that         | tInternal    |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| start_with_r | OT_STRING    | no           | Tells        | CasADi::Ipop |
| esto         |              |              | algorithm to | tInternal    |
|              |              |              | switch to    |              |
|              |              |              | restoration  |              |
|              |              |              | phase in     |              |
|              |              |              | first        |              |
|              |              |              | iteration.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | False        | keep         | CasADi::Ipop |
| ans          |              |              | references   | tInternal    |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| suppress_all | OT_STRING    | no           | Undocumented | CasADi::Ipop |
| _output      |              |              | (see IPOPT d | tInternal    |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| tau_min      | OT_REAL      | 0.990        | Lower bound  | CasADi::Ipop |
|              |              |              | on fraction- | tInternal    |
|              |              |              | to-the-      |              |
|              |              |              | boundary     |              |
|              |              |              | parameter    |              |
|              |              |              | tau. (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| theta_max_fa | OT_REAL      | 10000        | Determines   | CasADi::Ipop |
| ct           |              |              | upper bound  | tInternal    |
|              |              |              | for          |              |
|              |              |              | constraint   |              |
|              |              |              | violation in |              |
|              |              |              | the filter.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| theta_min    | OT_REAL      | 0.000        | LIFENG       | CasADi::Ipop |
|              |              |              | WRITES THIS. | tInternal    |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| theta_min_fa | OT_REAL      | 0.000        | Determines   | CasADi::Ipop |
| ct           |              |              | constraint   | tInternal    |
|              |              |              | violation    |              |
|              |              |              | threshold in |              |
|              |              |              | the          |              |
|              |              |              | switching    |              |
|              |              |              | rule. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| tiny_step_to | OT_REAL      | 0.000        | Tolerance    | CasADi::Ipop |
| l            |              |              | for          | tInternal    |
|              |              |              | detecting    |              |
|              |              |              | numerically  |              |
|              |              |              | insignifican |              |
|              |              |              | t steps.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| tiny_step_y_ | OT_REAL      | 0.010        | Tolerance    | CasADi::Ipop |
| tol          |              |              | for quitting | tInternal    |
|              |              |              | because of   |              |
|              |              |              | numerically  |              |
|              |              |              | insignifican |              |
|              |              |              | t steps.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| tol          | OT_REAL      | 0.000        | Desired      | CasADi::Ipop |
|              |              |              | convergence  | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | (relative).  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_UNKNOWN   |              | A user-      | CasADi::Ipop |
|              |              |              | defined      | tInternal    |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| vartheta     | OT_REAL      | 0.500        | a parameter  | CasADi::Ipop |
|              |              |              | used to      | tInternal    |
|              |              |              | check if the |              |
|              |              |              | fast         |              |
|              |              |              | direction    |              |
|              |              |              | can be used  |              |
|              |              |              | asthe line   |              |
|              |              |              | search       |              |
|              |              |              | direction    |              |
|              |              |              | (for Chen-   |              |
|              |              |              | Goldfarb     |              |
|              |              |              | line         |              |
|              |              |              | search).     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | False        | verbose      | CasADi::Ipop |
|              |              |              | evaluation   | tInternal    |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      | 0.001        | same as      | CasADi::Ipop |
| ound_frac    |              |              | bound_frac   | tInternal    |
|              |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_b | OT_REAL      | 0.001        | same as      | CasADi::Ipop |
| ound_push    |              |              | bound_push   | tInternal    |
|              |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_e | OT_STRING    | no           | Tells        | CasADi::Ipop |
| ntire_iterat |              |              | algorithm    | tInternal    |
| e            |              |              | whether to   |              |
|              |              |              | use the GetW |              |
|              |              |              | armStartIter |              |
|              |              |              | ate method   |              |
|              |              |              | in the NLP.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_i | OT_STRING    | no           | Warm-start   | CasADi::Ipop |
| nit_point    |              |              | for initial  | tInternal    |
|              |              |              | point (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      | 0.001        | same as mult | CasADi::Ipop |
| ult_bound_pu |              |              | _bound_push  | tInternal    |
| sh           |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_m | OT_REAL      | 1000000      | Maximum      | CasADi::Ipop |
| ult_init_max |              |              | initial      | tInternal    |
|              |              |              | value for    |              |
|              |              |              | the equality |              |
|              |              |              | multipliers. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_STRING    | no           | Indicates    | CasADi::Ipop |
| ame_structur |              |              | whether a    | tInternal    |
| e            |              |              | problem with |              |
|              |              |              | a structure  |              |
|              |              |              | identical to |              |
|              |              |              | the previous |              |
|              |              |              | one is to be |              |
|              |              |              | solved. (see |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      | 0.001        | same as slac | CasADi::Ipop |
| lack_bound_f |              |              | k_bound_frac | tInternal    |
| rac          |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_s | OT_REAL      | 0.001        | same as slac | CasADi::Ipop |
| lack_bound_p |              |              | k_bound_push | tInternal    |
| ush          |              |              | for the      |              |
|              |              |              | regular      |              |
|              |              |              | initializer. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warm_start_t | OT_REAL      | 0            | Unsupported! | CasADi::Ipop |
| arget_mu     |              |              | (see IPOPT d | tInternal    |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | False        | Warn if the  | CasADi::Ipop |
| _bounds      |              |              | initial      | tInternal    |
|              |              |              | guess does   |              |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_sho | OT_INTEGER   | 10           | Number of    | CasADi::Ipop |
| rtened_iter_ |              |              | shortened    | tInternal    |
| trigger      |              |              | iterations   |              |
|              |              |              | that trigger |              |
|              |              |              | the          |              |
|              |              |              | watchdog.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| watchdog_tri | OT_INTEGER   | 3            | Maximum      | CasADi::Ipop |
| al_iter_max  |              |              | number of    | tInternal    |
|              |              |              | watchdog     |              |
|              |              |              | iterations.  |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_inexact | OT_REAL      | 0            | Drop         | CasADi::Ipop |
| _droptol     |              |              | tolerance    | tInternal    |
|              |              |              | for inexact  |              |
|              |              |              | factorizatio |              |
|              |              |              | n preconditi |              |
|              |              |              | oner in      |              |
|              |              |              | WISMP. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_inexact | OT_REAL      | 0            | Fill-in      | CasADi::Ipop |
| _fillin_limi |              |              | limit for    | tInternal    |
| t            |              |              | inexact fact |              |
|              |              |              | orization pr |              |
|              |              |              | econditioner |              |
|              |              |              | in WISMP.    |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_iterati | OT_STRING    | no           | Switches to  | CasADi::Ipop |
| ve           |              |              | iterative    | tInternal    |
|              |              |              | solver in    |              |
|              |              |              | WSMP. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_max_ite | OT_INTEGER   | 1000         | Maximal      | CasADi::Ipop |
| r            |              |              | number of    | tInternal    |
|              |              |              | iterations   |              |
|              |              |              | in iterative |              |
|              |              |              | WISMP (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_no_pivo | OT_STRING    | no           | Use the      | CasADi::Ipop |
| ting         |              |              | static       | tInternal    |
|              |              |              | pivoting     |              |
|              |              |              | option of    |              |
|              |              |              | WSMP. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_num_thr | OT_INTEGER   | 1            | Number of    | CasADi::Ipop |
| eads         |              |              | threads to   | tInternal    |
|              |              |              | be used in   |              |
|              |              |              | WSMP (see    |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_orderin | OT_INTEGER   | 1            | Determines   | CasADi::Ipop |
| g_option     |              |              | how ordering | tInternal    |
|              |              |              | is done in   |              |
|              |              |              | WSMP         |              |
|              |              |              | (IPARM(16)   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_orderin | OT_INTEGER   | 1            | Determines   | CasADi::Ipop |
| g_option2    |              |              | how ordering | tInternal    |
|              |              |              | is done in   |              |
|              |              |              | WSMP         |              |
|              |              |              | (IPARM(20)   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtol  | OT_REAL      | 0.000        | Pivot        | CasADi::Ipop |
|              |              |              | tolerance    | tInternal    |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver WSMP. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_pivtolm | OT_REAL      | 0.100        | Maximum      | CasADi::Ipop |
| ax           |              |              | pivot        | tInternal    |
|              |              |              | tolerance    |              |
|              |              |              | for the      |              |
|              |              |              | linear       |              |
|              |              |              | solver WSMP. |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_scaling | OT_INTEGER   | 0            | Determines   | CasADi::Ipop |
|              |              |              | how the      | tInternal    |
|              |              |              | matrix is    |              |
|              |              |              | scaled by    |              |
|              |              |              | WSMP. (see   |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_singula | OT_REAL      | 0.000        | WSMP's       | CasADi::Ipop |
| rity_thresho |              |              | singularity  | tInternal    |
| ld           |              |              | threshold.   |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_skip_in | OT_STRING    | no           | Always       | CasADi::Ipop |
| ertia_check  |              |              | pretent      | tInternal    |
|              |              |              | inertia is   |              |
|              |              |              | correct.     |              |
|              |              |              | (see IPOPT d |              |
|              |              |              | ocumentation |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| wsmp_write_m | OT_INTEGER   | -1           | Iteration in | CasADi::Ipop |
| atrix_iterat |              |              | which the    | tInternal    |
| ion          |              |              | matrices are |              |
|              |              |              | written to   |              |
|              |              |              | files. (see  |              |
|              |              |              | IPOPT docume |              |
|              |              |              | ntation)     |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+-----------------------+
|     Id      |        Used in        |
+=============+=======================+
| eval_f      | CasADi::IpoptInternal |
+-------------+-----------------------+
| eval_g      | CasADi::IpoptInternal |
+-------------+-----------------------+
| eval_grad_f | CasADi::IpoptInternal |
+-------------+-----------------------+
| eval_jac_g  | CasADi::IpoptInternal |
+-------------+-----------------------+
| inputs      | CasADi::FXInternal    |
+-------------+-----------------------+
| outputs     | CasADi::FXInternal    |
+-------------+-----------------------+

>List of available stats
+---------------------+-----------------------+
|         Id          |        Used in        |
+=====================+=======================+
| alpha_du            | CasADi::IpoptInternal |
+---------------------+-----------------------+
| alpha_pr            | CasADi::IpoptInternal |
+---------------------+-----------------------+
| d_norm              | CasADi::IpoptInternal |
+---------------------+-----------------------+
| inf_du              | CasADi::IpoptInternal |
+---------------------+-----------------------+
| inf_pr              | CasADi::IpoptInternal |
+---------------------+-----------------------+
| iter                | CasADi::IpoptInternal |
+---------------------+-----------------------+
| iter_count          | CasADi::IpoptInternal |
+---------------------+-----------------------+
| ls_trials           | CasADi::IpoptInternal |
+---------------------+-----------------------+
| mu                  | CasADi::IpoptInternal |
+---------------------+-----------------------+
| regularization_size | CasADi::IpoptInternal |
+---------------------+-----------------------+
| return_status       | CasADi::IpoptInternal |
+---------------------+-----------------------+

C++ includes: ipopt_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::IpoptSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::IpoptSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::IpoptSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::IpoptSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::IpoptSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::IpoptSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::IpoptSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::IpoptSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::IpoptSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::IpoptSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::IpoptSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::IpoptSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::IpoptSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::IpoptSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::IpoptSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::IpoptSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::IpoptSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::IpoptSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::IpoptSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::IpoptSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::IpoptSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::IpoptSolver::makeUnique "";

%feature("docstring")  CasADi::IpoptSolver::IpoptSolver "

Default constructor. ";

%feature("docstring")  CasADi::IpoptSolver::IpoptSolver "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::IpoptSolver::getGF "";

%feature("docstring")  CasADi::IpoptSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::IpoptSolver::reportConstraints "";

%feature("docstring")  CasADi::IpoptSolver::getReportConstraints "";

%feature("docstring")  CasADi::IpoptSolver::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::IpoptSolver::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::IpoptSolver::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::IpoptSolver::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::IpoptSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::IpoptSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::IpoptSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::IpoptSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::IpoptSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::IpoptSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::IpoptSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::IpoptSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::IpoptSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::IpoptSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::IpoptSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::IpoptSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::IpoptSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::IpoptSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::IpoptSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::IpoptSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::IpoptSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::IpoptSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::IpoptSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::IpoptSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IpoptSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IpoptSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::IpoptSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::IpoptSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IpoptSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::IpoptSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::IpoptSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::IpoptSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IpoptSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::IpoptSolver::indexed_one_based "";

%feature("docstring")  CasADi::IpoptSolver::indexed_zero_based "";

%feature("docstring")  CasADi::IpoptSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::IpoptSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::IpoptSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::IpoptSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::IpoptSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::IpoptSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::IpoptSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::IpoptSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::IpoptSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::IpoptSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IpoptSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::IpoptSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::IpoptSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::IpoptSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::IpoptSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::IpoptSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::IpoptSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::IpoptSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::IpoptSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::IpoptSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::IpoptSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::IpoptSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::IpoptSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::IpoptSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::IpoptSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::IpoptSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::IpoptSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::IpoptSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::IpoptSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::IpoptSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::IpoptSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::IpoptSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::IpoptSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::IpoptSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::IpoptSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::IpoptSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::IpoptSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1IpoptUserClass.xml
%feature("docstring") CasADi::IpoptUserClass "C++ includes: ipopt_nlp.hpp
";

%feature("docstring")  CasADi::IpoptUserClass::IpoptUserClass "";

%feature("docstring")  CasADi::IpoptUserClass::~IpoptUserClass "";

%feature("docstring")  CasADi::IpoptUserClass::get_nlp_info "

Method to return some info about the nlp ";

%feature("docstring")  CasADi::IpoptUserClass::get_bounds_info "

Method to return the bounds for my problem ";

%feature("docstring")  CasADi::IpoptUserClass::get_starting_point "

Method to return the starting point for the algorithm ";

%feature("docstring")  CasADi::IpoptUserClass::eval_f "

Method to return the objective value ";

%feature("docstring")  CasADi::IpoptUserClass::eval_grad_f "

Method to return the gradient of the objective ";

%feature("docstring")  CasADi::IpoptUserClass::eval_g "

Method to return the constraint residuals ";

%feature("docstring")  CasADi::IpoptUserClass::eval_jac_g "

Method to return: 1) The structure of the jacobian (if \"values\" is NULL)
2) The values of the jacobian (if \"values\" is not NULL) ";

%feature("docstring")  CasADi::IpoptUserClass::eval_h "

Method to return: 1) The structure of the hessian of the lagrangian (if
\"values\" is NULL) 2) The values of the hessian of the lagrangian (if
\"values\" is not NULL) ";

%feature("docstring")  CasADi::IpoptUserClass::finalize_solution "

This method is called when the algorithm is complete so the TNLP can
store/write the solution ";

%feature("docstring")
CasADi::IpoptUserClass::get_number_of_nonlinear_variables "

Specify the number of variables that appear in the Hessian ";

%feature("docstring")
CasADi::IpoptUserClass::get_list_of_nonlinear_variables "

Specify which variables that appear in the Hessian ";

%feature("docstring")  CasADi::IpoptUserClass::intermediate_callback "

This method is called at every iteration

Code copied from TNLPAdapter::FinalizeSolution See also:http://list.coin-
or.org/pipermail/ipopt/2010-July/002078.html ";


// File: classCasADi_1_1Jacobian.xml
%feature("docstring") CasADi::Jacobian "

Jacobian class.

Universal Jacobian class, calculates the Jacobian of a function based on AD
forward or adjoint.

Options:  \"finite_differences\" false  \"ad_mode\" \"forward\", \"adjoint\"
or \"default\", i.e. forward if n_<=m_, otherwise adjoint  \"sparse\" false

Any CasADi::FX can be used to take the Jacobian of.

If the iind'th input argument has shape (m,n) and the oind'th output
argument has shape (k,l), the output of this Jacobian will be of shape (k*l)
x (m*n) .

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"default\"    | default      | CasADi::Jaco |
|              |              |              | means both ( | bianInternal |
|              |              |              | forward|adjo |              |
|              |              |              | int|default) |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: jacobian.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Jacobian::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Jacobian::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Jacobian::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Jacobian::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Jacobian::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Jacobian::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Jacobian::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Jacobian::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Jacobian::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Jacobian::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Jacobian::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Jacobian::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Jacobian::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Jacobian::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Jacobian::getOption "

get an option value ";

%feature("docstring")  CasADi::Jacobian::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Jacobian::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Jacobian::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Jacobian::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Jacobian::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Jacobian::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Jacobian::makeUnique "";

%feature("docstring")  CasADi::Jacobian::Jacobian "

Default constructor. ";

%feature("docstring")  CasADi::Jacobian::Jacobian "

Create a Jacobian. ";

%feature("docstring")  CasADi::Jacobian::Jacobian "

Create a set of Jacobians (new formulation) ";

%feature("docstring")  CasADi::Jacobian::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Jacobian::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Jacobian::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Jacobian::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Jacobian::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Jacobian::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Jacobian::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Jacobian::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Jacobian::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Jacobian::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Jacobian::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Jacobian::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Jacobian::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Jacobian::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Jacobian::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Jacobian::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Jacobian::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Jacobian::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Jacobian::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Jacobian::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Jacobian::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Jacobian::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Jacobian::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Jacobian::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Jacobian::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Jacobian::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Jacobian::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Jacobian::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Jacobian::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Jacobian::indexed_one_based "";

%feature("docstring")  CasADi::Jacobian::indexed_zero_based "";

%feature("docstring")  CasADi::Jacobian::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Jacobian::input "

Const access input argument. ";

%feature("docstring")  CasADi::Jacobian::input "

Access input argument. ";

%feature("docstring")  CasADi::Jacobian::output "

Const access input argument. ";

%feature("docstring")  CasADi::Jacobian::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Jacobian::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Jacobian::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Jacobian::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Jacobian::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Jacobian::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Jacobian::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Jacobian::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Jacobian::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Jacobian::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Jacobian::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Jacobian::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Jacobian::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Jacobian::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Jacobian::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Jacobian::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Jacobian::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Jacobian::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Jacobian::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Jacobian::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Jacobian::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Jacobian::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Jacobian::clone "

Deep copy. ";

%feature("docstring")  CasADi::Jacobian::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Jacobian::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Jacobian::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Jacobian::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Jacobian::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Jacobian::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Jacobian::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Jacobian::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Jacobian::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Jacobian::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Jacobian::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Jacobian::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Jacobian::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Jacobian::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1JacobianInternal.xml
%feature("docstring") CasADi::JacobianInternal "

Internal node class for Jacobian.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"default\"    | default      | CasADi::Jaco |
|              |              |              | means both ( | bianInternal |
|              |              |              | forward|adjo |              |
|              |              |              | int|default) |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: jacobian_internal.hpp ";

%feature("docstring")  CasADi::JacobianInternal::JacobianInternal "

New constructor (not yet working) ";

%feature("docstring")  CasADi::JacobianInternal::clone "

Clone. ";

%feature("docstring")  CasADi::JacobianInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::JacobianInternal::~JacobianInternal "

Destructor. ";

%feature("docstring")  CasADi::JacobianInternal::evaluate "

Evaluate the jacobian. ";

%feature("docstring")  CasADi::JacobianInternal::init "

Initialize. ";

%feature("docstring")  CasADi::JacobianInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::JacobianInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::JacobianInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::JacobianInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::JacobianInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::JacobianInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::JacobianInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::JacobianInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::JacobianInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::JacobianInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::JacobianInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::JacobianInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::JacobianInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::JacobianInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::JacobianInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::JacobianInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::JacobianInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::JacobianInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::JacobianInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::JacobianInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::JacobianInternal::print "

Print. ";

%feature("docstring")  CasADi::JacobianInternal::repr "

Print. ";

%feature("docstring")  CasADi::JacobianInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::JacobianInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::JacobianInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::JacobianInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::JacobianInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::JacobianInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::JacobianInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::JacobianInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::JacobianInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::JacobianInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::JacobianInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::JacobianInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::JacobianInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::JacobianInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::JacobianInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::JacobianInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::JacobianInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::JacobianInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::JacobianInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::JacobianInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::JacobianInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::JacobianInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::JacobianInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::JacobianInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::JacobianInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::JacobianInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::JacobianInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::JacobianInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::JacobianInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::JacobianInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::JacobianInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::JacobianInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::JacobianInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::JacobianInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::JacobianInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::JacobianInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::JacobianInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::JacobianInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::JacobianInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::JacobianInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::JacobianInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::JacobianInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::JacobianInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::JacobianInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::JacobianInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::JacobianInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::JacobianInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::JacobianInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::JacobianInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::JacobianInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::JacobianInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1JacobianReference.xml
%feature("docstring") CasADi::JacobianReference "

Maps non-zero elements.

Joel Andersson

C++ includes: jacobian_reference.hpp ";

%feature("docstring")  CasADi::JacobianReference::JacobianReference "

Default constructor. ";

%feature("docstring")  CasADi::JacobianReference::clone "

Clone function. ";

%feature("docstring")  CasADi::JacobianReference::~JacobianReference "

Destructor. ";

%feature("docstring")  CasADi::JacobianReference::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::JacobianReference::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::JacobianReference::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::JacobianReference::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::JacobianReference::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::JacobianReference::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::JacobianReference::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::JacobianReference::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::JacobianReference::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::JacobianReference::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::JacobianReference::repr "

Print a representation. ";

%feature("docstring")  CasADi::JacobianReference::print "

Print a description. ";

%feature("docstring")  CasADi::JacobianReference::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::JacobianReference::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::JacobianReference::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::JacobianReference::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::JacobianReference::getName "

Get the name. ";

%feature("docstring")  CasADi::JacobianReference::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::JacobianReference::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::JacobianReference::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::JacobianReference::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::JacobianReference::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::JacobianReference::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::JacobianReference::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::JacobianReference::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::JacobianReference::dep "";

%feature("docstring")  CasADi::JacobianReference::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::JacobianReference::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::JacobianReference::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::JacobianReference::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::JacobianReference::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::JacobianReference::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::JacobianReference::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::JacobianReference::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::JacobianReference::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::JacobianReference::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::JacobianReference::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::JacobianReference::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::JacobianReference::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::JacobianReference::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::JacobianReference::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::JacobianReference::numel "

Number of elements. ";

%feature("docstring")  CasADi::JacobianReference::size "

Get size. ";

%feature("docstring")  CasADi::JacobianReference::size1 "

Get size. ";

%feature("docstring")  CasADi::JacobianReference::size2 "

Get size. ";

%feature("docstring")  CasADi::JacobianReference::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::JacobianReference::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::JacobianReference::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::JacobianReference::init "

Initialize the object. ";

%feature("docstring")  CasADi::JacobianReference::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::JacobianReference::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Sundials_1_1KinsolInternal.xml
%feature("docstring") CasADi::Sundials::KinsolInternal "

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | Stopping     | CasADi::Impl |
|              |              |              | criterion    | icitFunction |
|              |              |              | tolerance    | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| constraints  | OT_INTEGERVE |              |              | CasADi::Sund |
|              | CTOR         |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| disable_inte | OT_BOOLEAN   | false        | Disable      | CasADi::Sund |
| rnal_warning |              |              | KINSOL       | ials::Kinsol |
| s            |              |              | internal     | Internal     |
|              |              |              | warning      |              |
|              |              |              | messages     |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | true         |              | CasADi::Sund |
| an           |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| f_scale      | OT_REALVECTO |              |              | CasADi::Sund |
|              | R            |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      |              | CasADi::Sund |
| lver         |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      |              | CasADi::Sund |
| r            |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | User-defined | CasADi::Sund |
| r_creator    | VER          | )            | linear       | ials::Kinsol |
|              |              |              | solver class | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Kinsol |
|              |              |              | the linear   | Internal     |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              |              | CasADi::Sund |
| dth          |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 0            |              | CasADi::Sund |
|              |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Sundial |
|              |              |              | uts)  (eval_ | s::KinsolInt |
|              |              |              | f|eval_djac) | ernal        |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| strategy     | OT_STRING    | \"none\"       | Globalizatio | CasADi::Sund |
|              |              |              | n strateg (n | ials::Kinsol |
|              |              |              | one|linesear | Internal     |
|              |              |              | ch)          |              |
+--------------+--------------+--------------+--------------+--------------+
| u_scale      | OT_REALVECTO |              |              | CasADi::Sund |
|              | R            |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              |              | CasADi::Sund |
| dth          |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Kinsol |
|              |              |              | solver       | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-----------+----------------------------------+
|    Id     |             Used in              |
+===========+==================================+
| eval_djac | CasADi::Sundials::KinsolInternal |
+-----------+----------------------------------+
| eval_f    | CasADi::Sundials::KinsolInternal |
+-----------+----------------------------------+
| inputs    | CasADi::FXInternal               |
+-----------+----------------------------------+
| outputs   | CasADi::FXInternal               |
+-----------+----------------------------------+

C++ includes: kinsol_internal.hpp ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::KinsolInternal "

Constructor. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::clone "

Clone. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::~KinsolInternal "

Destructor. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::init "

Initialize stage. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jac "

Generate a linear solver for the sensitivity equations. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jac "

Generate a linear solver for the sensitivity equations. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setJacobian "

Set Jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getJacobian "

Get Jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getLinearSolver "

Get linear solver. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::func "

Residual. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::djac "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::bjac "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jtimes "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::psetup "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::psolve "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::lsetup "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::lsolve "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::ehfun "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::kinsol_error "";

%feature("docstring")  CasADi::Sundials::KinsolInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::print "

Print. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::repr "

Print. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::KinsolInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::KinsolInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Sundials::KinsolInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Sundials::KinsolInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Sundials_1_1KinsolSolver.xml
%feature("docstring") CasADi::Sundials::KinsolSolver "

Kinsol solver class.

You can provide an initial guess by setting output(0).  A good initial guess
may be needed to avoid errors like \"The linear solver's setup function
failed in an unrecoverable manner.\"

The constraints option expects an integer entry for each variable u:

0 then no constraint is imposed on u.  1 then ui will be constrained to be u
>= 0.0.  1 then ui will be constrained to be ui >= 0.0.  2 then ui will be
constrained to be ui > 0.0.  2 then ui will be constrained to be ui < 0.0.

See:   ImplicitFunction for more information

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | Stopping     | CasADi::Impl |
|              |              |              | criterion    | icitFunction |
|              |              |              | tolerance    | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| constraints  | OT_INTEGERVE |              |              | CasADi::Sund |
|              | CTOR         |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| disable_inte | OT_BOOLEAN   | false        | Disable      | CasADi::Sund |
| rnal_warning |              |              | KINSOL       | ials::Kinsol |
| s            |              |              | internal     | Internal     |
|              |              |              | warning      |              |
|              |              |              | messages     |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | true         |              | CasADi::Sund |
| an           |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| f_scale      | OT_REALVECTO |              |              | CasADi::Sund |
|              | R            |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      |              | CasADi::Sund |
| lver         |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      |              | CasADi::Sund |
| r            |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | User-defined | CasADi::Sund |
| r_creator    | VER          | )            | linear       | ials::Kinsol |
|              |              |              | solver class | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Kinsol |
|              |              |              | the linear   | Internal     |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              |              | CasADi::Sund |
| dth          |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 0            |              | CasADi::Sund |
|              |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Sundial |
|              |              |              | uts)  (eval_ | s::KinsolInt |
|              |              |              | f|eval_djac) | ernal        |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| strategy     | OT_STRING    | \"none\"       | Globalizatio | CasADi::Sund |
|              |              |              | n strateg (n | ials::Kinsol |
|              |              |              | one|linesear | Internal     |
|              |              |              | ch)          |              |
+--------------+--------------+--------------+--------------+--------------+
| u_scale      | OT_REALVECTO |              |              | CasADi::Sund |
|              | R            |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              |              | CasADi::Sund |
| dth          |              |              |              | ials::Kinsol |
|              |              |              |              | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Kinsol |
|              |              |              | solver       | Internal     |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-----------+----------------------------------+
|    Id     |             Used in              |
+===========+==================================+
| eval_djac | CasADi::Sundials::KinsolInternal |
+-----------+----------------------------------+
| eval_f    | CasADi::Sundials::KinsolInternal |
+-----------+----------------------------------+
| inputs    | CasADi::FXInternal               |
+-----------+----------------------------------+
| outputs   | CasADi::FXInternal               |
+-----------+----------------------------------+

C++ includes: kinsol_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::KinsolSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::KinsolSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Sundials::KinsolSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::makeUnique "";

%feature("docstring")  CasADi::Sundials::KinsolSolver::KinsolSolver "

Default constructor. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::KinsolSolver "

Create an KINSOL instance.

Parameters:
-----------

f:   SXFunction mapping from (n+1) inputs to 1 output ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::jac "

Generate a linear solver for the sensitivity equations. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getLinearSolver "

Get linear solver. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setJacobian "

Set Jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getJacobian "

Get Jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::indexed_one_based "";

%feature("docstring")  CasADi::Sundials::KinsolSolver::indexed_zero_based "";

%feature("docstring")  CasADi::Sundials::KinsolSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOptionDescription
"

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Sundials::KinsolSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classKINEMATICS_1_1KinVec.xml
%feature("docstring") KINEMATICS::KinVec "

Represent kinematical vectors.

What is a kinematic vector?

A kinematic vector is a - possibly time varying - object in vectorspace that
can exist irrespective of what reference frames happen to be defined in this
space. In other words, a vector has an identity of its own and a given
column matrix r=[r_x;r_y;r_z] (or vector as it is often confusingly called)
is merely a image of this vector from one point of view (expressed or
resolved or represented in one particular frame).

In fact two types of vectors can be distinguished: position or 1-vectors and
displacement or 0-vectors. For a 0-vector, only orientation and length
matter.

For a 1-vector, the anchor point of the vector is important part of the
vector's definition.

This class represents a kinematic vector by having a column matrix
representation and a reference frame as members.

Operators can work on KinVec objects with different reference frames. The
result is automatically computed in a common frame.

The really useful functions are found in the header documentation
(KinVec.hpp)

Joris Gillis

C++ includes: kinvec.hpp ";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::KinVec "";

%feature("docstring")  KINEMATICS::KinVec::getCoords "

Return the components of the KinVec as 3x1 expression.

3x1 Expression ";

%feature("docstring")  KINEMATICS::KinVec::getType "

0 for velocity vectors, one for position vectors ";

%feature("docstring")  KINEMATICS::KinVec::getRef "";

%feature("docstring")  KINEMATICS::KinVec::getQ "

Get the default time dependant symbols from the world frame. ";

%feature("docstring")  KINEMATICS::KinVec::getDQ "

Get the derivatives of the default time dependant symbols from the world
frame. ";

%feature("docstring")  KINEMATICS::KinVec::getDDQ "

Get the second derivatives of the default time dependant symbols from the
world frame. ";

%feature("docstring")  KINEMATICS::KinVec::setDDQ "

returns the lowermost Frame in the hierarchy this Frame shares with the
other Frame ";

%feature("docstring")  KINEMATICS::KinVec::splitdep "";

%feature("docstring")  KINEMATICS::KinVec::expressedIn "

express the KinVec in another Frame ";

%feature("docstring")  KINEMATICS::KinVec::der "

component-wise time derivative ";

%feature("docstring")  KINEMATICS::KinVec::explicitize "

Parameters:

ddq:  symbols for the second derivatives, to which is explicitized ";

%feature("docstring")  KINEMATICS::KinVec::explicitize "";

%feature("docstring")  KINEMATICS::KinVec::explicitize "

Parameters:

ddq:  symbols for the second derivatives, to which is explicitized ";

%feature("docstring")  KINEMATICS::KinVec::explicitize "";

%feature("docstring")  KINEMATICS::KinVec::explicitize "

Parameters:

di:  map which contains indices of ddq to which is explicitized

ri:  map which contains indices of the rows of the KinVec which are taken
into account

Documentation not finished

Will construct a system A*x+b from KinVec eg: vec:

ddqn=[0 0 0 0]; ";

%feature("docstring")  KINEMATICS::KinVec::explicitize "";


// File: classCasADi_1_1KnitroInternal.xml
%feature("docstring") CasADi::KnitroInternal "

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| algorithm    | OT_STRING    | GenericType( | Which        | CasADi::Knit |
|              |              | )            | algorithm to | roInternal   |
|              |              |              | use. See     |              |
|              |              |              | KNITRO docum |              |
|              |              |              | entation. (a |              |
|              |              |              | uto|direct|c |              |
|              |              |              | g|active)    |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_directin | OT_INTEGER   | GenericType( | When using   | CasADi::Knit |
| terval       |              | )            | the Interior | roInternal   |
|              |              |              | /Direct      |              |
|              |              |              | algorithm,   |              |
|              |              |              | this         |              |
|              |              |              | parameter    |              |
|              |              |              | controls the |              |
|              |              |              | maximum      |              |
|              |              |              | number of    |              |
|              |              |              | consecutive  |              |
|              |              |              | CG steps     |              |
|              |              |              | before       |              |
|              |              |              | trying to    |              |
|              |              |              | force the    |              |
|              |              |              | algorithm to |              |
|              |              |              | take a       |              |
|              |              |              | direct step  |              |
|              |              |              | again. See   |              |
|              |              |              | KNITRO docum |              |
|              |              |              | entation.    |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_feasible | OT_STRING    | GenericType( | Whether      | CasADi::Knit |
|              |              | )            | feasibility  | roInternal   |
|              |              |              | is given     |              |
|              |              |              | special      |              |
|              |              |              | emphasis.    |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | . (no|stay|g |              |
|              |              |              | et|get_stay) |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_feasmode | OT_REAL      | GenericType( | Specifies    | CasADi::Knit |
| tol          |              | )            | the          | roInternal   |
|              |              |              | tolerance    |              |
|              |              |              | for entering |              |
|              |              |              | the stay     |              |
|              |              |              | feasible     |              |
|              |              |              | mode See     |              |
|              |              |              | KNITRO docum |              |
|              |              |              | entation.    |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_initmu   | OT_INTEGER   | GenericType( | Initial      | CasADi::Knit |
|              |              | )            | value for    | roInternal   |
|              |              |              | the barrier  |              |
|              |              |              | parameter.   |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_initpt   | OT_STRING    | GenericType( | Whether to   | CasADi::Knit |
|              |              | )            | use the      | roInternal   |
|              |              |              | initial      |              |
|              |              |              | point        |              |
|              |              |              | strategy     |              |
|              |              |              | with barrier |              |
|              |              |              | algorithms.  |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | . (auto|yes| |              |
|              |              |              | no)          |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_maxbackt | OT_INTEGER   | GenericType( | Maximum      | CasADi::Knit |
| rack         |              | )            | allowable    | roInternal   |
|              |              |              | number of    |              |
|              |              |              | backtracks   |              |
|              |              |              | during the   |              |
|              |              |              | linesearch   |              |
|              |              |              | of the       |              |
|              |              |              | Interior     |              |
|              |              |              | Direct       |              |
|              |              |              | algorithm    |              |
|              |              |              | before       |              |
|              |              |              | reverting to |              |
|              |              |              | a CG step.   |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_maxrefac | OT_INTEGER   | GenericType( | Maximum      | CasADi::Knit |
| tor          |              | )            | number of re | roInternal   |
|              |              |              | factorizatio |              |
|              |              |              | ns of the    |              |
|              |              |              | KKT system   |              |
|              |              |              | per          |              |
|              |              |              | iteration of |              |
|              |              |              | the Interior |              |
|              |              |              | Direct       |              |
|              |              |              | algorithm    |              |
|              |              |              | before       |              |
|              |              |              | reverting to |              |
|              |              |              | a CG step.   |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| contype      | OT_INTEGERVE |              |              | CasADi::Knit |
|              | CTOR         |              |              | roInternal   |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: knitro_internal.hpp ";

%feature("docstring")  CasADi::KnitroInternal::KnitroInternal "";

%feature("docstring")  CasADi::KnitroInternal::~KnitroInternal "";

%feature("docstring")  CasADi::KnitroInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::KnitroInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::KnitroInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::KnitroInternal::evalfc "";

%feature("docstring")  CasADi::KnitroInternal::evalga "";

%feature("docstring")  CasADi::KnitroInternal::evalh "";

%feature("docstring")  CasADi::KnitroInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::KnitroInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::KnitroInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::KnitroInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::KnitroInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::KnitroInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::KnitroInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::KnitroInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::KnitroInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::KnitroInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::KnitroInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::KnitroInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::KnitroInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::KnitroInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::KnitroInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::KnitroInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::KnitroInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::KnitroInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::KnitroInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::KnitroInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::KnitroInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::KnitroInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::KnitroInternal::print "

Print. ";

%feature("docstring")  CasADi::KnitroInternal::repr "

Print. ";

%feature("docstring")  CasADi::KnitroInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::KnitroInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::KnitroInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::KnitroInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::KnitroInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::KnitroInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::KnitroInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::KnitroInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::KnitroInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::KnitroInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::KnitroInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::KnitroInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::KnitroInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::KnitroInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::KnitroInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::KnitroInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::KnitroInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::KnitroInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::KnitroInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::KnitroInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::KnitroInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::KnitroInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::KnitroInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::KnitroInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::KnitroInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::KnitroInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::KnitroInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::KnitroInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::KnitroInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::KnitroInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::KnitroInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::KnitroInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::KnitroInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::KnitroInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::KnitroInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::KnitroInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::KnitroInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::KnitroInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::KnitroInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::KnitroInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::KnitroInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::KnitroInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::KnitroInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::KnitroInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::KnitroInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::KnitroInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::KnitroInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::KnitroInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1KnitroSolver.xml
%feature("docstring") CasADi::KnitroSolver "

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| algorithm    | OT_STRING    | GenericType( | Which        | CasADi::Knit |
|              |              | )            | algorithm to | roInternal   |
|              |              |              | use. See     |              |
|              |              |              | KNITRO docum |              |
|              |              |              | entation. (a |              |
|              |              |              | uto|direct|c |              |
|              |              |              | g|active)    |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_directin | OT_INTEGER   | GenericType( | When using   | CasADi::Knit |
| terval       |              | )            | the Interior | roInternal   |
|              |              |              | /Direct      |              |
|              |              |              | algorithm,   |              |
|              |              |              | this         |              |
|              |              |              | parameter    |              |
|              |              |              | controls the |              |
|              |              |              | maximum      |              |
|              |              |              | number of    |              |
|              |              |              | consecutive  |              |
|              |              |              | CG steps     |              |
|              |              |              | before       |              |
|              |              |              | trying to    |              |
|              |              |              | force the    |              |
|              |              |              | algorithm to |              |
|              |              |              | take a       |              |
|              |              |              | direct step  |              |
|              |              |              | again. See   |              |
|              |              |              | KNITRO docum |              |
|              |              |              | entation.    |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_feasible | OT_STRING    | GenericType( | Whether      | CasADi::Knit |
|              |              | )            | feasibility  | roInternal   |
|              |              |              | is given     |              |
|              |              |              | special      |              |
|              |              |              | emphasis.    |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | . (no|stay|g |              |
|              |              |              | et|get_stay) |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_feasmode | OT_REAL      | GenericType( | Specifies    | CasADi::Knit |
| tol          |              | )            | the          | roInternal   |
|              |              |              | tolerance    |              |
|              |              |              | for entering |              |
|              |              |              | the stay     |              |
|              |              |              | feasible     |              |
|              |              |              | mode See     |              |
|              |              |              | KNITRO docum |              |
|              |              |              | entation.    |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_initmu   | OT_INTEGER   | GenericType( | Initial      | CasADi::Knit |
|              |              | )            | value for    | roInternal   |
|              |              |              | the barrier  |              |
|              |              |              | parameter.   |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_initpt   | OT_STRING    | GenericType( | Whether to   | CasADi::Knit |
|              |              | )            | use the      | roInternal   |
|              |              |              | initial      |              |
|              |              |              | point        |              |
|              |              |              | strategy     |              |
|              |              |              | with barrier |              |
|              |              |              | algorithms.  |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | . (auto|yes| |              |
|              |              |              | no)          |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_maxbackt | OT_INTEGER   | GenericType( | Maximum      | CasADi::Knit |
| rack         |              | )            | allowable    | roInternal   |
|              |              |              | number of    |              |
|              |              |              | backtracks   |              |
|              |              |              | during the   |              |
|              |              |              | linesearch   |              |
|              |              |              | of the       |              |
|              |              |              | Interior     |              |
|              |              |              | Direct       |              |
|              |              |              | algorithm    |              |
|              |              |              | before       |              |
|              |              |              | reverting to |              |
|              |              |              | a CG step.   |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| bar_maxrefac | OT_INTEGER   | GenericType( | Maximum      | CasADi::Knit |
| tor          |              | )            | number of re | roInternal   |
|              |              |              | factorizatio |              |
|              |              |              | ns of the    |              |
|              |              |              | KKT system   |              |
|              |              |              | per          |              |
|              |              |              | iteration of |              |
|              |              |              | the Interior |              |
|              |              |              | Direct       |              |
|              |              |              | algorithm    |              |
|              |              |              | before       |              |
|              |              |              | reverting to |              |
|              |              |              | a CG step.   |              |
|              |              |              | See KNITRO d |              |
|              |              |              | ocumentation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| contype      | OT_INTEGERVE |              |              | CasADi::Knit |
|              | CTOR         |              |              | roInternal   |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: knitro_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::KnitroSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::KnitroSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::KnitroSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::KnitroSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::KnitroSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::KnitroSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::KnitroSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::KnitroSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::KnitroSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::KnitroSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::KnitroSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::KnitroSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::KnitroSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::KnitroSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::KnitroSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::KnitroSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::KnitroSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::KnitroSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::KnitroSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::KnitroSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::KnitroSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::KnitroSolver::makeUnique "";

%feature("docstring")  CasADi::KnitroSolver::KnitroSolver "

Default constructor. ";

%feature("docstring")  CasADi::KnitroSolver::KnitroSolver "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::KnitroSolver::setIntParam "

Set KNITRO integer parameters. ";

%feature("docstring")  CasADi::KnitroSolver::setDoubleParam "

Set KNITRO double parameters. ";

%feature("docstring")  CasADi::KnitroSolver::setStringParam "

Set KNITRO string parameters. ";

%feature("docstring")  CasADi::KnitroSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::KnitroSolver::reportConstraints "";

%feature("docstring")  CasADi::KnitroSolver::getReportConstraints "";

%feature("docstring")  CasADi::KnitroSolver::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::KnitroSolver::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::KnitroSolver::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::KnitroSolver::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::KnitroSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::KnitroSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::KnitroSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::KnitroSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::KnitroSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::KnitroSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::KnitroSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::KnitroSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::KnitroSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::KnitroSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::KnitroSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::KnitroSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::KnitroSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::KnitroSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::KnitroSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::KnitroSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::KnitroSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::KnitroSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::KnitroSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::KnitroSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::KnitroSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::KnitroSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::KnitroSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::KnitroSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::KnitroSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::KnitroSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::KnitroSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::KnitroSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::KnitroSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::KnitroSolver::indexed_one_based "";

%feature("docstring")  CasADi::KnitroSolver::indexed_zero_based "";

%feature("docstring")  CasADi::KnitroSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::KnitroSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::KnitroSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::KnitroSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::KnitroSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::KnitroSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::KnitroSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::KnitroSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::KnitroSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::KnitroSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::KnitroSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::KnitroSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::KnitroSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::KnitroSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::KnitroSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::KnitroSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::KnitroSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::KnitroSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::KnitroSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::KnitroSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::KnitroSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::KnitroSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::KnitroSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::KnitroSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::KnitroSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::KnitroSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::KnitroSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::KnitroSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::KnitroSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::KnitroSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::KnitroSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::KnitroSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::KnitroSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::KnitroSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::KnitroSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::KnitroSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::KnitroSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Interfaces_1_1LapackLUDense.xml
%feature("docstring") CasADi::Interfaces::LapackLUDense "

LU LinearSolver with Lapack Interface.

Solves the linear system A.x = b for x

This class solves the linear system A.x=b by making an LU factorization of
A:  A = L.U, with L lower and U upper triangular

LapackLUDense is an CasADi::FX mapping from 2 inputs [ A (matrix),b
(vector)] to one output [x (vector)].

The usual procedure to use LapackLUDense is:  init()

set the first input (A)

prepare()

set the second input (b)

solve()

Repeat steps 4 and 5 to work with other b vectors.

The method evaluate() combines the prepare() and solve() step and is
therefore more expensive if A is invariant.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| allow_equili | OT_BOOLEAN   | false        |              | CasADi::Inte |
| bration_fail |              |              |              | rfaces::Lapa |
| ure          |              |              |              | ckLUDenseInt |
|              |              |              |              | ernal        |
+--------------+--------------+--------------+--------------+--------------+
| equilibratio | OT_BOOLEAN   | true         |              | CasADi::Inte |
| n            |              |              |              | rfaces::Lapa |
|              |              |              |              | ckLUDenseInt |
|              |              |              |              | ernal        |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: lapack_lu_dense.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::makeUnique "";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::LapackLUDense "

Default (empty) constructor. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::LapackLUDense "

Create a linear solver given a sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setSparsity "

Set sparsity (before initialization) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::prepare "

Factorize the matrix. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::solve "

Solve the system of equations, internal vector. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::solve "

Solve the factorized system of equations. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::prepared "

Check if prepared. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::LapackLUDense::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::indexed_one_based
"";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::indexed_zero_based
"";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDense::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::assignNodeNoCount
"

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getRepresentation
"

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDense::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Interfaces_1_1LapackLUDenseInternal.xml
%feature("docstring") CasADi::Interfaces::LapackLUDenseInternal "

Internal class.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| allow_equili | OT_BOOLEAN   | false        |              | CasADi::Inte |
| bration_fail |              |              |              | rfaces::Lapa |
| ure          |              |              |              | ckLUDenseInt |
|              |              |              |              | ernal        |
+--------------+--------------+--------------+--------------+--------------+
| equilibratio | OT_BOOLEAN   | true         |              | CasADi::Inte |
| n            |              |              |              | rfaces::Lapa |
|              |              |              |              | ckLUDenseInt |
|              |              |              |              | ernal        |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: lapack_lu_dense.hpp ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::LapackLUDenseInternal "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::~LapackLUDenseInternal "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::prepare "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::solve "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::solve "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::nrow "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::ncol "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::nnz "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::col "";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::rowind "";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::spEvaluate
"

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::derivative
"

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::repr "

Print. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::monitored
"

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::setOption
"

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::setOption
"

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::hasOption
"

check if there is an option str ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::printOptions "

Print options to a stream. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::getOption
"

get an option value ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::dictionary
"

Get the dictionary. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")
CasADi::Interfaces::LapackLUDenseInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::LapackLUDenseInternal::assertInit
"

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1LapackQRDense.xml
%feature("docstring") CasADi::Interfaces::LapackQRDense "

QR LinearSolver with Lapack Interface.

Solves the linear system A.x = b for x

This class solves the linear system A.x=b by making an QR factorization of
A:  A = Q.R, with Q orthogonal and R upper triangular

LapackQRDense is an CasADi::FX mapping from 2 inputs [ A (matrix),b
(vector)] to one output [x (vector)].

The usual procedure to use LapackQRDense is:  init()

set the first input (A)

prepare()

set the second input (b)

solve()

Repeat steps 4 and 5 to work with other b vectors.

The method evaluate() combines the prepare() and solve() step and is
therefore more expensive if A is invariant.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: lapack_qr_dense.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::makeUnique "";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::LapackQRDense "

Default (empty) constructor. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::LapackQRDense "

Create a linear solver given a sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setSparsity "

Set sparsity (before initialization) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::prepare "

Factorize the matrix. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::solve "

Solve the system of equations, internal vector. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::solve "

Solve the factorized system of equations. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::prepared "

Check if prepared. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::LapackQRDense::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::indexed_one_based
"";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::indexed_zero_based
"";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDense::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::assignNodeNoCount
"

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getRepresentation
"

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDense::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Interfaces_1_1LapackQRDenseInternal.xml
%feature("docstring") CasADi::Interfaces::LapackQRDenseInternal "

Internal class.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: lapack_qr_dense.hpp ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::LapackQRDenseInternal "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::~LapackQRDenseInternal "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::prepare "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::solve "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::solve "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::nrow "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::ncol "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::nnz "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::col "";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::rowind "";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::spEvaluate
"

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::derivative
"

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::repr "

Print. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::monitored
"

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::setOption
"

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::setOption
"

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::hasOption
"

check if there is an option str ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::printOptions "

Print options to a stream. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::getOption
"

get an option value ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::dictionary
"

Get the dictionary. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")
CasADi::Interfaces::LapackQRDenseInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::LapackQRDenseInternal::assertInit
"

Assert that the object has been initialized. ";


// File: classCasADi_1_1LiftedSQP.xml
%feature("docstring") CasADi::LiftedSQP "

Sequential Quadratic Programming method implementing the Lifted Newton
approach symbolically.

Joel Andersson

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| eta          | OT_REAL      | 0.000        | Linesearch   | CasADi::Lift |
|              |              |              | parameter:   | edSQPInterna |
|              |              |              | See Nocedal  | l            |
|              |              |              | 3.4          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | \"BFGS\"       | BFGS|exact   | CasADi::Lift |
| oximation    |              |              |              | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter      | OT_INTEGER   | 100          | Maximum      | CasADi::Lift |
|              |              |              | number of    | edSQPInterna |
|              |              |              | SQP          | l            |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter_ls   | OT_INTEGER   | 100          | Maximum      | CasADi::Lift |
|              |              |              | number of    | edSQPInterna |
|              |              |              | linesearch   | l            |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::LiftedS |
|              |              |              | uts)  (eval_ | QPInternal   |
|              |              |              | f|eval_g|eva |              |
|              |              |              | l_jac_g|eval |              |
|              |              |              | _grad_f|eval |              |
|              |              |              | _h|qp)       |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_safety    | OT_REAL      | 1.100        | Safety       | CasADi::Lift |
|              |              |              | factor for   | edSQPInterna |
|              |              |              | linesearch   | l            |
|              |              |              | mu           |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| num_lifted   | OT_INTEGER   | 0            | Number of    | CasADi::Lift |
|              |              |              | variables to | edSQPInterna |
|              |              |              | lift         | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver    | OT_QPSOLVER  | GenericType( | The QP       | CasADi::Lift |
|              |              | )            | solver to be | edSQPInterna |
|              |              |              | used by the  | l            |
|              |              |              | SQP method   |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver_op | OT_DICTIONAR | GenericType( | Options to   | CasADi::Lift |
| tions        | Y            | )            | be passed to | edSQPInterna |
|              |              |              | the QP       | l            |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| rho          | OT_REAL      | 0.500        | Linesearch   | CasADi::Lift |
|              |              |              | parameter    | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| sigma        | OT_REAL      | 1            | Linesearch   | CasADi::Lift |
|              |              |              | parameter    | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| tau          | OT_REAL      | 0.200        | Linesearch   | CasADi::Lift |
|              |              |              | parameter    | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| toldx        | OT_REAL      | 0.000        | Stopping     | CasADi::Lift |
|              |              |              | criterion    | edSQPInterna |
|              |              |              | for the      | l            |
|              |              |              | stepsize     |              |
+--------------+--------------+--------------+--------------+--------------+
| tolgl        | OT_REAL      | 0.000        | Stopping     | CasADi::Lift |
|              |              |              | criterion    | edSQPInterna |
|              |              |              | for the      | l            |
|              |              |              | Lagrangian   |              |
|              |              |              | gradient     |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+---------------------------+
|     Id      |          Used in          |
+=============+===========================+
| eval_f      | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_g      | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_grad_f | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_h      | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_jac_g  | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| inputs      | CasADi::FXInternal        |
+-------------+---------------------------+
| outputs     | CasADi::FXInternal        |
+-------------+---------------------------+
| qp          | CasADi::LiftedSQPInternal |
+-------------+---------------------------+

>List of available stats
+------------+---------------------------+
|     Id     |          Used in          |
+============+===========================+
| iter_count | CasADi::LiftedSQPInternal |
+------------+---------------------------+

C++ includes: lifted_sqp.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::LiftedSQP::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::LiftedSQP::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::LiftedSQP::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::LiftedSQP::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::LiftedSQP::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::LiftedSQP::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::LiftedSQP::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::LiftedSQP::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::LiftedSQP::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::LiftedSQP::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::LiftedSQP::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::LiftedSQP::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::LiftedSQP::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::LiftedSQP::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::LiftedSQP::getOption "

get an option value ";

%feature("docstring")  CasADi::LiftedSQP::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::LiftedSQP::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::LiftedSQP::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::LiftedSQP::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::LiftedSQP::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::LiftedSQP::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::LiftedSQP::makeUnique "";

%feature("docstring")  CasADi::LiftedSQP::LiftedSQP "

Default constructor. ";

%feature("docstring")  CasADi::LiftedSQP::LiftedSQP "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::LiftedSQP::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::LiftedSQP::reportConstraints "";

%feature("docstring")  CasADi::LiftedSQP::getReportConstraints "";

%feature("docstring")  CasADi::LiftedSQP::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::LiftedSQP::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::LiftedSQP::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::LiftedSQP::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::LiftedSQP::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::LiftedSQP::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::LiftedSQP::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::LiftedSQP::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::LiftedSQP::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::LiftedSQP::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::LiftedSQP::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::LiftedSQP::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::LiftedSQP::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::LiftedSQP::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::LiftedSQP::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::LiftedSQP::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::LiftedSQP::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::LiftedSQP::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::LiftedSQP::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::LiftedSQP::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::LiftedSQP::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::LiftedSQP::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::LiftedSQP::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::LiftedSQP::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LiftedSQP::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LiftedSQP::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::LiftedSQP::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::LiftedSQP::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LiftedSQP::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::LiftedSQP::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LiftedSQP::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::LiftedSQP::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LiftedSQP::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LiftedSQP::indexed_one_based "";

%feature("docstring")  CasADi::LiftedSQP::indexed_zero_based "";

%feature("docstring")  CasADi::LiftedSQP::input "

Const access input argument. ";

%feature("docstring")  CasADi::LiftedSQP::input "

Access input argument. ";

%feature("docstring")  CasADi::LiftedSQP::output "

Const access input argument. ";

%feature("docstring")  CasADi::LiftedSQP::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::LiftedSQP::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::LiftedSQP::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::LiftedSQP::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQP::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQP::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::LiftedSQP::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::LiftedSQP::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQP::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQP::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LiftedSQP::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LiftedSQP::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::LiftedSQP::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::LiftedSQP::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::LiftedSQP::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::LiftedSQP::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::LiftedSQP::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::LiftedSQP::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::LiftedSQP::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::LiftedSQP::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::LiftedSQP::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::LiftedSQP::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::LiftedSQP::clone "

Deep copy. ";

%feature("docstring")  CasADi::LiftedSQP::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::LiftedSQP::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::LiftedSQP::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::LiftedSQP::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::LiftedSQP::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::LiftedSQP::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::LiftedSQP::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::LiftedSQP::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::LiftedSQP::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::LiftedSQP::isInit "

Is initialized? ";

%feature("docstring")  CasADi::LiftedSQP::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::LiftedSQP::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::LiftedSQP::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::LiftedSQP::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1LiftedSQPInternal.xml
%feature("docstring") CasADi::LiftedSQPInternal "

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| eta          | OT_REAL      | 0.000        | Linesearch   | CasADi::Lift |
|              |              |              | parameter:   | edSQPInterna |
|              |              |              | See Nocedal  | l            |
|              |              |              | 3.4          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | \"BFGS\"       | BFGS|exact   | CasADi::Lift |
| oximation    |              |              |              | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter      | OT_INTEGER   | 100          | Maximum      | CasADi::Lift |
|              |              |              | number of    | edSQPInterna |
|              |              |              | SQP          | l            |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter_ls   | OT_INTEGER   | 100          | Maximum      | CasADi::Lift |
|              |              |              | number of    | edSQPInterna |
|              |              |              | linesearch   | l            |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::LiftedS |
|              |              |              | uts)  (eval_ | QPInternal   |
|              |              |              | f|eval_g|eva |              |
|              |              |              | l_jac_g|eval |              |
|              |              |              | _grad_f|eval |              |
|              |              |              | _h|qp)       |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_safety    | OT_REAL      | 1.100        | Safety       | CasADi::Lift |
|              |              |              | factor for   | edSQPInterna |
|              |              |              | linesearch   | l            |
|              |              |              | mu           |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| num_lifted   | OT_INTEGER   | 0            | Number of    | CasADi::Lift |
|              |              |              | variables to | edSQPInterna |
|              |              |              | lift         | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver    | OT_QPSOLVER  | GenericType( | The QP       | CasADi::Lift |
|              |              | )            | solver to be | edSQPInterna |
|              |              |              | used by the  | l            |
|              |              |              | SQP method   |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver_op | OT_DICTIONAR | GenericType( | Options to   | CasADi::Lift |
| tions        | Y            | )            | be passed to | edSQPInterna |
|              |              |              | the QP       | l            |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| rho          | OT_REAL      | 0.500        | Linesearch   | CasADi::Lift |
|              |              |              | parameter    | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| sigma        | OT_REAL      | 1            | Linesearch   | CasADi::Lift |
|              |              |              | parameter    | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| tau          | OT_REAL      | 0.200        | Linesearch   | CasADi::Lift |
|              |              |              | parameter    | edSQPInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| toldx        | OT_REAL      | 0.000        | Stopping     | CasADi::Lift |
|              |              |              | criterion    | edSQPInterna |
|              |              |              | for the      | l            |
|              |              |              | stepsize     |              |
+--------------+--------------+--------------+--------------+--------------+
| tolgl        | OT_REAL      | 0.000        | Stopping     | CasADi::Lift |
|              |              |              | criterion    | edSQPInterna |
|              |              |              | for the      | l            |
|              |              |              | Lagrangian   |              |
|              |              |              | gradient     |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+---------------------------+
|     Id      |          Used in          |
+=============+===========================+
| eval_f      | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_g      | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_grad_f | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_h      | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| eval_jac_g  | CasADi::LiftedSQPInternal |
+-------------+---------------------------+
| inputs      | CasADi::FXInternal        |
+-------------+---------------------------+
| outputs     | CasADi::FXInternal        |
+-------------+---------------------------+
| qp          | CasADi::LiftedSQPInternal |
+-------------+---------------------------+

>List of available stats
+------------+---------------------------+
|     Id     |          Used in          |
+============+===========================+
| iter_count | CasADi::LiftedSQPInternal |
+------------+---------------------------+

C++ includes: lifted_sqp_internal.hpp ";

%feature("docstring")  CasADi::LiftedSQPInternal::LiftedSQPInternal "";

%feature("docstring")  CasADi::LiftedSQPInternal::~LiftedSQPInternal "";

%feature("docstring")  CasADi::LiftedSQPInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::LiftedSQPInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::LiftedSQPInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::LiftedSQPInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::LiftedSQPInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::LiftedSQPInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::LiftedSQPInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::LiftedSQPInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::LiftedSQPInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::LiftedSQPInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::LiftedSQPInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::LiftedSQPInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::LiftedSQPInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::LiftedSQPInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::LiftedSQPInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::LiftedSQPInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::LiftedSQPInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::LiftedSQPInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::LiftedSQPInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::LiftedSQPInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::LiftedSQPInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::LiftedSQPInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::LiftedSQPInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::LiftedSQPInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::LiftedSQPInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::LiftedSQPInternal::print "

Print. ";

%feature("docstring")  CasADi::LiftedSQPInternal::repr "

Print. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::LiftedSQPInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::LiftedSQPInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::LiftedSQPInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::LiftedSQPInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::LiftedSQPInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::LiftedSQPInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::LiftedSQPInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::LiftedSQPInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::LiftedSQPInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQPInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQPInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::LiftedSQPInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::LiftedSQPInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQPInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LiftedSQPInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::LiftedSQPInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::LiftedSQPInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::LiftedSQPInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LiftedSQPInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LiftedSQPInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LiftedSQPInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::LiftedSQPInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::LiftedSQPInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::LiftedSQPInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::LiftedSQPInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::LiftedSQPInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::LiftedSQPInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::LiftedSQPInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::LiftedSQPInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::LiftedSQPInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::LiftedSQPInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::LiftedSQPInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::LiftedSQPInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::LiftedSQPInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::LiftedSQPInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::LiftedSQPInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::LiftedSQPInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::LiftedSQPInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1LiftoptInternal.xml
%feature("docstring") CasADi::Interfaces::LiftoptInternal "

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| lifted       | OT_BOOLEAN   | true         |              | CasADi::Inte |
|              |              |              |              | rfaces::Lift |
|              |              |              |              | optInternal  |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| optimizer    | OT_STRING    | \"sqp\"        |              | CasADi::Inte |
|              |              |              |              | rfaces::Lift |
|              |              |              |              | optInternal  |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: liftopt_internal.hpp ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::LiftoptInternal
"";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::~LiftoptInternal
"";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::evaluate "

Evaluate. ";

%feature("docstring")
CasADi::Interfaces::LiftoptInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")
CasADi::Interfaces::LiftoptInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::jacobian_switch
"

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::numeric_jacobian
"

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::repr "

Print. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::LiftoptInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::LiftoptInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::symbolicInputSX
"

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::LiftoptInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Interfaces::LiftoptInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::deepCopyMembers
"

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::LiftoptInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1LiftoptSolver.xml
%feature("docstring") CasADi::Interfaces::LiftoptSolver "

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| lifted       | OT_BOOLEAN   | true         |              | CasADi::Inte |
|              |              |              |              | rfaces::Lift |
|              |              |              |              | optInternal  |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| optimizer    | OT_STRING    | \"sqp\"        |              | CasADi::Inte |
|              |              |              |              | rfaces::Lift |
|              |              |              |              | optInternal  |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: liftopt_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::makeUnique "";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::LiftoptSolver "

Default constructor. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::LiftoptSolver "

Create an LIFTOPT instance (standard NLP interface) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::LiftoptSolver "

Create an LIFTOPT instance. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::nodeInit "

Node init? ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::nodeInit "";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::reportConstraints
"";

%feature("docstring")
CasADi::Interfaces::LiftoptSolver::getReportConstraints "";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::LiftoptSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::indexed_one_based
"";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::indexed_zero_based
"";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::LiftoptSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::assignNodeNoCount
"

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getRepresentation
"

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::LiftoptSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1LinearSolver.xml
%feature("docstring") CasADi::LinearSolver "

Abstract base class for the linear solver classes Solves the linear system
A.x = b for x

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: linear_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::LinearSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::LinearSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::LinearSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::LinearSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::LinearSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::LinearSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::LinearSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::LinearSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::LinearSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::LinearSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::LinearSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::LinearSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::LinearSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::LinearSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::LinearSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::LinearSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::LinearSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::LinearSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::LinearSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::LinearSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::LinearSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::LinearSolver::makeUnique "";

%feature("docstring")  CasADi::LinearSolver::setSparsity "

Set sparsity (before initialization) ";

%feature("docstring")  CasADi::LinearSolver::prepare "

Factorize the matrix. ";

%feature("docstring")  CasADi::LinearSolver::solve "

Solve the system of equations, internal vector. ";

%feature("docstring")  CasADi::LinearSolver::solve "

Solve the factorized system of equations. ";

%feature("docstring")  CasADi::LinearSolver::prepared "

Check if prepared. ";

%feature("docstring")  CasADi::LinearSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::LinearSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::LinearSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::LinearSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::LinearSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::LinearSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::LinearSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::LinearSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::LinearSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::LinearSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::LinearSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::LinearSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::LinearSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::LinearSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::LinearSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::LinearSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::LinearSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::LinearSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::LinearSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::LinearSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LinearSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LinearSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::LinearSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::LinearSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LinearSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::LinearSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::LinearSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::LinearSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LinearSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LinearSolver::indexed_one_based "";

%feature("docstring")  CasADi::LinearSolver::indexed_zero_based "";

%feature("docstring")  CasADi::LinearSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::LinearSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::LinearSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::LinearSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::LinearSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::LinearSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::LinearSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::LinearSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::LinearSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LinearSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LinearSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::LinearSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::LinearSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::LinearSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::LinearSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::LinearSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::LinearSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::LinearSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::LinearSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::LinearSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::LinearSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::LinearSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::LinearSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::LinearSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::LinearSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::LinearSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::LinearSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::LinearSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::LinearSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::LinearSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::LinearSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::LinearSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::LinearSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::LinearSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::LinearSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::LinearSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1LinearSolverInternal.xml
%feature("docstring") CasADi::LinearSolverInternal "

Internal class Solves the linear system A.x = b for x

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: linear_solver_internal.hpp ";

%feature("docstring")  CasADi::LinearSolverInternal::LinearSolverInternal "";

%feature("docstring")  CasADi::LinearSolverInternal::~LinearSolverInternal "";

%feature("docstring")  CasADi::LinearSolverInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::LinearSolverInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::LinearSolverInternal::prepare "";

%feature("docstring")  CasADi::LinearSolverInternal::solve "";

%feature("docstring")  CasADi::LinearSolverInternal::solve "";

%feature("docstring")  CasADi::LinearSolverInternal::nrow "";

%feature("docstring")  CasADi::LinearSolverInternal::ncol "";

%feature("docstring")  CasADi::LinearSolverInternal::nnz "";

%feature("docstring")  CasADi::LinearSolverInternal::col "";

%feature("docstring")  CasADi::LinearSolverInternal::rowind "";

%feature("docstring")  CasADi::LinearSolverInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::LinearSolverInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::LinearSolverInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::LinearSolverInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::LinearSolverInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::LinearSolverInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::LinearSolverInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::LinearSolverInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::LinearSolverInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::LinearSolverInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::LinearSolverInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::LinearSolverInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::LinearSolverInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::LinearSolverInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::LinearSolverInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::LinearSolverInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::LinearSolverInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::LinearSolverInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::LinearSolverInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::LinearSolverInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::LinearSolverInternal::print "

Print. ";

%feature("docstring")  CasADi::LinearSolverInternal::repr "

Print. ";

%feature("docstring")  CasADi::LinearSolverInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::LinearSolverInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::LinearSolverInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::LinearSolverInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::LinearSolverInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::LinearSolverInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::LinearSolverInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::LinearSolverInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::LinearSolverInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::LinearSolverInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolverInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolverInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::LinearSolverInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::LinearSolverInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolverInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::LinearSolverInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::LinearSolverInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::LinearSolverInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::LinearSolverInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::LinearSolverInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::LinearSolverInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::LinearSolverInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LinearSolverInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::LinearSolverInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LinearSolverInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LinearSolverInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::LinearSolverInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::LinearSolverInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::LinearSolverInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::LinearSolverInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::LinearSolverInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::LinearSolverInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::LinearSolverInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::LinearSolverInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::LinearSolverInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::LinearSolverInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::LinearSolverInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::LinearSolverInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::LinearSolverInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::LinearSolverInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::LinearSolverInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::LinearSolverInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::LinearSolverInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::LinearSolverInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::LinearSolverInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::LinearSolverInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::LinearSolverInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::LinearSolverInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::LinearSolverInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::LinearSolverInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::LinearSolverInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::LinearSolverInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::LinearSolverInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Mapping.xml
%feature("docstring") CasADi::Mapping "

Maps non-zero elements.

Joel Andersson

C++ includes: mapping.hpp ";

%feature("docstring")  CasADi::Mapping::Mapping "

Constructor. ";

%feature("docstring")  CasADi::Mapping::clone "

Clone function. ";

%feature("docstring")  CasADi::Mapping::~Mapping "

Destructor. ";

%feature("docstring")  CasADi::Mapping::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::Mapping::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::Mapping::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::Mapping::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::Mapping::printPart "

Print a part of the expression */. ";

%feature("docstring")  CasADi::Mapping::isMapping "

Is a mapping matrix. ";

%feature("docstring")  CasADi::Mapping::assign "

Assign/add nonzeros. ";

%feature("docstring")  CasADi::Mapping::assign "

Assign/add nonzeros, outputs sequential. ";

%feature("docstring")  CasADi::Mapping::init "

Initialize. ";

%feature("docstring")  CasADi::Mapping::evaluateBlock "

Evaluate a block given the data vectors. ";

%feature("docstring")  CasADi::Mapping::evaluateGen "

Evaluate the function (template) ";

%feature("docstring")  CasADi::Mapping::mapping "

Construct the IMatrix that maps from the iind'th input to the output. ";

%feature("docstring")  CasADi::Mapping::getDepInd "

Get mapping from the output non-zero index of the dependency index. ";

%feature("docstring")  CasADi::Mapping::isIdentity "

Check if the mapping is in fact an identity mapping. ";

%feature("docstring")  CasADi::Mapping::isTranspose "

Check if the mapping is in fact a transpose. ";

%feature("docstring")  CasADi::Mapping::evaluateBlock "";

%feature("docstring")  CasADi::Mapping::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Mapping::repr "

Print a representation. ";

%feature("docstring")  CasADi::Mapping::print "

Print a description. ";

%feature("docstring")  CasADi::Mapping::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::Mapping::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::Mapping::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::Mapping::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::Mapping::getName "

Get the name. ";

%feature("docstring")  CasADi::Mapping::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::Mapping::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::Mapping::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::Mapping::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::Mapping::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::Mapping::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::Mapping::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::Mapping::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::Mapping::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::Mapping::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::Mapping::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::Mapping::dep "";

%feature("docstring")  CasADi::Mapping::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::Mapping::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::Mapping::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::Mapping::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::Mapping::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::Mapping::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::Mapping::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::Mapping::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::Mapping::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::Mapping::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::Mapping::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::Mapping::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::Mapping::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::Mapping::numel "

Number of elements. ";

%feature("docstring")  CasADi::Mapping::size "

Get size. ";

%feature("docstring")  CasADi::Mapping::size1 "

Get size. ";

%feature("docstring")  CasADi::Mapping::size2 "

Get size. ";

%feature("docstring")  CasADi::Mapping::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Mapping::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Mapping::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Mapping::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Mapping::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Matrix.xml
%feature("docstring") CasADi::Matrix "

General sparse matrix class General sparse matrix class that is designed
with the idea that \"everything is a matrix\", that is, also scalars and
vectors.  This philosophy makes it easy to use and to interface in
particularily with Python and Matlab/Octave. .

The syntax tries to stay as close as possible to the ublas syntax when it
comes to vector/matrix operations.

Index starts with 0.  Index flatten happens as follows: (i,j) -> k =
j+i*size2()  Vectors are considered to be column vectors.

The storage format is a (modified) compressed row storage (CRS) format. This
way, a vector element can always be accessed in constant time.

Matrix<T> is polymorphic with a std::vector<T> that contain all non-
identical-zero elements.  The sparsity can be accessed with CRSSparsity&
sparsity()

Joel Andersson

C++ includes: matrix.hpp ";

%feature("docstring")  CasADi::Matrix::vector "

ublas vector

Check type of matrix ";

%feature("docstring")  CasADi::Matrix::getSub "

Get a submatrix. ";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::getSub "";

%feature("docstring")  CasADi::Matrix::setSub "

Set a submatrix. ";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::setSub "";

%feature("docstring")  CasADi::Matrix::getNZ "

Get a set of nonzeros. ";

%feature("docstring")  CasADi::Matrix::getNZ "";

%feature("docstring")  CasADi::Matrix::getNZ "";

%feature("docstring")  CasADi::Matrix::getNZ "";

%feature("docstring")  CasADi::Matrix::setNZ "

Set a set of nonzeros. ";

%feature("docstring")  CasADi::Matrix::setNZ "";

%feature("docstring")  CasADi::Matrix::setNZ "";

%feature("docstring")  CasADi::Matrix::setNZ "";

%feature("docstring")  CasADi::Matrix::indexed_one_based "

Indexing for interfaced languages get a non-zero ";

%feature("docstring")  CasADi::Matrix::indexed_zero_based "";

%feature("docstring")  CasADi::Matrix::indexed_one_based "";

%feature("docstring")  CasADi::Matrix::indexed_zero_based "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed_one_based "

get a matrix element ";

%feature("docstring")  CasADi::Matrix::indexed_zero_based "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed "";

%feature("docstring")  CasADi::Matrix::indexed_one_based_assignment "

set a non-zero ";

%feature("docstring")  CasADi::Matrix::indexed_zero_based_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_one_based_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_zero_based_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_one_based_assignment "

set a matrix element ";

%feature("docstring")  CasADi::Matrix::indexed_zero_based_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::indexed_assignment "";

%feature("docstring")  CasADi::Matrix::binary "

Create nodes by their ID. ";

%feature("docstring")  CasADi::Matrix::unary "";

%feature("docstring")  CasADi::Matrix::scalar_matrix "";

%feature("docstring")  CasADi::Matrix::matrix_scalar "";

%feature("docstring")  CasADi::Matrix::matrix_matrix "";

%feature("docstring")  CasADi::Matrix::__add__ "

Elementwise operations -- Octave/Python naming. ";

%feature("docstring")  CasADi::Matrix::__sub__ "";

%feature("docstring")  CasADi::Matrix::__mul__ "";

%feature("docstring")  CasADi::Matrix::__div__ "";

%feature("docstring")  CasADi::Matrix::__pow__ "";

%feature("docstring")  CasADi::Matrix::__constpow__ "";

%feature("docstring")  CasADi::Matrix::__mpower__ "";

%feature("docstring")  CasADi::Matrix::__mrdivide__ "";

%feature("docstring")  CasADi::Matrix::sin "

Operations defined in the standard namespace for unambigous access and Numpy
compatibility. ";

%feature("docstring")  CasADi::Matrix::cos "";

%feature("docstring")  CasADi::Matrix::tan "";

%feature("docstring")  CasADi::Matrix::arcsin "";

%feature("docstring")  CasADi::Matrix::arccos "";

%feature("docstring")  CasADi::Matrix::arctan "";

%feature("docstring")  CasADi::Matrix::exp "";

%feature("docstring")  CasADi::Matrix::log "";

%feature("docstring")  CasADi::Matrix::sqrt "";

%feature("docstring")  CasADi::Matrix::floor "";

%feature("docstring")  CasADi::Matrix::ceil "";

%feature("docstring")  CasADi::Matrix::fabs "";

%feature("docstring")  CasADi::Matrix::sign "";

%feature("docstring")  CasADi::Matrix::erfinv "";

%feature("docstring")  CasADi::Matrix::fmin "";

%feature("docstring")  CasADi::Matrix::fmax "";

%feature("docstring")  CasADi::Matrix::erf "";

%feature("docstring")  CasADi::Matrix::sinh "";

%feature("docstring")  CasADi::Matrix::cosh "";

%feature("docstring")  CasADi::Matrix::tanh "";

%feature("docstring")  CasADi::Matrix::arctan2 "";

%feature("docstring")  CasADi::Matrix::log10 "";

%feature("docstring")  CasADi::Matrix::printme "";

%feature("docstring")  CasADi::Matrix::print "

Printing. ";

%feature("docstring")  CasADi::Matrix::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Matrix::printScalar "";

%feature("docstring")  CasADi::Matrix::printVector "";

%feature("docstring")  CasADi::Matrix::printMatrix "";

%feature("docstring")  CasADi::Matrix::printSparse "";

%feature("docstring")  CasADi::Matrix::printDense "";

%feature("docstring")  CasADi::Matrix::className "";

%feature("docstring")  CasADi::Matrix::sparse "

create a sparse matrix with all zeros ";

%feature("docstring")  CasADi::Matrix::sparse "";

%feature("docstring")  CasADi::Matrix::zeros "

create a dense matrix with all zeros ";

%feature("docstring")  CasADi::Matrix::zeros "";

%feature("docstring")  CasADi::Matrix::ones "

create a matrix with all ones ";

%feature("docstring")  CasADi::Matrix::ones "";

%feature("docstring")  CasADi::Matrix::inf "

create a matrix with all inf ";

%feature("docstring")  CasADi::Matrix::inf "";

%feature("docstring")  CasADi::Matrix::nan "

create a matrix with all nan ";

%feature("docstring")  CasADi::Matrix::nan "";

%feature("docstring")  CasADi::Matrix::repmat "

create a matrix by repeating an existing matrix ";

%feature("docstring")  CasADi::Matrix::repmat "";

%feature("docstring")  CasADi::Matrix::Matrix "

constructors

empty 0-by-0 matrix constructor ";

%feature("docstring")  CasADi::Matrix::Matrix "

Copy constructor. ";

%feature("docstring")  CasADi::Matrix::Matrix "

empty n-by-m matrix constructor ";

%feature("docstring")  CasADi::Matrix::Matrix "

dense n-by-m matrix filled with val constructor ";

%feature("docstring")  CasADi::Matrix::Matrix "

sparse n-by-m matrix filled with given sparsity ";

%feature("docstring")  CasADi::Matrix::Matrix "

dense matrix constructor with data given as vector of vectors ";

%feature("docstring")  CasADi::Matrix::Matrix "

sparse matrix with a given sparsity ";

%feature("docstring")  CasADi::Matrix::Matrix "

sparse matrix with a given sparsity and non-zero elements. ";

%feature("docstring")  CasADi::Matrix::sanityCheck "

Check if the dimensions and rowind,col vectors are compatible.

Parameters:
-----------

complete:  set to true to also check elementwise throws an error as possible
result ";

%feature("docstring")  CasADi::Matrix::Matrix "

This constructor enables implicit type conversion from a numeric type. ";

%feature("docstring")  CasADi::Matrix::Matrix "

Construct from a vector.

Thanks to implicit conversion, you can pretend that Matrix(const SX& x);
exists. Note: above remark applies only to C++, not python or octave
interfaces ";

%feature("docstring")  CasADi::Matrix::Matrix "

Construct dense matrix from a vector with the elements in column major
ordering. ";

%feature("docstring")  CasADi::Matrix::toScalar "

Convert to scalar type. ";

%feature("docstring")  CasADi::Matrix::begin "

Get iterators to beginning and end. ";

%feature("docstring")  CasADi::Matrix::begin "";

%feature("docstring")  CasADi::Matrix::rbegin "";

%feature("docstring")  CasADi::Matrix::rbegin "";

%feature("docstring")  CasADi::Matrix::end "";

%feature("docstring")  CasADi::Matrix::end "";

%feature("docstring")  CasADi::Matrix::rend "";

%feature("docstring")  CasADi::Matrix::rend "";

%feature("docstring")  CasADi::Matrix::front "

Get references to beginning and end. ";

%feature("docstring")  CasADi::Matrix::front "";

%feature("docstring")  CasADi::Matrix::back "";

%feature("docstring")  CasADi::Matrix::back "";

%feature("docstring")  CasADi::Matrix::Matrix "

Create a matrix from a matrix with a different type of matrix entries
(assuming that the scalar conversion is valid) ";

%feature("docstring")  CasADi::Matrix::Matrix "

Create an expression from an stl vector. ";

%feature("docstring")  CasADi::Matrix::Matrix "

Create a non-vector expression from an stl vector. ";

%feature("docstring")  CasADi::Matrix::at "

Get a non-zero element. ";

%feature("docstring")  CasADi::Matrix::at "

Access a non-zero element. ";

%feature("docstring")  CasADi::Matrix::elem "

get an element ";

%feature("docstring")  CasADi::Matrix::elem "

get a reference to an element ";

%feature("docstring")  CasADi::Matrix::getElement "

get an element, do not allocate ";

%feature("docstring")  CasADi::Matrix::hasNZ "

Returns true if the matrix has a non-zero at location i,j. ";

%feature("docstring")  CasADi::Matrix::append "

Append a matrix to the end. ";

%feature("docstring")  CasADi::Matrix::setZero "

Set all elements to zero. ";

%feature("docstring")  CasADi::Matrix::setAll "

Set all elements to a value. ";

%feature("docstring")  CasADi::Matrix::makeDense "

Make the matrix an dense n-by-m matrix. ";

%feature("docstring")  CasADi::Matrix::makeEmpty "

Make the matrix an empty n-by-m matrix. ";

%feature("docstring")  CasADi::Matrix::mul "

Matrix product. ";

%feature("docstring")  CasADi::Matrix::trans "

Matrix transpose. ";

%feature("docstring")  CasADi::Matrix::dimString "

Get string representation of dimensions. The representation is (nrow x ncol
= numel | size) ";

%feature("docstring")  CasADi::Matrix::col "";

%feature("docstring")  CasADi::Matrix::rowind "";

%feature("docstring")  CasADi::Matrix::col "";

%feature("docstring")  CasADi::Matrix::rowind "";

%feature("docstring")  CasADi::Matrix::clear "";

%feature("docstring")  CasADi::Matrix::resize "";

%feature("docstring")  CasADi::Matrix::reserve "";

%feature("docstring")  CasADi::Matrix::reserve "";

%feature("docstring")  CasADi::Matrix::erase "

Erase a submatrix Erase rows and/or columns of a matrix. ";

%feature("docstring")  CasADi::Matrix::remove "

Remove rows or columns Rremove/delete rows and/or columns of a matrix. ";

%feature("docstring")  CasADi::Matrix::enlarge "

Enlarge matrix Make the matrix larger by inserting empty rows and columns,
keeping the existing non-zeros. ";

%feature("docstring")  CasADi::Matrix::data "

Access the non-zero elements. ";

%feature("docstring")  CasADi::Matrix::data "

Const access the non-zero elements. ";

%feature("docstring")  CasADi::Matrix::sparsity "

Const access the sparsity - reference to data member. ";

%feature("docstring")  CasADi::Matrix::sparsityRef "

Access the sparsity, make a copy if there are multiple references to it. ";

%feature("docstring")  CasADi::Matrix::set "

Set the non-zero elements, scalar. ";

%feature("docstring")  CasADi::Matrix::get "

Get the non-zero elements, scalar. ";

%feature("docstring")  CasADi::Matrix::set "

Set the non-zero elements, vector. ";

%feature("docstring")  CasADi::Matrix::get "

Get the non-zero elements, vector. ";

%feature("docstring")  CasADi::Matrix::set "

Set the non-zero elements, Matrix. ";

%feature("docstring")  CasADi::Matrix::get "

Get the non-zero elements, Matrix. ";

%feature("docstring")  CasADi::Matrix::getArray "

Get the non-zero elements, array. ";

%feature("docstring")  CasADi::Matrix::setArray "

Set the non-zero elements, array. ";

%feature("docstring")  CasADi::Matrix::getArray "

Get the non-zero elements, array, sparse and correct length. ";

%feature("docstring")  CasADi::Matrix::setArray "

Set the non-zero elements, array, sparse and correct length. ";

%feature("docstring")  CasADi::Matrix::getStridedArray "

Get the non-zero elements, strided array.

Set stride to zero for unstrided acces ";

%feature("docstring")  CasADi::Matrix::get "

Legacy - use getArray instead. ";

%feature("docstring")  CasADi::Matrix::set "

Legacy - use setArray instead. ";

%feature("docstring")  CasADi::Matrix::getBand "

Save the result to the LAPACK banded format -- see LAPACK documentation kl:
The number of subdiagonals in res ku: The number of superdiagonals in res
ldres: The leading dimension in res res: The number of superdiagonals. ";

%feature("docstring")  CasADi::Matrix::isNull "

The following function is used to ensure similarity to MX, which is
reference counted. ";

%feature("docstring")  CasADi::Matrix::__mldivide__ "

Matrix division from left. ";

%feature("docstring")  CasADi::Matrix::size "

Get the number of (structural) non-zero elements. ";

%feature("docstring")  CasADi::Matrix::size "

Get the number if non-zeros for a given sparsity pattern. ";

%feature("docstring")  CasADi::Matrix::sizeL "

Get the number of non-zeros in the lower triangular half. ";

%feature("docstring")  CasADi::Matrix::sizeU "

Get get the number of non-zeros in the upper triangular half. ";

%feature("docstring")  CasADi::Matrix::numel "

Get the number of elements. ";

%feature("docstring")  CasADi::Matrix::size1 "

Get the first dimension (i.e. n for a n-by-m matrix) ";

%feature("docstring")  CasADi::Matrix::size2 "

Get the first dimension (i.e. m for a n-by-m matrix) ";

%feature("docstring")  CasADi::Matrix::shape "

Get the shape. ";

%feature("docstring")  CasADi::Matrix::empty "

Check if the matrix expression is empty. ";

%feature("docstring")  CasADi::Matrix::dense "

Check if the matrix expression is dense. ";

%feature("docstring")  CasADi::Matrix::scalar "

Check if the matrix expression is scalar. ";

%feature("docstring")  CasADi::Matrix::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Matrix::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1MinusInfSX.xml
%feature("docstring") CasADi::MinusInfSX "

Represents a minus infinity SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::MinusInfSX::isInteger "";

%feature("docstring")  CasADi::MinusInfSX::isSymbolic "";

%feature("docstring")  CasADi::MinusInfSX::hasDep "";

%feature("docstring")  CasADi::MinusInfSX::isZero "";

%feature("docstring")  CasADi::MinusInfSX::isOne "";

%feature("docstring")  CasADi::MinusInfSX::isMinusOne "";

%feature("docstring")  CasADi::MinusInfSX::isNan "";

%feature("docstring")  CasADi::MinusInfSX::isInf "";

%feature("docstring")  CasADi::MinusInfSX::getIntValue "";

%feature("docstring")  CasADi::MinusInfSX::MinusInfSX "";

%feature("docstring")  CasADi::MinusInfSX::~MinusInfSX "";

%feature("docstring")  CasADi::MinusInfSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::MinusInfSX::isMinusInf "

Properties. ";

%feature("docstring")  CasADi::MinusInfSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::MinusInfSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::MinusInfSX::print "

print ";

%feature("docstring")  CasADi::MinusInfSX::getName "";

%feature("docstring")  CasADi::MinusInfSX::isEqual "

comparison ";

%feature("docstring")  CasADi::MinusInfSX::isEqual "

comparison ";

%feature("docstring")  CasADi::MinusInfSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::MinusInfSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::MinusInfSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::MinusInfSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::MinusInfSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::MinusInfSX::marked "";

%feature("docstring")  CasADi::MinusInfSX::mark "";


// File: classCasADi_1_1MinusOneSX.xml
%feature("docstring") CasADi::MinusOneSX "

Represents a minus one SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::MinusOneSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::MinusOneSX::getIntValue "";

%feature("docstring")  CasADi::MinusOneSX::isInteger "

Properties. ";

%feature("docstring")  CasADi::MinusOneSX::isMinusOne "";

%feature("docstring")  CasADi::MinusOneSX::isSymbolic "";

%feature("docstring")  CasADi::MinusOneSX::hasDep "";

%feature("docstring")  CasADi::MinusOneSX::isZero "";

%feature("docstring")  CasADi::MinusOneSX::isOne "";

%feature("docstring")  CasADi::MinusOneSX::isNan "";

%feature("docstring")  CasADi::MinusOneSX::isInf "";

%feature("docstring")  CasADi::MinusOneSX::isMinusInf "";

%feature("docstring")  CasADi::MinusOneSX::MinusOneSX "";

%feature("docstring")  CasADi::MinusOneSX::~MinusOneSX "";

%feature("docstring")  CasADi::MinusOneSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::MinusOneSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::MinusOneSX::print "

print ";

%feature("docstring")  CasADi::MinusOneSX::getName "";

%feature("docstring")  CasADi::MinusOneSX::isEqual "

comparison ";

%feature("docstring")  CasADi::MinusOneSX::isEqual "

comparison ";

%feature("docstring")  CasADi::MinusOneSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::MinusOneSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::MinusOneSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::MinusOneSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::MinusOneSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::MinusOneSX::marked "";

%feature("docstring")  CasADi::MinusOneSX::mark "";


// File: classKINEMATICS_1_1ModelSimulator.xml
%feature("docstring") KINEMATICS::ModelSimulator "C++ includes:
simulator.hpp ";

%feature("docstring")  KINEMATICS::ModelSimulator::ModelSimulator "";

%feature("docstring")  KINEMATICS::ModelSimulator::~ModelSimulator "";

%feature("docstring")  KINEMATICS::ModelSimulator::evaluate "";

%feature("docstring")  KINEMATICS::ModelSimulator::evaluatelin "";

%feature("docstring")  KINEMATICS::ModelSimulator::output "";

%feature("docstring")  KINEMATICS::ModelSimulator::integrateOnce "";

%feature("docstring")  KINEMATICS::ModelSimulator::integrate "";

%feature("docstring")  KINEMATICS::ModelSimulator::integratelin "";

%feature("docstring")  KINEMATICS::ModelSimulator::init "

initialize the state ";

%feature("docstring")  KINEMATICS::ModelSimulator::setInput "";

%feature("docstring")  KINEMATICS::ModelSimulator::setdeltat "";

%feature("docstring")  KINEMATICS::ModelSimulator::linearize "";

%feature("docstring")  KINEMATICS::ModelSimulator::initDumb "";

%feature("docstring")  KINEMATICS::ModelSimulator::outputDumb "";

%feature("docstring")  KINEMATICS::ModelSimulator::setInputDumb "";

%feature("docstring")  KINEMATICS::ModelSimulator::test "";


// File: structCasADi_1_1MulBinaryOperation.xml
%feature("docstring") CasADi::MulBinaryOperation "C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1MultipleOutput.xml
%feature("docstring") CasADi::MultipleOutput "

Joel Andersson

C++ includes: multiple_output.hpp ";

%feature("docstring")  CasADi::MultipleOutput::MultipleOutput "

Constructor. ";

%feature("docstring")  CasADi::MultipleOutput::~MultipleOutput "

Destructor. ";

%feature("docstring")  CasADi::MultipleOutput::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::MultipleOutput::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::MultipleOutput::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::MultipleOutput::clone "

Clone function. ";

%feature("docstring")  CasADi::MultipleOutput::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::MultipleOutput::repr "

Print a representation. ";

%feature("docstring")  CasADi::MultipleOutput::print "

Print a description. ";

%feature("docstring")  CasADi::MultipleOutput::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::MultipleOutput::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::MultipleOutput::evaluateD "

Evaluate the function. ";

%feature("docstring")  CasADi::MultipleOutput::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::MultipleOutput::evaluateSX "

Evaluate symbolically ( SX) ";

%feature("docstring")  CasADi::MultipleOutput::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::MultipleOutput::evaluateMX "

Evaluate symbolically ( MX) ";

%feature("docstring")  CasADi::MultipleOutput::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::MultipleOutput::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::MultipleOutput::getName "

Get the name. ";

%feature("docstring")  CasADi::MultipleOutput::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::MultipleOutput::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::MultipleOutput::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::MultipleOutput::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::MultipleOutput::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::MultipleOutput::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::MultipleOutput::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::MultipleOutput::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::MultipleOutput::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::MultipleOutput::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::MultipleOutput::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::MultipleOutput::dep "";

%feature("docstring")  CasADi::MultipleOutput::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::MultipleOutput::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::MultipleOutput::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::MultipleOutput::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::MultipleOutput::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::MultipleOutput::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::MultipleOutput::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::MultipleOutput::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::MultipleOutput::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::MultipleOutput::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::MultipleOutput::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::MultipleOutput::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::MultipleOutput::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::MultipleOutput::numel "

Number of elements. ";

%feature("docstring")  CasADi::MultipleOutput::size "

Get size. ";

%feature("docstring")  CasADi::MultipleOutput::size1 "

Get size. ";

%feature("docstring")  CasADi::MultipleOutput::size2 "

Get size. ";

%feature("docstring")  CasADi::MultipleOutput::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::MultipleOutput::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::MultipleOutput::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MultipleOutput::init "

Initialize the object. ";

%feature("docstring")  CasADi::MultipleOutput::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::MultipleOutput::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1OptimalControl_1_1MultipleShooting.xml
%feature("docstring") CasADi::OptimalControl::MultipleShooting "

Multiple Shooting.

ns: Number of shooting nodes: from option number_of_grid_points  nx: Number
of differential states: from ffcn.input(INTEGRATOR_X0).size()  nc: Number of
constants during intergation: ffcn.input(INTEGRATOR_P).size() nu: Number of
controls: from nc - np  np: Number of parameters: from option
number_of_parameters  nh: Number of point constraints: from
cfcn.input(0).size()

Joel Andersson

>Input scheme: CasADi::OCPInput (OCP_NUM_IN = 17)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| OCP_T                              | Time grid: ((ns+1) x 1) - default: |
|                                    | linspace(0,t_final,ns+1)           |
+------------------------------------+------------------------------------+
| OCP_LBX                            | States lower bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_UBX                            | States upper bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_X_INIT                         | States initial guess (nx x (ns+1)) |
+------------------------------------+------------------------------------+
| OCP_LBXP                           | States deriatives lower bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_UBXP                           | States deriatives upper bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_XP_INIT                        | States deriatives initial guess    |
|                                    | (nx x (ns+1))                      |
+------------------------------------+------------------------------------+
| OCP_LBU                            | Controls lower bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_UBU                            | Controls upper bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_U_INIT                         | Controls initial guess (nu x ns)   |
+------------------------------------+------------------------------------+
| OCP_LBP                            | Parameters lower bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_UBP                            | Parameters upper bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_P_INIT                         | Parameters initial guess (np x 1)  |
+------------------------------------+------------------------------------+
| OCP_LBH                            | Point constraint lower bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_UBH                            | Point constraint upper bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_LBG                            | Lower bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+
| OCP_UBG                            | Upper bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::OCPOutput (OCP_NUM_OUT = 4)
+------------+--------------------------------------+
|    Name    |             Description              |
+============+======================================+
| OCP_X_OPT  | Optimal state trajectory.            |
+------------+--------------------------------------+
| OCP_U_OPT  | Optimal control trajectory.          |
+------------+--------------------------------------+
| OCP_XP_OPT | Optimal state derivative trajectory. |
+------------+--------------------------------------+
| OCP_P_OPT  | Optimal parameters.                  |
+------------+--------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::OCPS |
|              |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_INTEGRATO | GenericType( | An           | CasADi::Opti |
|              | R            | )            | integrator   | malControl:: |
|              |              |              | creator      | MultipleShoo |
|              |              |              | function     | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| integrator_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the          | MultipleShoo |
|              |              |              | integrator   | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver   | OT_NLPSOLVER | GenericType( | An NLPSolver | CasADi::Opti |
|              |              | )            | creator      | malControl:: |
|              |              |              | function     | MultipleShoo |
|              |              |              |              | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the NLP      | MultipleShoo |
|              |              |              | Solver       | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_gr | OT_INTEGER   | 20           |              | CasADi::OCPS |
| id_points    |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_pa | OT_INTEGER   | 0            |              | CasADi::OCPS |
| rameters     |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parallelizat | OT_STRING    | GenericType( | Passed on to | CasADi::Opti |
| ion          |              | )            | CasADi::Para | malControl:: |
|              |              |              | llelizer     | MultipleShoo |
|              |              |              |              | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: multiple_shooting.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setFwdSeed
"

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setFwdSens
"

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setAdjSeed
"

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setAdjSens
"

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getFwdSeed
"

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getFwdSens
"

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getAdjSeed
"

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getAdjSens
"

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getOption "

get an option value ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::hasOption "

check if there is an option str ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::copyOptions
"

Copy all options from another object. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::dictionary
"

Get the dictionary. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::makeUnique
"

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::makeUnique
"";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::MultipleShooting "

Default constructor. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::MultipleShooting "

Create a multiple shooting OCP solver.

Parameters:
-----------

ffcn:  Continuous time dynamics, an CasADi::FX with the folowing mapping:
>Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

>Output scheme: CasADi::DAEOutput (DAE_NUM_OUT = 3)
+----------+------------------------------------------+
|   Name   |               Description                |
+==========+==========================================+
| DAE_ODE  | Right hand side of the implicit ODE      |
+----------+------------------------------------------+
| DAE_ALG  | Right hand side of algebraic equations   |
+----------+------------------------------------------+
| DAE_QUAD | Right hand side of quadratures equations |
+----------+------------------------------------------+

Important notes: In the above table, INTEGRATOR_P input is not really of
shape (np x 1), but rather ( (np+nu) x 1 ).

The first np entries of the INTEGRATOR_P input are interpreted as parameters
to be optimized but constant over the whole domain. The remainder are
interpreted as controls.

BEWARE: if the right hand side of ffcn is dependent on time, the results
will be incorrect.

mfcn:  Mayer term, CasADi::FX mapping to cost (1 x 1) >Input scheme:
CasADi::MayerInput (MAYER_NUM_IN = 2)
+---------+-------------------------------------------+ |  Name   |
Description                |
+=========+===========================================+ | MAYER_X | States
at the end of integration (nx x 1) |
+---------+-------------------------------------------+ | MAYER_P | Problem
parameters (np x 1)               |
+---------+-------------------------------------------+

cfcn:  Path constraints, CasADi::FX mapping to (nh x 1) >Input scheme:
CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

rfcn:  Initial value constraints ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getGuess "

Get the variables. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getVariableBounds "

Get the variables. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getConstraintBounds "

Get the constraints. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::setOptimalSolution "

Set the optimal solution. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getNLPSolver "";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::reportConstraints "";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getReportConstraints "";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getFfcn "";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getMfcn "";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getCfcn "";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getRfcn "";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getNumInputs "

Get number of inputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getNumOutputs "

Get number of outputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::derivative
"

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::jacSparsity
"

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::indexed_one_based "";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::indexed_zero_based "";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::input "

Const access input argument. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::input "

Access input argument. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::output "

Const access input argument. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::spEvaluate
"

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::clone "

Deep copy. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::assignNode
"

Assign the node to a node class pointer (or null) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::isInit "

Is initialized? ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::assertInit
"

Assert that it is initialized. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShooting::isNull "

Is a null pointer? ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShooting::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1OptimalControl_1_1MultipleShootingInternal.xml
%feature("docstring") CasADi::OptimalControl::MultipleShootingInternal "

>Input scheme: CasADi::OCPInput (OCP_NUM_IN = 17)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| OCP_T                              | Time grid: ((ns+1) x 1) - default: |
|                                    | linspace(0,t_final,ns+1)           |
+------------------------------------+------------------------------------+
| OCP_LBX                            | States lower bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_UBX                            | States upper bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_X_INIT                         | States initial guess (nx x (ns+1)) |
+------------------------------------+------------------------------------+
| OCP_LBXP                           | States deriatives lower bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_UBXP                           | States deriatives upper bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_XP_INIT                        | States deriatives initial guess    |
|                                    | (nx x (ns+1))                      |
+------------------------------------+------------------------------------+
| OCP_LBU                            | Controls lower bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_UBU                            | Controls upper bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_U_INIT                         | Controls initial guess (nu x ns)   |
+------------------------------------+------------------------------------+
| OCP_LBP                            | Parameters lower bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_UBP                            | Parameters upper bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_P_INIT                         | Parameters initial guess (np x 1)  |
+------------------------------------+------------------------------------+
| OCP_LBH                            | Point constraint lower bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_UBH                            | Point constraint upper bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_LBG                            | Lower bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+
| OCP_UBG                            | Upper bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::OCPOutput (OCP_NUM_OUT = 4)
+------------+--------------------------------------+
|    Name    |             Description              |
+============+======================================+
| OCP_X_OPT  | Optimal state trajectory.            |
+------------+--------------------------------------+
| OCP_U_OPT  | Optimal control trajectory.          |
+------------+--------------------------------------+
| OCP_XP_OPT | Optimal state derivative trajectory. |
+------------+--------------------------------------+
| OCP_P_OPT  | Optimal parameters.                  |
+------------+--------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::OCPS |
|              |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| integrator   | OT_INTEGRATO | GenericType( | An           | CasADi::Opti |
|              | R            | )            | integrator   | malControl:: |
|              |              |              | creator      | MultipleShoo |
|              |              |              | function     | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| integrator_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the          | MultipleShoo |
|              |              |              | integrator   | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver   | OT_NLPSOLVER | GenericType( | An NLPSolver | CasADi::Opti |
|              |              | )            | creator      | malControl:: |
|              |              |              | function     | MultipleShoo |
|              |              |              |              | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| nlp_solver_o | OT_DICTIONAR | GenericType( | Options to   | CasADi::Opti |
| ptions       | Y            | )            | be passed to | malControl:: |
|              |              |              | the NLP      | MultipleShoo |
|              |              |              | Solver       | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_gr | OT_INTEGER   | 20           |              | CasADi::OCPS |
| id_points    |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_pa | OT_INTEGER   | 0            |              | CasADi::OCPS |
| rameters     |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parallelizat | OT_STRING    | GenericType( | Passed on to | CasADi::Opti |
| ion          |              | )            | CasADi::Para | malControl:: |
|              |              |              | llelizer     | MultipleShoo |
|              |              |              |              | tingInternal |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: multiple_shooting_internal.hpp ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::MultipleShootingInternal "";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::~MultipleShootingInternal
"";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::init "

Initialize. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::evaluate "

Evaluate. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getGuess "";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getVariableBounds "";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getConstraintBounds "";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::setOptimalSolution "";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::reportConstraints "";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::iStruct "

Access an input. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::iStruct "

Const access an input. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::oStruct "

Access an output. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::oStruct "

Const access an output. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::print "

Print. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::repr "

Print. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::verbose "

Verbose mode? ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::input "

Access input argument. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::input "

Const access input argument. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::output "

Access input argument. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::output "

Const access input argument. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::OptimalControl::MultipleShootingInternal::log
"

Log the status of the solver. ";

%feature("docstring")  CasADi::OptimalControl::MultipleShootingInternal::log
"

Log the status of the solver, function given. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::hasOption "

check if there is an option str ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::printOptions "

Print options to a stream. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getOption "

get an option value ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::dictionary "

Get the dictionary. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::regRef "

Register a weak reference. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::getCount "

Get the reference count. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")
CasADi::OptimalControl::MultipleShootingInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Multiplication.xml
%feature("docstring") CasADi::Multiplication "

An MX atomic for matrix-matrix product, note that the factor must be
provided transposed.

Joel Andersson

C++ includes: multiplication.hpp ";

%feature("docstring")  CasADi::Multiplication::Multiplication "

Constructor. ";

%feature("docstring")  CasADi::Multiplication::~Multiplication "

Destructor. ";

%feature("docstring")  CasADi::Multiplication::clone "

Clone function. ";

%feature("docstring")  CasADi::Multiplication::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::Multiplication::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::Multiplication::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::Multiplication::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::Multiplication::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::Multiplication::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::Multiplication::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Multiplication::repr "

Print a representation. ";

%feature("docstring")  CasADi::Multiplication::print "

Print a description. ";

%feature("docstring")  CasADi::Multiplication::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::Multiplication::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::Multiplication::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::Multiplication::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::Multiplication::getName "

Get the name. ";

%feature("docstring")  CasADi::Multiplication::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::Multiplication::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::Multiplication::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::Multiplication::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::Multiplication::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::Multiplication::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::Multiplication::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::Multiplication::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::Multiplication::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::Multiplication::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::Multiplication::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::Multiplication::dep "";

%feature("docstring")  CasADi::Multiplication::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::Multiplication::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::Multiplication::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::Multiplication::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::Multiplication::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::Multiplication::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::Multiplication::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::Multiplication::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::Multiplication::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::Multiplication::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::Multiplication::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::Multiplication::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::Multiplication::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::Multiplication::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::Multiplication::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::Multiplication::numel "

Number of elements. ";

%feature("docstring")  CasADi::Multiplication::size "

Get size. ";

%feature("docstring")  CasADi::Multiplication::size1 "

Get size. ";

%feature("docstring")  CasADi::Multiplication::size2 "

Get size. ";

%feature("docstring")  CasADi::Multiplication::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Multiplication::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Multiplication::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Multiplication::init "

Initialize the object. ";

%feature("docstring")  CasADi::Multiplication::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Multiplication::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1MuscodFunction.xml
%feature("docstring") CasADi::MuscodFunction "

CasADi to MUSCOD function interface.

Note: only one instance is allowed for each template instaniation of this
class

C++ includes: muscod_function.hpp ";

%feature("docstring")  CasADi::MuscodFunction::MuscodFunction "

Constructor (implicit typeconversion is allowed) ";

%feature("docstring")  CasADi::MuscodFunction::~MuscodFunction "

Destructor. ";

%feature("docstring")  CasADi::MuscodFunction::MuscodFunction "

Copy constructor. ";

%feature("docstring")  CasADi::MuscodFunction::getPtr "

Get a function pointer to the current instance. ";

%feature("docstring")  CasADi::MuscodFunction::fcn "

Internal functions. ";


// File: classCasADi_1_1MuscodInterface.xml
%feature("docstring") CasADi::MuscodInterface "

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| acc          | OT_REAL      | 0.000        | accuracy of  | CasADi::Musc |
|              |              |              | NLP solution | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| backupfile   | OT_STRING    | \"restart.bin |              | CasADi::Musc |
|              |              | \"            |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| bflag        | OT_INTEGER   | -1           |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| cflag        | OT_INTEGER   | 0            |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| datfile      | OT_STRING    |              |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| eflag        | OT_INTEGER   | 0            | use two      | CasADi::Musc |
|              |              |              | gradient     | odInternal   |
|              |              |              | evaluations  |              |
|              |              |              | per SQP      |              |
|              |              |              | iteration    |              |
+--------------+--------------+--------------+--------------+--------------+
| itol         | OT_REAL      | 0.000        | initial      | CasADi::Musc |
|              |              |              | integration  | odInternal   |
|              |              |              | tolerance    |              |
+--------------+--------------+--------------+--------------+--------------+
| levmar       | OT_REAL      | 0            | Levenberg    | CasADi::Musc |
|              |              |              | Marquardt re | odInternal   |
|              |              |              | gularization |              |
|              |              |              | of hessian   |              |
+--------------+--------------+--------------+--------------+--------------+
| logfile      | OT_STRING    | \"log.txt\"    |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| mf           | OT_INTEGER   | 0            | maximum # of | CasADi::Musc |
|              |              |              | successive   | odInternal   |
|              |              |              | ``fixed''    |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| mi           | OT_INTEGER   | 100          | maximum      | CasADi::Musc |
|              |              |              | total # of   | odInternal   |
|              |              |              | SQP          |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"muscod_prob |              | CasADi::Musc |
|              |              | lem\"         |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| nhtopy       | OT_INTEGER   | 0            | # of         | CasADi::Musc |
|              |              |              | homotopy     | odInternal   |
|              |              |              | steps        |              |
+--------------+--------------+--------------+--------------+--------------+
| ppath        | OT_STRING    | \"PAR\"        |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| resfile      | OT_STRING    | \"muscod_resu |              | CasADi::Musc |
|              |              | lts.txt\"     |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| restartfile  | OT_STRING    | \"restart.bin |              | CasADi::Musc |
|              |              | \"            |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| rfac         | OT_INTEGER   | 0            |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sf           | OT_INTEGER   | 0            | index of     | CasADi::Musc |
|              |              |              | first SQP    | odInternal   |
|              |              |              | iteration    |              |
|              |              |              | using fixed  |              |
|              |              |              | discretizati |              |
|              |              |              | on           |              |
+--------------+--------------+--------------+--------------+--------------+
| sflag        | OT_INTEGER   | 0            | stop after   | CasADi::Musc |
|              |              |              | each SQP     | odInternal   |
|              |              |              | iteration    |              |
+--------------+--------------+--------------+--------------+--------------+
| tol          | OT_REAL      | 0.000        | integration  | CasADi::Musc |
|              |              |              | tolerance    | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| wflag        | OT_INTEGER   | 0            | warm/cool    | CasADi::Musc |
|              |              |              | start using  | odInternal   |
|              |              |              | final data   |              |
|              |              |              | of previous  |              |
|              |              |              | run          |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: muscod_interface.hpp ";

/*  Option Functionality  */

%feature("docstring")  CasADi::MuscodInterface::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::MuscodInterface::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::MuscodInterface::getOption "

get an option value ";

%feature("docstring")  CasADi::MuscodInterface::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::MuscodInterface::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::MuscodInterface::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::MuscodInterface::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::MuscodInterface::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::MuscodInterface::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::MuscodInterface::makeUnique "";

%feature("docstring")  CasADi::MuscodInterface::MuscodInterface "

Default constructor. ";

%feature("docstring")  CasADi::MuscodInterface::MuscodInterface "

Create instance. ";

%feature("docstring")  CasADi::MuscodInterface::checkNode "

Make sure that the pointer points towards a valid object. ";

%feature("docstring")  CasADi::MuscodInterface::solve "

Solve the problem. ";

%feature("docstring")  CasADi::MuscodInterface::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::MuscodInterface::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::MuscodInterface::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::MuscodInterface::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::MuscodInterface::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::MuscodInterface::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::MuscodInterface::clone "

Deep copy. ";

%feature("docstring")  CasADi::MuscodInterface::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::MuscodInterface::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::MuscodInterface::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::MuscodInterface::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::MuscodInterface::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MuscodInterface::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::MuscodInterface::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::MuscodInterface::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::MuscodInterface::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::MuscodInterface::isInit "

Is initialized? ";

%feature("docstring")  CasADi::MuscodInterface::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::MuscodInterface::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::MuscodInterface::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::MuscodInterface::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1MuscodInternal.xml
%feature("docstring") CasADi::MuscodInternal "

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| acc          | OT_REAL      | 0.000        | accuracy of  | CasADi::Musc |
|              |              |              | NLP solution | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| backupfile   | OT_STRING    | \"restart.bin |              | CasADi::Musc |
|              |              | \"            |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| bflag        | OT_INTEGER   | -1           |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| cflag        | OT_INTEGER   | 0            |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| datfile      | OT_STRING    |              |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| eflag        | OT_INTEGER   | 0            | use two      | CasADi::Musc |
|              |              |              | gradient     | odInternal   |
|              |              |              | evaluations  |              |
|              |              |              | per SQP      |              |
|              |              |              | iteration    |              |
+--------------+--------------+--------------+--------------+--------------+
| itol         | OT_REAL      | 0.000        | initial      | CasADi::Musc |
|              |              |              | integration  | odInternal   |
|              |              |              | tolerance    |              |
+--------------+--------------+--------------+--------------+--------------+
| levmar       | OT_REAL      | 0            | Levenberg    | CasADi::Musc |
|              |              |              | Marquardt re | odInternal   |
|              |              |              | gularization |              |
|              |              |              | of hessian   |              |
+--------------+--------------+--------------+--------------+--------------+
| logfile      | OT_STRING    | \"log.txt\"    |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| mf           | OT_INTEGER   | 0            | maximum # of | CasADi::Musc |
|              |              |              | successive   | odInternal   |
|              |              |              | ``fixed''    |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| mi           | OT_INTEGER   | 100          | maximum      | CasADi::Musc |
|              |              |              | total # of   | odInternal   |
|              |              |              | SQP          |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"muscod_prob |              | CasADi::Musc |
|              |              | lem\"         |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| nhtopy       | OT_INTEGER   | 0            | # of         | CasADi::Musc |
|              |              |              | homotopy     | odInternal   |
|              |              |              | steps        |              |
+--------------+--------------+--------------+--------------+--------------+
| ppath        | OT_STRING    | \"PAR\"        |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| resfile      | OT_STRING    | \"muscod_resu |              | CasADi::Musc |
|              |              | lts.txt\"     |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| restartfile  | OT_STRING    | \"restart.bin |              | CasADi::Musc |
|              |              | \"            |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| rfac         | OT_INTEGER   | 0            |              | CasADi::Musc |
|              |              |              |              | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sf           | OT_INTEGER   | 0            | index of     | CasADi::Musc |
|              |              |              | first SQP    | odInternal   |
|              |              |              | iteration    |              |
|              |              |              | using fixed  |              |
|              |              |              | discretizati |              |
|              |              |              | on           |              |
+--------------+--------------+--------------+--------------+--------------+
| sflag        | OT_INTEGER   | 0            | stop after   | CasADi::Musc |
|              |              |              | each SQP     | odInternal   |
|              |              |              | iteration    |              |
+--------------+--------------+--------------+--------------+--------------+
| tol          | OT_REAL      | 0.000        | integration  | CasADi::Musc |
|              |              |              | tolerance    | odInternal   |
+--------------+--------------+--------------+--------------+--------------+
| wflag        | OT_INTEGER   | 0            | warm/cool    | CasADi::Musc |
|              |              |              | start using  | odInternal   |
|              |              |              | final data   |              |
|              |              |              | of previous  |              |
|              |              |              | run          |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: muscod_internal.hpp ";

%feature("docstring")  CasADi::MuscodInternal::~MuscodInternal "

Destructor. ";

%feature("docstring")  CasADi::MuscodInternal::clone "

Clone function. ";

%feature("docstring")  CasADi::MuscodInternal::solve "

Solve the problem. ";

%feature("docstring")  CasADi::MuscodInternal::print "

Solve the problem. ";

%feature("docstring")  CasADi::MuscodInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::MuscodInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::MuscodInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::MuscodInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::MuscodInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::MuscodInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::MuscodInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::MuscodInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::MuscodInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::MuscodInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::MuscodInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::MuscodInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::MuscodInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::MuscodInternal::repr "

Print representation. ";

%feature("docstring")  CasADi::MuscodInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::MuscodInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::MuscodInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::MuscodInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::MuscodInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::MuscodInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::MuscodInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MuscodInternal::init "

Initialize the object. ";

%feature("docstring")  CasADi::MuscodInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::MuscodInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1MX.xml
%feature("docstring") CasADi::MX "

MX - Matrix expression The MX class is used to build up trees made up from
MXNodes. It is a more general graph representation than the scalar
expression, SX, and much less efficient for small objects. On the other
hand, the class allows much more general operations than does SX, in
particular matrix valued operations and calls to arbitrary differentiable
functions.

The MX class is designed to have identical syntax with the Matrix<> template
class, and uses Matrix<double> as its internal representation of the values
at a node. By keeping the syntaxes identical, it is possible to switch from
one class to the other, as well as inlining MX functions to SX functions.

Note that an operation is always \"lazy\", making a matrix multiplication
will create a matrix multiplication node, not perform the actual
multiplication.

Joel Andersson

C++ includes: mx.hpp ";

%feature("docstring")  CasADi::MX::indexed_one_based "

Indexing for interfaced languages.

get a non-zero ";

%feature("docstring")  CasADi::MX::indexed_zero_based "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed_one_based "

get a matrix element ";

%feature("docstring")  CasADi::MX::indexed_zero_based "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed "";

%feature("docstring")  CasADi::MX::indexed_one_based_assignment "

set a non-zero ";

%feature("docstring")  CasADi::MX::indexed_zero_based_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_one_based_assignment "

set a matrix element ";

%feature("docstring")  CasADi::MX::indexed_zero_based_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_zero_based_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::indexed_assignment "";

%feature("docstring")  CasADi::MX::binary "

Create nodes by their ID. ";

%feature("docstring")  CasADi::MX::unary "";

%feature("docstring")  CasADi::MX::scalar_matrix "";

%feature("docstring")  CasADi::MX::matrix_scalar "";

%feature("docstring")  CasADi::MX::matrix_matrix "";

%feature("docstring")  CasADi::MX::sparse "

Sparse matrix of all zeros. ";

%feature("docstring")  CasADi::MX::sparse "";

%feature("docstring")  CasADi::MX::zeros "

Dense matrix of all zeros. ";

%feature("docstring")  CasADi::MX::zeros "";

%feature("docstring")  CasADi::MX::ones "

Matrix of all ones. ";

%feature("docstring")  CasADi::MX::ones "";

%feature("docstring")  CasADi::MX::inf "

create a matrix with all inf ";

%feature("docstring")  CasADi::MX::inf "";

%feature("docstring")  CasADi::MX::nan "

create a matrix with all nan ";

%feature("docstring")  CasADi::MX::nan "";

%feature("docstring")  CasADi::MX::repmat "

create a matrix by repeating an existing matrix ";

%feature("docstring")  CasADi::MX::repmat "";

%feature("docstring")  CasADi::MX::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::MX::makeUnique "";

%feature("docstring")  CasADi::MX::MX "

Default constructor. ";

%feature("docstring")  CasADi::MX::MX "

Construct a symbolic matrix (matrix variable) ";

%feature("docstring")  CasADi::MX::MX "

Construct a symbolic matrix (matrix variable) ";

%feature("docstring")  CasADi::MX::MX "

Construct a symbolic matrix (matrix variable) ";

%feature("docstring")  CasADi::MX::MX "

Construct MX with a given sparsity. ";

%feature("docstring")  CasADi::MX::MX "

Create scalar constant (also implicit type conversion) ";

%feature("docstring")  CasADi::MX::MX "

Copy constructor. ";

%feature("docstring")  CasADi::MX::MX "

Create vector constant (also implicit type conversion) ";

%feature("docstring")  CasADi::MX::MX "

Create sparse matrix constant (also implicit type conversion) ";

%feature("docstring")  CasADi::MX::MX "

Matrix with all zeros. ";

%feature("docstring")  CasADi::MX::MX "

Dense matrix filled with value val. ";

%feature("docstring")  CasADi::MX::~MX "

Destructor. ";

%feature("docstring")  CasADi::MX::at "

Get a non-zero element, with bounds checking. ";

%feature("docstring")  CasADi::MX::at "

Access a non-zero element, with bounds checking.

Access a non-zero element. ";

%feature("docstring")  CasADi::MX::sparsity "

Get the sparsity pattern. ";

%feature("docstring")  CasADi::MX::sparsityRef "

Access the sparsity, make a copy if there are multiple references to it. ";

%feature("docstring")  CasADi::MX::erase "

Erase a submatrix. ";

%feature("docstring")  CasADi::MX::enlarge "

Enlarge matrix Make the matrix larger by inserting empty rows and columns,
keeping the existing non-zeros. ";

%feature("docstring")  CasADi::MX::getDep "

Get the nth dependency as MX. ";

%feature("docstring")  CasADi::MX::getNdeps "

Get the number of dependencies of a binary SX. ";

%feature("docstring")  CasADi::MX::getName "

Get the name. ";

%feature("docstring")  CasADi::MX::getConstant "

Get the constant - only valid when isConstant() is true. ";

%feature("docstring")  CasADi::MX::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::MX::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::MX::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::MX::isDensification "

Check if densification. ";

%feature("docstring")  CasADi::MX::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::MX::isEvaluationOutput "

Check if evaluation output. ";

%feature("docstring")  CasADi::MX::getEvaluationOutput "

Get the index of evaluation output - only valid when isEvaluationoutput() is
true. ";

%feature("docstring")  CasADi::MX::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::MX::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::MX::isMultiplication "

Check if multiplication. ";

%feature("docstring")  CasADi::MX::isCommutative "

Check if commutative operation. ";

%feature("docstring")  CasADi::MX::isIfTest "

Check if if-test. ";

%feature("docstring")  CasADi::MX::isNorm "

Check if norm. ";

%feature("docstring")  CasADi::MX::getFunction "

Get function. ";

%feature("docstring")  CasADi::MX::isBinary "

Is binary operation. ";

%feature("docstring")  CasADi::MX::isUnary "

Is unary operation. ";

%feature("docstring")  CasADi::MX::getOp "

Get operation type. ";

%feature("docstring")  CasADi::MX::__hash__ "

Returns a number that is unique for a given MXNode. If the MX does not point
to any node, 0 is returned. ";

%feature("docstring")  CasADi::MX::getTemp "

Get the temporary variable. ";

%feature("docstring")  CasADi::MX::setTemp "

Set the temporary variable. ";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::getSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::setSub "";

%feature("docstring")  CasADi::MX::getNZ "";

%feature("docstring")  CasADi::MX::getNZ "";

%feature("docstring")  CasADi::MX::getNZ "";

%feature("docstring")  CasADi::MX::getNZ "";

%feature("docstring")  CasADi::MX::setNZ "";

%feature("docstring")  CasADi::MX::setNZ "";

%feature("docstring")  CasADi::MX::setNZ "";

%feature("docstring")  CasADi::MX::setNZ "";

%feature("docstring")  CasADi::MX::append "

Append a matrix to the end. ";

%feature("docstring")  CasADi::MX::dimString "

Get string representation of dimensions. The representation is (nrow x ncol
= numel | size) ";

%feature("docstring")  CasADi::MX::__add__ "";

%feature("docstring")  CasADi::MX::__sub__ "";

%feature("docstring")  CasADi::MX::__mul__ "";

%feature("docstring")  CasADi::MX::__div__ "";

%feature("docstring")  CasADi::MX::__pow__ "";

%feature("docstring")  CasADi::MX::__constpow__ "";

%feature("docstring")  CasADi::MX::__mrdivide__ "";

%feature("docstring")  CasADi::MX::__mpower__ "";

%feature("docstring")  CasADi::MX::mul "";

%feature("docstring")  CasADi::MX::inner_prod "";

%feature("docstring")  CasADi::MX::outer_prod "";

%feature("docstring")  CasADi::MX::constpow "";

%feature("docstring")  CasADi::MX::fmin "";

%feature("docstring")  CasADi::MX::fmax "";

%feature("docstring")  CasADi::MX::printme "";

%feature("docstring")  CasADi::MX::arctan2 "";

%feature("docstring")  CasADi::MX::exp "";

%feature("docstring")  CasADi::MX::log "";

%feature("docstring")  CasADi::MX::log10 "";

%feature("docstring")  CasADi::MX::sqrt "";

%feature("docstring")  CasADi::MX::sin "";

%feature("docstring")  CasADi::MX::cos "";

%feature("docstring")  CasADi::MX::tan "";

%feature("docstring")  CasADi::MX::arcsin "";

%feature("docstring")  CasADi::MX::arccos "";

%feature("docstring")  CasADi::MX::arctan "";

%feature("docstring")  CasADi::MX::floor "";

%feature("docstring")  CasADi::MX::ceil "";

%feature("docstring")  CasADi::MX::fabs "";

%feature("docstring")  CasADi::MX::sign "";

%feature("docstring")  CasADi::MX::erfinv "";

%feature("docstring")  CasADi::MX::erf "";

%feature("docstring")  CasADi::MX::sinh "";

%feature("docstring")  CasADi::MX::cosh "";

%feature("docstring")  CasADi::MX::tanh "";

%feature("docstring")  CasADi::MX::mapping "

Returns the IMatrix that represents the mapping of a Mapping node. ";

%feature("docstring")  CasADi::MX::getDepInd "

Get mapping from the output non-zero index of the dependency index. ";

%feature("docstring")  CasADi::MX::__mldivide__ "

Matrix division from left. ";

%feature("docstring")  CasADi::MX::size "

Get the number of (structural) non-zero elements. ";

%feature("docstring")  CasADi::MX::size "

Get the number if non-zeros for a given sparsity pattern. ";

%feature("docstring")  CasADi::MX::sizeL "

Get the number of non-zeros in the lower triangular half. ";

%feature("docstring")  CasADi::MX::sizeU "

Get get the number of non-zeros in the upper triangular half. ";

%feature("docstring")  CasADi::MX::numel "

Get the number of elements. ";

%feature("docstring")  CasADi::MX::size1 "

Get the first dimension (i.e. n for a n-by-m matrix) ";

%feature("docstring")  CasADi::MX::size2 "

Get the first dimension (i.e. m for a n-by-m matrix) ";

%feature("docstring")  CasADi::MX::shape "

Get the shape. ";

%feature("docstring")  CasADi::MX::empty "

Check if the matrix expression is empty. ";

%feature("docstring")  CasADi::MX::dense "

Check if the matrix expression is dense. ";

%feature("docstring")  CasADi::MX::scalar "

Check if the matrix expression is scalar. ";

%feature("docstring")  CasADi::MX::checkNode "

Assert that the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::MX::clone "

Deep copy. ";

%feature("docstring")  CasADi::MX::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::MX::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::MX::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::MX::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::MX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MX::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::MX::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::MX::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::MX::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::MX::isInit "

Is initialized? ";

%feature("docstring")  CasADi::MX::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::MX::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::MX::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::MX::getDescription "

Return a string with a destription (for SWIG) ";


// File: structCasADi_1_1MXAlgEl.xml
%feature("docstring") CasADi::MXAlgEl "

An elemenent of the algorithm, namely an MX node.

C++ includes: mx_function.hpp ";


// File: classCasADi_1_1MXFunction.xml
%feature("docstring") CasADi::MXFunction "

General function mapping from/to MX.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: mx_function.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::MXFunction::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::MXFunction::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::MXFunction::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::MXFunction::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::MXFunction::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::MXFunction::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::MXFunction::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::MXFunction::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::MXFunction::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::MXFunction::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::MXFunction::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::MXFunction::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::MXFunction::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::MXFunction::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::MXFunction::getOption "

get an option value ";

%feature("docstring")  CasADi::MXFunction::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::MXFunction::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::MXFunction::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::MXFunction::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::MXFunction::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::MXFunction::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::MXFunction::makeUnique "";

%feature("docstring")  CasADi::MXFunction::MXFunction "

Ddefault constructor. ";

%feature("docstring")  CasADi::MXFunction::MXFunction "

Single input, single output. ";

%feature("docstring")  CasADi::MXFunction::MXFunction "

Single input, multiple output. ";

%feature("docstring")  CasADi::MXFunction::MXFunction "

Multiple input, single output. ";

%feature("docstring")  CasADi::MXFunction::MXFunction "

Multiple input, multiple output. ";

%feature("docstring")  CasADi::MXFunction::inputMX "

get function input argument ";

%feature("docstring")  CasADi::MXFunction::outputMX "

get function output argument ";

%feature("docstring")  CasADi::MXFunction::inputsMX "

get function inputs argument ";

%feature("docstring")  CasADi::MXFunction::outputsMX "

get function outputs argument ";

%feature("docstring")  CasADi::MXFunction::algorithm "

Access the algorithm. ";

%feature("docstring")  CasADi::MXFunction::countNodes "

Number of nodes in the algorithm. ";

%feature("docstring")  CasADi::MXFunction::setLiftingFunction "

Set the lifting function. ";

%feature("docstring")  CasADi::MXFunction::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::MXFunction::jac "

Jacobian via source code transformation. ";

%feature("docstring")  CasADi::MXFunction::grad "

Gradient via source code transformation. ";

%feature("docstring")  CasADi::MXFunction::expand "

Expand the matrix valued graph into a scalar valued graph. ";

%feature("docstring")  CasADi::MXFunction::getFree "

Get all the free variables of the function. ";

%feature("docstring")  CasADi::MXFunction::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::MXFunction::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::MXFunction::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::MXFunction::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::MXFunction::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::MXFunction::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::MXFunction::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::MXFunction::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::MXFunction::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::MXFunction::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::MXFunction::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::MXFunction::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::MXFunction::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::MXFunction::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::MXFunction::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::MXFunction::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::MXFunction::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::MXFunction::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::MXFunction::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::MXFunction::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::MXFunction::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::MXFunction::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::MXFunction::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::MXFunction::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::MXFunction::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::MXFunction::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::MXFunction::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::MXFunction::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::MXFunction::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::MXFunction::indexed_one_based "";

%feature("docstring")  CasADi::MXFunction::indexed_zero_based "";

%feature("docstring")  CasADi::MXFunction::input "

Const access input argument. ";

%feature("docstring")  CasADi::MXFunction::input "

Access input argument. ";

%feature("docstring")  CasADi::MXFunction::output "

Const access input argument. ";

%feature("docstring")  CasADi::MXFunction::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::MXFunction::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::MXFunction::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::MXFunction::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunction::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunction::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::MXFunction::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::MXFunction::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunction::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunction::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::MXFunction::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::MXFunction::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::MXFunction::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::MXFunction::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::MXFunction::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::MXFunction::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::MXFunction::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::MXFunction::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::MXFunction::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::MXFunction::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::MXFunction::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::MXFunction::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::MXFunction::clone "

Deep copy. ";

%feature("docstring")  CasADi::MXFunction::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::MXFunction::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::MXFunction::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::MXFunction::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::MXFunction::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MXFunction::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::MXFunction::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::MXFunction::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::MXFunction::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::MXFunction::isInit "

Is initialized? ";

%feature("docstring")  CasADi::MXFunction::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::MXFunction::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::MXFunction::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::MXFunction::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1MXFunctionInternal.xml
%feature("docstring") CasADi::MXFunctionInternal "

Internal node class for MXFunction.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: mx_function_internal.hpp ";

%feature("docstring")  CasADi::MXFunctionInternal::MXFunctionInternal "

Multiple input, multiple output constructor, only to be accessed from
MXFunction, therefore protected. ";

%feature("docstring")  CasADi::MXFunctionInternal::clone "

Make a deep copy. ";

%feature("docstring")  CasADi::MXFunctionInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::MXFunctionInternal::~MXFunctionInternal "

Destructor. ";

%feature("docstring")  CasADi::MXFunctionInternal::evaluate "

Evaluate the algorithm. ";

%feature("docstring")  CasADi::MXFunctionInternal::print "

Print description. ";

%feature("docstring")  CasADi::MXFunctionInternal::init "

Initialize. ";

%feature("docstring")  CasADi::MXFunctionInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization.
";

%feature("docstring")  CasADi::MXFunctionInternal::setLiftingFunction "

Set the lifting function. ";

%feature("docstring")  CasADi::MXFunctionInternal::jac "

Calculate the expression for the jacobian of a number of function outputs
with respect to a number of function inputs, optionally include the function
outputs. ";

%feature("docstring")  CasADi::MXFunctionInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::MXFunctionInternal::jacobian "

Jacobian via source code transformation. ";

%feature("docstring")  CasADi::MXFunctionInternal::collectFree "

Collect the free variables. ";

%feature("docstring")  CasADi::MXFunctionInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::MXFunctionInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::MXFunctionInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::MXFunctionInternal::expand "

Expand the matrix valued graph into a scalar valued graph. ";

%feature("docstring")  CasADi::MXFunctionInternal::updatePointers "";

%feature("docstring")  CasADi::MXFunctionInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::MXFunctionInternal::spEvaluate "

Propagate a sparsity pattern through the algorithm. ";

%feature("docstring")  CasADi::MXFunctionInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::MXFunctionInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::MXFunctionInternal::jacGen "

Construct a complete Jacobian by compression. ";

%feature("docstring")  CasADi::MXFunctionInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::MXFunctionInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::MXFunctionInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::MXFunctionInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::MXFunctionInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::MXFunctionInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::MXFunctionInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::MXFunctionInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::MXFunctionInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::MXFunctionInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::MXFunctionInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::MXFunctionInternal::repr "

Print. ";

%feature("docstring")  CasADi::MXFunctionInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::MXFunctionInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::MXFunctionInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::MXFunctionInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::MXFunctionInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::MXFunctionInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::MXFunctionInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::MXFunctionInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::MXFunctionInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::MXFunctionInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunctionInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunctionInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::MXFunctionInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::MXFunctionInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunctionInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::MXFunctionInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::MXFunctionInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::MXFunctionInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::MXFunctionInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::MXFunctionInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::MXFunctionInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::MXFunctionInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::MXFunctionInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::MXFunctionInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::MXFunctionInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::MXFunctionInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::MXFunctionInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::MXFunctionInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::MXFunctionInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::MXFunctionInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::MXFunctionInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::MXFunctionInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::MXFunctionInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::MXFunctionInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::MXFunctionInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::MXFunctionInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::MXFunctionInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::MXFunctionInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::MXFunctionInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::MXFunctionInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::MXFunctionInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::MXFunctionInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::MXFunctionInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::MXFunctionInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::MXFunctionInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::MXFunctionInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::MXFunctionInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::MXFunctionInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MXFunctionInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::MXFunctionInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1MXNode.xml
%feature("docstring") CasADi::MXNode "

Node class for MX objects.

Joel Andersson

C++ includes: mx_node.hpp ";

%feature("docstring")  CasADi::MXNode::MXNode "

Constructor. ";

%feature("docstring")  CasADi::MXNode::~MXNode "

Destructor. ";

%feature("docstring")  CasADi::MXNode::clone "

Clone function. ";

%feature("docstring")  CasADi::MXNode::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::MXNode::repr "

Print a representation. ";

%feature("docstring")  CasADi::MXNode::print "

Print a description. ";

%feature("docstring")  CasADi::MXNode::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::MXNode::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::MXNode::evaluateD "

Evaluate the function. ";

%feature("docstring")  CasADi::MXNode::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::MXNode::evaluateSX "

Evaluate symbolically ( SX) ";

%feature("docstring")  CasADi::MXNode::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::MXNode::evaluateMX "

Evaluate symbolically ( MX) ";

%feature("docstring")  CasADi::MXNode::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::MXNode::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::MXNode::getName "

Get the name. ";

%feature("docstring")  CasADi::MXNode::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::MXNode::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::MXNode::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::MXNode::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::MXNode::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::MXNode::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::MXNode::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::MXNode::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::MXNode::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::MXNode::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::MXNode::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::MXNode::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::MXNode::dep "";

%feature("docstring")  CasADi::MXNode::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::MXNode::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::MXNode::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::MXNode::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::MXNode::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::MXNode::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::MXNode::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::MXNode::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::MXNode::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::MXNode::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::MXNode::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::MXNode::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::MXNode::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::MXNode::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::MXNode::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::MXNode::numel "

Number of elements. ";

%feature("docstring")  CasADi::MXNode::size "

Get size. ";

%feature("docstring")  CasADi::MXNode::size1 "

Get size. ";

%feature("docstring")  CasADi::MXNode::size2 "

Get size. ";

%feature("docstring")  CasADi::MXNode::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::MXNode::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::MXNode::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::MXNode::init "

Initialize the object. ";

%feature("docstring")  CasADi::MXNode::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::MXNode::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1mysortclass.xml
%feature("docstring") CasADi::mysortclass "

A helper class to use stl::sort in OptionsFunctionalityNode::getBestMatches.
";


// File: classCasADi_1_1NanSX.xml
%feature("docstring") CasADi::NanSX "

Represents a not-a-number SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::NanSX::isInteger "";

%feature("docstring")  CasADi::NanSX::isSymbolic "";

%feature("docstring")  CasADi::NanSX::hasDep "";

%feature("docstring")  CasADi::NanSX::isZero "";

%feature("docstring")  CasADi::NanSX::isOne "";

%feature("docstring")  CasADi::NanSX::isMinusOne "";

%feature("docstring")  CasADi::NanSX::isInf "";

%feature("docstring")  CasADi::NanSX::isMinusInf "";

%feature("docstring")  CasADi::NanSX::getIntValue "";

%feature("docstring")  CasADi::NanSX::NanSX "";

%feature("docstring")  CasADi::NanSX::~NanSX "";

%feature("docstring")  CasADi::NanSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::NanSX::isNan "

Properties. ";

%feature("docstring")  CasADi::NanSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::NanSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::NanSX::print "

print ";

%feature("docstring")  CasADi::NanSX::getName "";

%feature("docstring")  CasADi::NanSX::isEqual "

comparison ";

%feature("docstring")  CasADi::NanSX::isEqual "

comparison ";

%feature("docstring")  CasADi::NanSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::NanSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::NanSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::NanSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::NanSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::NanSX::marked "";

%feature("docstring")  CasADi::NanSX::mark "";


// File: classCasADi_1_1NLPSolver.xml
%feature("docstring") CasADi::NLPSolver "

NLPSolver.

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

Joel Andersson

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: nlp_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::NLPSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::NLPSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::NLPSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::NLPSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::NLPSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::NLPSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::NLPSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::NLPSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::NLPSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::NLPSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::NLPSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::NLPSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::NLPSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::NLPSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::NLPSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::NLPSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::NLPSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::NLPSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::NLPSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::NLPSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::NLPSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::NLPSolver::makeUnique "";

%feature("docstring")  CasADi::NLPSolver::NLPSolver "

Default constructor. ";

%feature("docstring")  CasADi::NLPSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::NLPSolver::reportConstraints "";

%feature("docstring")  CasADi::NLPSolver::getReportConstraints "";

%feature("docstring")  CasADi::NLPSolver::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::NLPSolver::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::NLPSolver::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::NLPSolver::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::NLPSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::NLPSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::NLPSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::NLPSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::NLPSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::NLPSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::NLPSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::NLPSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::NLPSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::NLPSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::NLPSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::NLPSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::NLPSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::NLPSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::NLPSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::NLPSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::NLPSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::NLPSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::NLPSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::NLPSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::NLPSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::NLPSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::NLPSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::NLPSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::NLPSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::NLPSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::NLPSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::NLPSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::NLPSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::NLPSolver::indexed_one_based "";

%feature("docstring")  CasADi::NLPSolver::indexed_zero_based "";

%feature("docstring")  CasADi::NLPSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::NLPSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::NLPSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::NLPSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::NLPSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::NLPSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::NLPSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::NLPSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::NLPSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::NLPSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::NLPSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::NLPSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::NLPSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::NLPSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::NLPSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::NLPSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::NLPSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::NLPSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::NLPSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::NLPSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::NLPSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::NLPSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::NLPSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::NLPSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::NLPSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::NLPSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::NLPSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::NLPSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::NLPSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::NLPSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::NLPSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::NLPSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::NLPSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::NLPSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::NLPSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::NLPSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1NLPSolverInternal.xml
%feature("docstring") CasADi::NLPSolverInternal "

NLP solver storage class.

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

Joel Andersson

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: nlp_solver_internal.hpp ";

%feature("docstring")  CasADi::NLPSolverInternal::NLPSolverInternal "";

%feature("docstring")  CasADi::NLPSolverInternal::~NLPSolverInternal "";

%feature("docstring")  CasADi::NLPSolverInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::NLPSolverInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::NLPSolverInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::NLPSolverInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::NLPSolverInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::NLPSolverInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::NLPSolverInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::NLPSolverInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::NLPSolverInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::NLPSolverInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::NLPSolverInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::NLPSolverInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::NLPSolverInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::NLPSolverInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::NLPSolverInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::NLPSolverInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::NLPSolverInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::NLPSolverInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::NLPSolverInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::NLPSolverInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::NLPSolverInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::NLPSolverInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::NLPSolverInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::NLPSolverInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::NLPSolverInternal::print "

Print. ";

%feature("docstring")  CasADi::NLPSolverInternal::repr "

Print. ";

%feature("docstring")  CasADi::NLPSolverInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::NLPSolverInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::NLPSolverInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::NLPSolverInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::NLPSolverInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::NLPSolverInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::NLPSolverInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::NLPSolverInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::NLPSolverInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::NLPSolverInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolverInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolverInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::NLPSolverInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::NLPSolverInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolverInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::NLPSolverInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::NLPSolverInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::NLPSolverInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::NLPSolverInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::NLPSolverInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::NLPSolverInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::NLPSolverInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::NLPSolverInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::NLPSolverInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::NLPSolverInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::NLPSolverInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::NLPSolverInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::NLPSolverInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::NLPSolverInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::NLPSolverInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::NLPSolverInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::NLPSolverInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::NLPSolverInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::NLPSolverInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::NLPSolverInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::NLPSolverInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::NLPSolverInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::NLPSolverInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::NLPSolverInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::NLPSolverInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::NLPSolverInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::NLPSolverInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::NLPSolverInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::NLPSolverInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::NLPSolverInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::NLPSolverInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::NLPSolverInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::NLPSolverInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::NLPSolverInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::NLPSolverInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::NLPSolverInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::NLPSolverInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::NLPSolverInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1NonZeros.xml
%feature("docstring") CasADi::NonZeros "

Access to a set of nonzeros.

NonZeros class for Matrix NonZeros is the return type for operator[] of the
Matrix class, it allows access to the value as well as changing the parent
object Joel Andersson

C++ includes: nonzeros.hpp ";

%feature("docstring")  CasADi::NonZeros::NonZeros "

Constructor. ";


// File: classCasADi_1_1NonzerosNonzerosOp.xml
%feature("docstring") CasADi::NonzerosNonzerosOp "

A matrix-matrix binary operation with matching nonzeros.

C++ includes: binary_mx.hpp ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::NonzerosNonzerosOp "

Constructor. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::~NonzerosNonzerosOp "

Destructor. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::clone "

Clone function. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateGen "

Evaluate the function (template) ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::repr "

Print a representation. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::print "

Print a description. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::getName "

Get the name. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::dep "";

%feature("docstring")  CasADi::NonzerosNonzerosOp::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::numel "

Number of elements. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::size "

Get size. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::size1 "

Get size. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::size2 "

Get size. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::init "

Initialize the object. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::NonzerosNonzerosOp::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1NonzerosScalarOp.xml
%feature("docstring") CasADi::NonzerosScalarOp "

A matrix-scalar binary operation where one loops only over nonzeros of the
matrix.

C++ includes: binary_mx.hpp ";

%feature("docstring")  CasADi::NonzerosScalarOp::NonzerosScalarOp "

Constructor. ";

%feature("docstring")  CasADi::NonzerosScalarOp::~NonzerosScalarOp "

Destructor. ";

%feature("docstring")  CasADi::NonzerosScalarOp::clone "

Clone function. ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::NonzerosScalarOp::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateGen "

Evaluate the function (template) ";

%feature("docstring")  CasADi::NonzerosScalarOp::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::NonzerosScalarOp::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::NonzerosScalarOp::repr "

Print a representation. ";

%feature("docstring")  CasADi::NonzerosScalarOp::print "

Print a description. ";

%feature("docstring")  CasADi::NonzerosScalarOp::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::NonzerosScalarOp::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::NonzerosScalarOp::getName "

Get the name. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::NonzerosScalarOp::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::NonzerosScalarOp::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::NonzerosScalarOp::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::NonzerosScalarOp::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::NonzerosScalarOp::dep "";

%feature("docstring")  CasADi::NonzerosScalarOp::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::NonzerosScalarOp::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::NonzerosScalarOp::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::NonzerosScalarOp::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::NonzerosScalarOp::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::NonzerosScalarOp::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::NonzerosScalarOp::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::NonzerosScalarOp::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::NonzerosScalarOp::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::NonzerosScalarOp::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::NonzerosScalarOp::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::NonzerosScalarOp::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::NonzerosScalarOp::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::NonzerosScalarOp::numel "

Number of elements. ";

%feature("docstring")  CasADi::NonzerosScalarOp::size "

Get size. ";

%feature("docstring")  CasADi::NonzerosScalarOp::size1 "

Get size. ";

%feature("docstring")  CasADi::NonzerosScalarOp::size2 "

Get size. ";

%feature("docstring")  CasADi::NonzerosScalarOp::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::NonzerosScalarOp::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::NonzerosScalarOp::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::NonzerosScalarOp::init "

Initialize the object. ";

%feature("docstring")  CasADi::NonzerosScalarOp::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::NonzerosScalarOp::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Norm.xml
%feature("docstring") CasADi::Norm "

Matrix and vector norms This base class and the derived classes represent
matrix and vector norms that are intended to be used when formulating convex
optimization problems. Note that they are not intended to be evaluated
numerically or differentiated, instead the idea is that they should be
eliminated from the computational graph during a reformulation (cf. CVX
software).

Joel Andersson

C++ includes: norm.hpp ";

%feature("docstring")  CasADi::Norm::Norm "

Constructor. ";

%feature("docstring")  CasADi::Norm::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::Norm::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::Norm::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::Norm::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::Norm::clone "

Clone function. ";

%feature("docstring")  CasADi::Norm::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Norm::repr "

Print a representation. ";

%feature("docstring")  CasADi::Norm::print "

Print a description. ";

%feature("docstring")  CasADi::Norm::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::Norm::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::Norm::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::Norm::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::Norm::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::Norm::getName "

Get the name. ";

%feature("docstring")  CasADi::Norm::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::Norm::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::Norm::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::Norm::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::Norm::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::Norm::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::Norm::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::Norm::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::Norm::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::Norm::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::Norm::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::Norm::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::Norm::dep "";

%feature("docstring")  CasADi::Norm::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::Norm::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::Norm::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::Norm::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::Norm::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::Norm::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::Norm::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::Norm::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::Norm::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::Norm::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::Norm::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::Norm::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::Norm::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::Norm::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::Norm::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::Norm::numel "

Number of elements. ";

%feature("docstring")  CasADi::Norm::size "

Get size. ";

%feature("docstring")  CasADi::Norm::size1 "

Get size. ";

%feature("docstring")  CasADi::Norm::size2 "

Get size. ";

%feature("docstring")  CasADi::Norm::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Norm::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Norm::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Norm::init "

Initialize the object. ";

%feature("docstring")  CasADi::Norm::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Norm::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Norm1.xml
%feature("docstring") CasADi::Norm1 "

1-norm

Joel Andersson

C++ includes: norm.hpp ";

%feature("docstring")  CasADi::Norm1::Norm1 "

Constructor. ";

%feature("docstring")  CasADi::Norm1::~Norm1 "

Destructor. ";

%feature("docstring")  CasADi::Norm1::clone "

Clone function. ";

%feature("docstring")  CasADi::Norm1::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::Norm1::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::Norm1::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::Norm1::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::Norm1::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::Norm1::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::Norm1::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::Norm1::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::Norm1::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Norm1::repr "

Print a representation. ";

%feature("docstring")  CasADi::Norm1::print "

Print a description. ";

%feature("docstring")  CasADi::Norm1::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::Norm1::getName "

Get the name. ";

%feature("docstring")  CasADi::Norm1::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::Norm1::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::Norm1::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::Norm1::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::Norm1::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::Norm1::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::Norm1::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::Norm1::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::Norm1::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::Norm1::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::Norm1::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::Norm1::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::Norm1::dep "";

%feature("docstring")  CasADi::Norm1::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::Norm1::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::Norm1::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::Norm1::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::Norm1::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::Norm1::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::Norm1::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::Norm1::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::Norm1::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::Norm1::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::Norm1::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::Norm1::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::Norm1::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::Norm1::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::Norm1::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::Norm1::numel "

Number of elements. ";

%feature("docstring")  CasADi::Norm1::size "

Get size. ";

%feature("docstring")  CasADi::Norm1::size1 "

Get size. ";

%feature("docstring")  CasADi::Norm1::size2 "

Get size. ";

%feature("docstring")  CasADi::Norm1::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Norm1::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Norm1::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Norm1::init "

Initialize the object. ";

%feature("docstring")  CasADi::Norm1::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Norm1::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Norm2.xml
%feature("docstring") CasADi::Norm2 "

Represents a 2-norm.

Joel Andersson

C++ includes: norm.hpp ";

%feature("docstring")  CasADi::Norm2::Norm2 "

Constructor. ";

%feature("docstring")  CasADi::Norm2::~Norm2 "

Destructor. ";

%feature("docstring")  CasADi::Norm2::clone "

Clone function. ";

%feature("docstring")  CasADi::Norm2::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::Norm2::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::Norm2::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::Norm2::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::Norm2::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::Norm2::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::Norm2::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::Norm2::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::Norm2::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Norm2::repr "

Print a representation. ";

%feature("docstring")  CasADi::Norm2::print "

Print a description. ";

%feature("docstring")  CasADi::Norm2::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::Norm2::getName "

Get the name. ";

%feature("docstring")  CasADi::Norm2::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::Norm2::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::Norm2::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::Norm2::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::Norm2::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::Norm2::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::Norm2::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::Norm2::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::Norm2::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::Norm2::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::Norm2::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::Norm2::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::Norm2::dep "";

%feature("docstring")  CasADi::Norm2::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::Norm2::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::Norm2::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::Norm2::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::Norm2::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::Norm2::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::Norm2::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::Norm2::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::Norm2::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::Norm2::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::Norm2::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::Norm2::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::Norm2::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::Norm2::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::Norm2::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::Norm2::numel "

Number of elements. ";

%feature("docstring")  CasADi::Norm2::size "

Get size. ";

%feature("docstring")  CasADi::Norm2::size1 "

Get size. ";

%feature("docstring")  CasADi::Norm2::size2 "

Get size. ";

%feature("docstring")  CasADi::Norm2::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Norm2::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Norm2::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Norm2::init "

Initialize the object. ";

%feature("docstring")  CasADi::Norm2::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Norm2::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1NormF.xml
%feature("docstring") CasADi::NormF "

Represents a Frobenius norm.

Joel Andersson

C++ includes: norm.hpp ";

%feature("docstring")  CasADi::NormF::NormF "

Constructor. ";

%feature("docstring")  CasADi::NormF::~NormF "

Destructor. ";

%feature("docstring")  CasADi::NormF::clone "

Clone function. ";

%feature("docstring")  CasADi::NormF::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::NormF::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::NormF::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::NormF::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::NormF::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::NormF::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::NormF::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::NormF::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::NormF::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::NormF::repr "

Print a representation. ";

%feature("docstring")  CasADi::NormF::print "

Print a description. ";

%feature("docstring")  CasADi::NormF::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::NormF::getName "

Get the name. ";

%feature("docstring")  CasADi::NormF::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::NormF::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::NormF::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::NormF::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::NormF::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::NormF::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::NormF::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::NormF::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::NormF::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::NormF::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::NormF::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::NormF::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::NormF::dep "";

%feature("docstring")  CasADi::NormF::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::NormF::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::NormF::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::NormF::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::NormF::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::NormF::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::NormF::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::NormF::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::NormF::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::NormF::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::NormF::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::NormF::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::NormF::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::NormF::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::NormF::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::NormF::numel "

Number of elements. ";

%feature("docstring")  CasADi::NormF::size "

Get size. ";

%feature("docstring")  CasADi::NormF::size1 "

Get size. ";

%feature("docstring")  CasADi::NormF::size2 "

Get size. ";

%feature("docstring")  CasADi::NormF::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::NormF::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::NormF::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::NormF::init "

Initialize the object. ";

%feature("docstring")  CasADi::NormF::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::NormF::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1NormInf.xml
%feature("docstring") CasADi::NormInf "

Represents an infinity-norm operation on a MX.

Joel Andersson

C++ includes: norm.hpp ";

%feature("docstring")  CasADi::NormInf::NormInf "

Constructor. ";

%feature("docstring")  CasADi::NormInf::~NormInf "

Destructor. ";

%feature("docstring")  CasADi::NormInf::clone "

Clone function. ";

%feature("docstring")  CasADi::NormInf::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::NormInf::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::NormInf::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::NormInf::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::NormInf::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::NormInf::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::NormInf::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::NormInf::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::NormInf::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::NormInf::repr "

Print a representation. ";

%feature("docstring")  CasADi::NormInf::print "

Print a description. ";

%feature("docstring")  CasADi::NormInf::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::NormInf::getName "

Get the name. ";

%feature("docstring")  CasADi::NormInf::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::NormInf::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::NormInf::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::NormInf::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::NormInf::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::NormInf::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::NormInf::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::NormInf::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::NormInf::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::NormInf::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::NormInf::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::NormInf::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::NormInf::dep "";

%feature("docstring")  CasADi::NormInf::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::NormInf::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::NormInf::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::NormInf::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::NormInf::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::NormInf::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::NormInf::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::NormInf::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::NormInf::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::NormInf::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::NormInf::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::NormInf::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::NormInf::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::NormInf::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::NormInf::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::NormInf::numel "

Number of elements. ";

%feature("docstring")  CasADi::NormInf::size "

Get size. ";

%feature("docstring")  CasADi::NormInf::size1 "

Get size. ";

%feature("docstring")  CasADi::NormInf::size2 "

Get size. ";

%feature("docstring")  CasADi::NormInf::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::NormInf::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::NormInf::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::NormInf::init "

Initialize the object. ";

%feature("docstring")  CasADi::NormInf::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::NormInf::assertInit "

Assert that the object has been initialized. ";


// File: classstd_1_1numeric__limits_3_01CasADi_1_1SX_01_4.xml
%feature("docstring") std::numeric_limits< CasADi::SX > " C++ includes:
sx.hpp ";


// File: classCasADi_1_1OCPSolver.xml
%feature("docstring") CasADi::OCPSolver "

Base class for OCP solvers.

Joel Andersson

>Input scheme: CasADi::OCPInput (OCP_NUM_IN = 17)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| OCP_T                              | Time grid: ((ns+1) x 1) - default: |
|                                    | linspace(0,t_final,ns+1)           |
+------------------------------------+------------------------------------+
| OCP_LBX                            | States lower bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_UBX                            | States upper bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_X_INIT                         | States initial guess (nx x (ns+1)) |
+------------------------------------+------------------------------------+
| OCP_LBXP                           | States deriatives lower bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_UBXP                           | States deriatives upper bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_XP_INIT                        | States deriatives initial guess    |
|                                    | (nx x (ns+1))                      |
+------------------------------------+------------------------------------+
| OCP_LBU                            | Controls lower bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_UBU                            | Controls upper bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_U_INIT                         | Controls initial guess (nu x ns)   |
+------------------------------------+------------------------------------+
| OCP_LBP                            | Parameters lower bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_UBP                            | Parameters upper bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_P_INIT                         | Parameters initial guess (np x 1)  |
+------------------------------------+------------------------------------+
| OCP_LBH                            | Point constraint lower bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_UBH                            | Point constraint upper bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_LBG                            | Lower bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+
| OCP_UBG                            | Upper bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::OCPOutput (OCP_NUM_OUT = 4)
+------------+--------------------------------------+
|    Name    |             Description              |
+============+======================================+
| OCP_X_OPT  | Optimal state trajectory.            |
+------------+--------------------------------------+
| OCP_U_OPT  | Optimal control trajectory.          |
+------------+--------------------------------------+
| OCP_XP_OPT | Optimal state derivative trajectory. |
+------------+--------------------------------------+
| OCP_P_OPT  | Optimal parameters.                  |
+------------+--------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::OCPS |
|              |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_gr | OT_INTEGER   | 20           |              | CasADi::OCPS |
| id_points    |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_pa | OT_INTEGER   | 0            |              | CasADi::OCPS |
| rameters     |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ocp_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::OCPSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::OCPSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::OCPSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::OCPSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::OCPSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::OCPSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::OCPSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::OCPSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::OCPSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::OCPSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::OCPSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::OCPSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::OCPSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OCPSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OCPSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::OCPSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::OCPSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::OCPSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::OCPSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::OCPSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::OCPSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::OCPSolver::makeUnique "";

%feature("docstring")  CasADi::OCPSolver::OCPSolver "

Default constructor. ";

%feature("docstring")  CasADi::OCPSolver::getFfcn "";

%feature("docstring")  CasADi::OCPSolver::getMfcn "";

%feature("docstring")  CasADi::OCPSolver::getCfcn "";

%feature("docstring")  CasADi::OCPSolver::getRfcn "";

%feature("docstring")  CasADi::OCPSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::OCPSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::OCPSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::OCPSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::OCPSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::OCPSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::OCPSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::OCPSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::OCPSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::OCPSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::OCPSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::OCPSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::OCPSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::OCPSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::OCPSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::OCPSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::OCPSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::OCPSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::OCPSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::OCPSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OCPSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OCPSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::OCPSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::OCPSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OCPSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::OCPSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::OCPSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::OCPSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::OCPSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::OCPSolver::indexed_one_based "";

%feature("docstring")  CasADi::OCPSolver::indexed_zero_based "";

%feature("docstring")  CasADi::OCPSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::OCPSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::OCPSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::OCPSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::OCPSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::OCPSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::OCPSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::OCPSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::OCPSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::OCPSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OCPSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OCPSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::OCPSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::OCPSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OCPSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OCPSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::OCPSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::OCPSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::OCPSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::OCPSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::OCPSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::OCPSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::OCPSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::OCPSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::OCPSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::OCPSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::OCPSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::OCPSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OCPSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::OCPSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::OCPSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::OCPSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::OCPSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::OCPSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::OCPSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::OCPSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::OCPSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1OCPSolverInternal.xml
%feature("docstring") CasADi::OCPSolverInternal "

Internal node class for OCPSolver.

Joel Andersson

>Input scheme: CasADi::OCPInput (OCP_NUM_IN = 17)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| OCP_T                              | Time grid: ((ns+1) x 1) - default: |
|                                    | linspace(0,t_final,ns+1)           |
+------------------------------------+------------------------------------+
| OCP_LBX                            | States lower bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_UBX                            | States upper bounds (nx x (ns+1))  |
+------------------------------------+------------------------------------+
| OCP_X_INIT                         | States initial guess (nx x (ns+1)) |
+------------------------------------+------------------------------------+
| OCP_LBXP                           | States deriatives lower bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_UBXP                           | States deriatives upper bounds (nx |
|                                    | x (ns+1))                          |
+------------------------------------+------------------------------------+
| OCP_XP_INIT                        | States deriatives initial guess    |
|                                    | (nx x (ns+1))                      |
+------------------------------------+------------------------------------+
| OCP_LBU                            | Controls lower bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_UBU                            | Controls upper bounds (nu x ns)    |
+------------------------------------+------------------------------------+
| OCP_U_INIT                         | Controls initial guess (nu x ns)   |
+------------------------------------+------------------------------------+
| OCP_LBP                            | Parameters lower bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_UBP                            | Parameters upper bounds (np x 1)   |
+------------------------------------+------------------------------------+
| OCP_P_INIT                         | Parameters initial guess (np x 1)  |
+------------------------------------+------------------------------------+
| OCP_LBH                            | Point constraint lower bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_UBH                            | Point constraint upper bound (nh x |
|                                    | (ns+1))                            |
+------------------------------------+------------------------------------+
| OCP_LBG                            | Lower bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+
| OCP_UBG                            | Upper bound for the coupling       |
|                                    | constraints.                       |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::OCPOutput (OCP_NUM_OUT = 4)
+------------+--------------------------------------+
|    Name    |             Description              |
+============+======================================+
| OCP_X_OPT  | Optimal state trajectory.            |
+------------+--------------------------------------+
| OCP_U_OPT  | Optimal control trajectory.          |
+------------+--------------------------------------+
| OCP_XP_OPT | Optimal state derivative trajectory. |
+------------+--------------------------------------+
| OCP_P_OPT  | Optimal parameters.                  |
+------------+--------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| final_time   | OT_REAL      | 1            |              | CasADi::OCPS |
|              |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_gr | OT_INTEGER   | 20           |              | CasADi::OCPS |
| id_points    |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| number_of_pa | OT_INTEGER   | 0            |              | CasADi::OCPS |
| rameters     |              |              |              | olverInterna |
|              |              |              |              | l            |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ocp_solver_internal.hpp ";

%feature("docstring")  CasADi::OCPSolverInternal::OCPSolverInternal "

Constructor.

Parameters:
-----------

ffcn:  Continuous time dynamics

mfcn:  Mayer term

cfcn:  Path constraints

rfcn:  Initial value constraints

The signatures (number and order of inputs/outputs) of these functions are
not restricted at this stage.

Only ffcn has a general requirement for input interface: { DAE_T, DAE_Y,
DAE_P, DAE_YDOT } from CasADi::DAEInput

For example:

When using the ACADO interface, all functions should have the same input
interface: CasADi::ACADO_FCN_Input  When using MultipleShooting, mfcn_ is a
single input -> single output mapping ";

%feature("docstring")  CasADi::OCPSolverInternal::~OCPSolverInternal "

Destructor. ";

%feature("docstring")  CasADi::OCPSolverInternal::init "

Initialize. ";

%feature("docstring")  CasADi::OCPSolverInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::OCPSolverInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::OCPSolverInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::OCPSolverInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::OCPSolverInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::OCPSolverInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::OCPSolverInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::OCPSolverInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::OCPSolverInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::OCPSolverInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::OCPSolverInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::OCPSolverInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::OCPSolverInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::OCPSolverInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::OCPSolverInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::OCPSolverInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::OCPSolverInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::OCPSolverInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::OCPSolverInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::OCPSolverInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::OCPSolverInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::OCPSolverInternal::print "

Print. ";

%feature("docstring")  CasADi::OCPSolverInternal::repr "

Print. ";

%feature("docstring")  CasADi::OCPSolverInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::OCPSolverInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::OCPSolverInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::OCPSolverInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::OCPSolverInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::OCPSolverInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::OCPSolverInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::OCPSolverInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::OCPSolverInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::OCPSolverInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolverInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolverInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::OCPSolverInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::OCPSolverInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolverInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::OCPSolverInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::OCPSolverInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::OCPSolverInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::OCPSolverInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::OCPSolverInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::OCPSolverInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::OCPSolverInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OCPSolverInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::OCPSolverInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::OCPSolverInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::OCPSolverInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::OCPSolverInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::OCPSolverInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::OCPSolverInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::OCPSolverInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::OCPSolverInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::OCPSolverInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::OCPSolverInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::OCPSolverInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::OCPSolverInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::OCPSolverInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::OCPSolverInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::OCPSolverInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::OCPSolverInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::OCPSolverInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::OCPSolverInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::OCPSolverInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::OCPSolverInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::OCPSolverInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::OCPSolverInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::OCPSolverInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::OCPSolverInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::OCPSolverInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::OCPSolverInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::OCPSolverInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::OCPSolverInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OCPSolverInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::OCPSolverInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1OneSX.xml
%feature("docstring") CasADi::OneSX "

Represents a one SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::OneSX::isSymbolic "";

%feature("docstring")  CasADi::OneSX::hasDep "";

%feature("docstring")  CasADi::OneSX::isZero "";

%feature("docstring")  CasADi::OneSX::isMinusOne "";

%feature("docstring")  CasADi::OneSX::isNan "";

%feature("docstring")  CasADi::OneSX::isInf "";

%feature("docstring")  CasADi::OneSX::isMinusInf "";

%feature("docstring")  CasADi::OneSX::OneSX "";

%feature("docstring")  CasADi::OneSX::~OneSX "";

%feature("docstring")  CasADi::OneSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::OneSX::getIntValue "";

%feature("docstring")  CasADi::OneSX::isInteger "

Properties. ";

%feature("docstring")  CasADi::OneSX::isOne "";

%feature("docstring")  CasADi::OneSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::OneSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::OneSX::print "

print ";

%feature("docstring")  CasADi::OneSX::getName "";

%feature("docstring")  CasADi::OneSX::isEqual "

comparison ";

%feature("docstring")  CasADi::OneSX::isEqual "

comparison ";

%feature("docstring")  CasADi::OneSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::OneSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::OneSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::OneSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::OneSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::OneSX::marked "";

%feature("docstring")  CasADi::OneSX::mark "";


// File: classCasADi_1_1Interfaces_1_1OOQPInternal.xml
%feature("docstring") CasADi::Interfaces::OOQPInternal "

Internal class for OOQPSolver.

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| artol        | OT_REAL      | 0.000        | tolerance as | CasADi::Inte |
|              |              |              | provided     | rfaces::OOQP |
|              |              |              | with         | Internal     |
|              |              |              | setArTol to  |              |
|              |              |              | OOQP         |              |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| mutol        | OT_REAL      | 0.000        | tolerance as | CasADi::Inte |
|              |              |              | provided     | rfaces::OOQP |
|              |              |              | with         | Internal     |
|              |              |              | setMuTol to  |              |
|              |              |              | OOQP         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_INTEGER   | 0            | Print level. | CasADi::Inte |
|              |              |              | OOQP         | rfaces::OOQP |
|              |              |              | listends to  | Internal     |
|              |              |              | print_level  |              |
|              |              |              | 0, 10 and    |              |
|              |              |              | 100          |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ooqp_internal.hpp ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::OOQPInternal "

Constructor. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::clone "

Clone. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::OOQPInternal "

Create a new Solver. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::~OOQPInternal "

Destructor. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::init "

Initialize. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::allocate "

Allocate Because constraints after initialization, we cannot allocate a
Solver during init. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::solve "";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::repr "

Print. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getNumScalarOutputs
"

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::OOQPInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::OOQPInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1OOQPSolver.xml
%feature("docstring") CasADi::Interfaces::OOQPSolver "

OOQP Solver for quadratic programming:

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

The current implementation assumes that OOQP is configured with the MA27
sparse linear solver.

NOTE: when doing multiple calls to evaluate(), check if you need to
reInit();

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| artol        | OT_REAL      | 0.000        | tolerance as | CasADi::Inte |
|              |              |              | provided     | rfaces::OOQP |
|              |              |              | with         | Internal     |
|              |              |              | setArTol to  |              |
|              |              |              | OOQP         |              |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| mutol        | OT_REAL      | 0.000        | tolerance as | CasADi::Inte |
|              |              |              | provided     | rfaces::OOQP |
|              |              |              | with         | Internal     |
|              |              |              | setMuTol to  |              |
|              |              |              | OOQP         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_level  | OT_INTEGER   | 0            | Print level. | CasADi::Inte |
|              |              |              | OOQP         | rfaces::OOQP |
|              |              |              | listends to  | Internal     |
|              |              |              | print_level  |              |
|              |              |              | 0, 10 and    |              |
|              |              |              | 100          |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: ooqp_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::makeUnique "";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::OOQPSolver "

Default constructor. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::OOQPSolver "";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::reInit "

Reinitialize the problem This method needs to be called before evaluate()
whenever the nature of any constraint has changed. This occurs when: .

Any of LBA, UBA, LBX, UBX changes to/from (+-)infinity

An entry of LBA becomes equal/unequal to UBA: this indicates that an
inequality becomes an equality or visa versa.

You do not need to call this method before doing the very first evaluate()
run ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::indexed_one_based "";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::indexed_zero_based "";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOptionDescription
"

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::OOQPSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1OptionsFunctionality.xml
%feature("docstring") CasADi::OptionsFunctionality "

Provides options setting/getting functionality Gives a derived class the
ability to set and retrieve options in a convenient way. It also contains
error checking, making sure that the option exists and that the value type
is correct.

A derived class should add option names, types and default values to the
corresponding vectors.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: options_functionality.hpp ";

/*  Option Functionality  */

%feature("docstring")  CasADi::OptionsFunctionality::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OptionsFunctionality::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOption "

get an option value ";

%feature("docstring")  CasADi::OptionsFunctionality::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::OptionsFunctionality::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::OptionsFunctionality::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::OptionsFunctionality::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::OptionsFunctionality::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::OptionsFunctionality::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::OptionsFunctionality::makeUnique "";

%feature("docstring")  CasADi::OptionsFunctionality::OptionsFunctionality "

Default constructor. ";

%feature("docstring")  CasADi::OptionsFunctionality::~OptionsFunctionality "

Destructor. ";

%feature("docstring")  CasADi::OptionsFunctionality::checkNode "

Assert that the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionality::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionality::clone "

Deep copy. ";

%feature("docstring")  CasADi::OptionsFunctionality::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::OptionsFunctionality::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::OptionsFunctionality::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::OptionsFunctionality::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::OptionsFunctionality::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OptionsFunctionality::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::OptionsFunctionality::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::OptionsFunctionality::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::OptionsFunctionality::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::OptionsFunctionality::isInit "

Is initialized? ";

%feature("docstring")  CasADi::OptionsFunctionality::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::OptionsFunctionality::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::OptionsFunctionality::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::OptionsFunctionality::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1OptionsFunctionalityNode.xml
%feature("docstring") CasADi::OptionsFunctionalityNode "

Internal class.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: options_functionality.hpp ";

%feature("docstring")
CasADi::OptionsFunctionalityNode::OptionsFunctionalityNode "

Constructor, destructor. ";

%feature("docstring")
CasADi::OptionsFunctionalityNode::~OptionsFunctionalityNode "";

%feature("docstring")  CasADi::OptionsFunctionalityNode::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::OptionsFunctionalityNode::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getOption "

get an option value ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::print "

Print description. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::repr "

Print representation. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::init "

Initialize the object. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::OptionsFunctionalityNode::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1OutputNode.xml
%feature("docstring") CasADi::OutputNode "C++ includes: multiple_output.hpp
";

%feature("docstring")  CasADi::OutputNode::OutputNode "

Constructor. ";

%feature("docstring")  CasADi::OutputNode::~OutputNode "

Destructor. ";

%feature("docstring")  CasADi::OutputNode::clone "

Clone function. ";

%feature("docstring")  CasADi::OutputNode::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::OutputNode::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::OutputNode::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::OutputNode::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::OutputNode::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::OutputNode::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::OutputNode::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::OutputNode::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::OutputNode::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::OutputNode::jac "

Get the jacobian of an function evaluation with respect to the iind-th
argument. ";

%feature("docstring")  CasADi::OutputNode::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::OutputNode::repr "

Print a representation. ";

%feature("docstring")  CasADi::OutputNode::print "

Print a description. ";

%feature("docstring")  CasADi::OutputNode::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::OutputNode::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::OutputNode::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::OutputNode::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::OutputNode::getName "

Get the name. ";

%feature("docstring")  CasADi::OutputNode::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::OutputNode::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::OutputNode::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::OutputNode::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::OutputNode::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::OutputNode::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::OutputNode::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::OutputNode::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::OutputNode::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::OutputNode::dep "";

%feature("docstring")  CasADi::OutputNode::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::OutputNode::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::OutputNode::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::OutputNode::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::OutputNode::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::OutputNode::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::OutputNode::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::OutputNode::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::OutputNode::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::OutputNode::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::OutputNode::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::OutputNode::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::OutputNode::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::OutputNode::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::OutputNode::numel "

Number of elements. ";

%feature("docstring")  CasADi::OutputNode::size "

Get size. ";

%feature("docstring")  CasADi::OutputNode::size1 "

Get size. ";

%feature("docstring")  CasADi::OutputNode::size2 "

Get size. ";

%feature("docstring")  CasADi::OutputNode::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::OutputNode::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::OutputNode::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::OutputNode::init "

Initialize the object. ";

%feature("docstring")  CasADi::OutputNode::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::OutputNode::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1Mapping_1_1OutputNZ.xml
%feature("docstring") CasADi::Mapping::OutputNZ "

Input nonzero and dependency index.

C++ includes: mapping.hpp ";


// File: classCasADi_1_1Parallelizer.xml
%feature("docstring") CasADi::Parallelizer "

Parallelizer execution of functions.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parallelizat | OT_STRING    | \"serial\"     | (serial|open | CasADi::Para |
| ion          |              |              | mp|mpi)      | llelizerInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| save_correct | OT_BOOLEAN   | false        |              | CasADi::Para |
| ed_input     |              |              |              | llelizerInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available stats
+-----------------+------------------------------+
|       Id        |           Used in            |
+=================+==============================+
| max_threads     | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| num_threads     | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_allocation | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_cputime    | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_endtime    | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_order      | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_starttime  | CasADi::ParallelizerInternal |
+-----------------+------------------------------+

C++ includes: parallelizer.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Parallelizer::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Parallelizer::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Parallelizer::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Parallelizer::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Parallelizer::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Parallelizer::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Parallelizer::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Parallelizer::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Parallelizer::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Parallelizer::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Parallelizer::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Parallelizer::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Parallelizer::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Parallelizer::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Parallelizer::getOption "

get an option value ";

%feature("docstring")  CasADi::Parallelizer::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Parallelizer::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Parallelizer::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Parallelizer::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Parallelizer::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Parallelizer::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Parallelizer::makeUnique "";

%feature("docstring")  CasADi::Parallelizer::Parallelizer "

Default constructor. ";

%feature("docstring")  CasADi::Parallelizer::Parallelizer "

Create a Parallelizer. ";

%feature("docstring")  CasADi::Parallelizer::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Parallelizer::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Parallelizer::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Parallelizer::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Parallelizer::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Parallelizer::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Parallelizer::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Parallelizer::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Parallelizer::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Parallelizer::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Parallelizer::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Parallelizer::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Parallelizer::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Parallelizer::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Parallelizer::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Parallelizer::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Parallelizer::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Parallelizer::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Parallelizer::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Parallelizer::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Parallelizer::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Parallelizer::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Parallelizer::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Parallelizer::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Parallelizer::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Parallelizer::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Parallelizer::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Parallelizer::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Parallelizer::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Parallelizer::indexed_one_based "";

%feature("docstring")  CasADi::Parallelizer::indexed_zero_based "";

%feature("docstring")  CasADi::Parallelizer::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Parallelizer::input "

Const access input argument. ";

%feature("docstring")  CasADi::Parallelizer::input "

Access input argument. ";

%feature("docstring")  CasADi::Parallelizer::output "

Const access input argument. ";

%feature("docstring")  CasADi::Parallelizer::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Parallelizer::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Parallelizer::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Parallelizer::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Parallelizer::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Parallelizer::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Parallelizer::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Parallelizer::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Parallelizer::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Parallelizer::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Parallelizer::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Parallelizer::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Parallelizer::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Parallelizer::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Parallelizer::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Parallelizer::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Parallelizer::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Parallelizer::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Parallelizer::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Parallelizer::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Parallelizer::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Parallelizer::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Parallelizer::clone "

Deep copy. ";

%feature("docstring")  CasADi::Parallelizer::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Parallelizer::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Parallelizer::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Parallelizer::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Parallelizer::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Parallelizer::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Parallelizer::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Parallelizer::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Parallelizer::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Parallelizer::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Parallelizer::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Parallelizer::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Parallelizer::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Parallelizer::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1ParallelizerInternal.xml
%feature("docstring") CasADi::ParallelizerInternal "

Internal node class for Parallelizer.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parallelizat | OT_STRING    | \"serial\"     | (serial|open | CasADi::Para |
| ion          |              |              | mp|mpi)      | llelizerInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| save_correct | OT_BOOLEAN   | false        |              | CasADi::Para |
| ed_input     |              |              |              | llelizerInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available stats
+-----------------+------------------------------+
|       Id        |           Used in            |
+=================+==============================+
| max_threads     | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| num_threads     | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_allocation | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_cputime    | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_endtime    | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_order      | CasADi::ParallelizerInternal |
+-----------------+------------------------------+
| task_starttime  | CasADi::ParallelizerInternal |
+-----------------+------------------------------+

C++ includes: parallelizer_internal.hpp ";

%feature("docstring")  CasADi::ParallelizerInternal::clone "

clone ";

%feature("docstring")  CasADi::ParallelizerInternal::~ParallelizerInternal "

Destructor. ";

%feature("docstring")  CasADi::ParallelizerInternal::evaluate "

Evaluate the all the tasks. ";

%feature("docstring")  CasADi::ParallelizerInternal::evaluateTask "

Evaluate a single task. ";

%feature("docstring")  CasADi::ParallelizerInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::ParallelizerInternal::init "

Initialize. ";

%feature("docstring")  CasADi::ParallelizerInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ParallelizerInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::ParallelizerInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::ParallelizerInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::ParallelizerInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::ParallelizerInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::ParallelizerInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::ParallelizerInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::ParallelizerInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::ParallelizerInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::ParallelizerInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::ParallelizerInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::ParallelizerInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::ParallelizerInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::ParallelizerInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::ParallelizerInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::ParallelizerInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::ParallelizerInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::ParallelizerInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::ParallelizerInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::ParallelizerInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::ParallelizerInternal::print "

Print. ";

%feature("docstring")  CasADi::ParallelizerInternal::repr "

Print. ";

%feature("docstring")  CasADi::ParallelizerInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::ParallelizerInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::ParallelizerInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::ParallelizerInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::ParallelizerInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::ParallelizerInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::ParallelizerInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::ParallelizerInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::ParallelizerInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::ParallelizerInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ParallelizerInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ParallelizerInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::ParallelizerInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::ParallelizerInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::ParallelizerInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::ParallelizerInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::ParallelizerInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::ParallelizerInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::ParallelizerInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::ParallelizerInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::ParallelizerInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::ParallelizerInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ParallelizerInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::ParallelizerInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ParallelizerInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::ParallelizerInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ParallelizerInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::ParallelizerInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::ParallelizerInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::ParallelizerInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::ParallelizerInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::ParallelizerInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::ParallelizerInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::ParallelizerInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::ParallelizerInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::ParallelizerInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::ParallelizerInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::ParallelizerInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::ParallelizerInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::ParallelizerInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::ParallelizerInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::ParallelizerInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::ParallelizerInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::ParallelizerInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::ParallelizerInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::ParallelizerInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::ParallelizerInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::ParallelizerInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ParallelizerInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::ParallelizerInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1PrintableObject.xml
%feature("docstring") CasADi::PrintableObject "

Base class for objects that have a natural string representation.

Joel Andersson

C++ includes: printable_object.hpp ";

%feature("docstring")  CasADi::PrintableObject::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::PrintableObject::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::PrintableObject::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::PrintableObject::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Interfaces_1_1QPOasesInternal.xml
%feature("docstring") CasADi::Interfaces::QPOasesInternal "

Internal class for QPOasesSolver.

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| CPUtime      | OT_REAL      | GenericType( | The maximum  | CasADi::Inte |
|              |              | )            | allowed CPU  | rfaces::QPOa |
|              |              |              | time in      | sesInternal  |
|              |              |              | seconds for  |              |
|              |              |              | the whole in |              |
|              |              |              | itialisation |              |
|              |              |              | (and the     |              |
|              |              |              | actually     |              |
|              |              |              | required one |              |
|              |              |              | on output).  |              |
|              |              |              | Disabled if  |              |
|              |              |              | unset.       |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| nWSR         | OT_INTEGER   | GenericType( | The maximum  | CasADi::Inte |
|              |              | )            | number of    | rfaces::QPOa |
|              |              |              | working set  | sesInternal  |
|              |              |              | recalculatio |              |
|              |              |              | ns to be     |              |
|              |              |              | performed    |              |
|              |              |              | during the   |              |
|              |              |              | initial      |              |
|              |              |              | homotopy.    |              |
|              |              |              | Default is   |              |
|              |              |              | 5(nx + nc)   |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| printLevel   | OT_STRING    | GenericType( | Defines the  | CasADi::Inte |
|              |              | )            | amount of    | rfaces::QPOa |
|              |              |              | text output  | sesInternal  |
|              |              |              | during QP    |              |
|              |              |              | solution,    |              |
|              |              |              | see Section  |              |
|              |              |              | 5.7 (none|lo |              |
|              |              |              | w|medium|hig |              |
|              |              |              | h)           |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: qpoases_internal.hpp ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::QPOasesInternal
"

Constructor. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::clone "

Clone. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::QPOasesInternal
"

Create a new Solver. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::~QPOasesInternal
"

Destructor. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::init "

Initialize. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::solve "";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::jacobian_switch
"

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::numeric_jacobian
"

Numeric Jacobian. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::print "

Print. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::repr "

Print. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Interfaces::QPOasesInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::QPOasesInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::symbolicInputSX
"

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::QPOasesInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Interfaces::QPOasesInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::deepCopyMembers
"

Deep copy data members. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Interfaces::QPOasesInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Interfaces_1_1QPOasesSolver.xml
%feature("docstring") CasADi::Interfaces::QPOasesSolver "

Interface to QPOases Solver for quadratic programming.

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

Joris Gillis, Joel Andersson

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| CPUtime      | OT_REAL      | GenericType( | The maximum  | CasADi::Inte |
|              |              | )            | allowed CPU  | rfaces::QPOa |
|              |              |              | time in      | sesInternal  |
|              |              |              | seconds for  |              |
|              |              |              | the whole in |              |
|              |              |              | itialisation |              |
|              |              |              | (and the     |              |
|              |              |              | actually     |              |
|              |              |              | required one |              |
|              |              |              | on output).  |              |
|              |              |              | Disabled if  |              |
|              |              |              | unset.       |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| nWSR         | OT_INTEGER   | GenericType( | The maximum  | CasADi::Inte |
|              |              | )            | number of    | rfaces::QPOa |
|              |              |              | working set  | sesInternal  |
|              |              |              | recalculatio |              |
|              |              |              | ns to be     |              |
|              |              |              | performed    |              |
|              |              |              | during the   |              |
|              |              |              | initial      |              |
|              |              |              | homotopy.    |              |
|              |              |              | Default is   |              |
|              |              |              | 5(nx + nc)   |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| printLevel   | OT_STRING    | GenericType( | Defines the  | CasADi::Inte |
|              |              | )            | amount of    | rfaces::QPOa |
|              |              |              | text output  | sesInternal  |
|              |              |              | during QP    |              |
|              |              |              | solution,    |              |
|              |              |              | see Section  |              |
|              |              |              | 5.7 (none|lo |              |
|              |              |              | w|medium|hig |              |
|              |              |              | h)           |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: qpoases_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::makeUnique "";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::QPOasesSolver "

Default constructor. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::QPOasesSolver "";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getNumScalarInputs
"

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Interfaces::QPOasesSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::indexed_one_based
"";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::indexed_zero_based
"";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Interfaces::QPOasesSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::assignNodeNoCount
"

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getRepresentation
"

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Interfaces::QPOasesSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1QPSolver.xml
%feature("docstring") CasADi::QPSolver "

QPSolver.

Solves the following problem:

min          x'.H.x + G'.x     x      subject to               LBA <= A.x <=
UBA               LBX <= x   <= UBX                      nx: number of
decision variables (x)       nc: number of constraints (A)

Joel Andersson

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: qp_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::QPSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::QPSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::QPSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::QPSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::QPSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::QPSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::QPSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::QPSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::QPSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::QPSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::QPSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::QPSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::QPSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::QPSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::QPSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::QPSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::QPSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::QPSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::QPSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::QPSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::QPSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::QPSolver::makeUnique "";

%feature("docstring")  CasADi::QPSolver::QPSolver "

Default constructor. ";

%feature("docstring")  CasADi::QPSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::QPSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::QPSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::QPSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::QPSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::QPSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::QPSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::QPSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::QPSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::QPSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::QPSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::QPSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::QPSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::QPSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::QPSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::QPSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::QPSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::QPSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::QPSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::QPSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::QPSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::QPSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::QPSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::QPSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::QPSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::QPSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::QPSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::QPSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::QPSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::QPSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::QPSolver::indexed_one_based "";

%feature("docstring")  CasADi::QPSolver::indexed_zero_based "";

%feature("docstring")  CasADi::QPSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::QPSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::QPSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::QPSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::QPSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::QPSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::QPSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::QPSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::QPSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::QPSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::QPSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::QPSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::QPSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::QPSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::QPSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::QPSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::QPSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::QPSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::QPSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::QPSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::QPSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::QPSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::QPSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::QPSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::QPSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::QPSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::QPSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::QPSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::QPSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::QPSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::QPSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::QPSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::QPSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::QPSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::QPSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::QPSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1QPSolverInternal.xml
%feature("docstring") CasADi::QPSolverInternal "

Internal class.

>Input scheme: CasADi::QPInput (QP_NUM_IN = 9)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| QP_H                               | The square matrix H: sparse, (nx x |
|                                    | nx). Only the lower triangular     |
|                                    | part is actually used. The matrix  |
|                                    | is assumed to be symmetrical.      |
+------------------------------------+------------------------------------+
| QP_G                               | The column vector G: dense, (nx x  |
|                                    | 1)                                 |
+------------------------------------+------------------------------------+
| QP_A                               | The matrix A: sparse, (nc x nx) -  |
|                                    | product with x must be dense.      |
+------------------------------------+------------------------------------+
| QP_LBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBA                             | dense, (nc x 1)                    |
+------------------------------------+------------------------------------+
| QP_LBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_UBX                             | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_X_INIT                          | dense, (nx x 1)                    |
+------------------------------------+------------------------------------+
| QP_LAMBDA_INIT                     |                                    |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::QPOutput (QP_NUM_OUT = 4)
+-------------+---------------------------------------------------+
|    Name     |                    Description                    |
+=============+===================================================+
| QP_PRIMAL   | The primal solution.                              |
+-------------+---------------------------------------------------+
| QP_COST     | The optimal cost.                                 |
+-------------+---------------------------------------------------+
| QP_LAMBDA_A | The dual solution corresponding to linear bounds. |
+-------------+---------------------------------------------------+
| QP_LAMBDA_X | The dual solution corresponding to simple bounds. |
+-------------+---------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| convex       | OT_BOOLEAN   | false        | Specify true | CasADi::QPSo |
|              |              |              | if you can   | lverInternal |
|              |              |              | guarantee    |              |
|              |              |              | that H will  |              |
|              |              |              | always be    |              |
|              |              |              | positive     |              |
|              |              |              | definite     |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: qp_solver_internal.hpp ";

%feature("docstring")  CasADi::QPSolverInternal::QPSolverInternal "";

%feature("docstring")  CasADi::QPSolverInternal::QPSolverInternal "";

%feature("docstring")  CasADi::QPSolverInternal::~QPSolverInternal "";

%feature("docstring")  CasADi::QPSolverInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::QPSolverInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::QPSolverInternal::solve "";

%feature("docstring")  CasADi::QPSolverInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::QPSolverInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::QPSolverInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::QPSolverInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::QPSolverInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::QPSolverInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::QPSolverInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::QPSolverInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::QPSolverInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::QPSolverInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::QPSolverInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::QPSolverInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::QPSolverInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::QPSolverInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::QPSolverInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::QPSolverInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::QPSolverInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::QPSolverInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::QPSolverInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::QPSolverInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::QPSolverInternal::print "

Print. ";

%feature("docstring")  CasADi::QPSolverInternal::repr "

Print. ";

%feature("docstring")  CasADi::QPSolverInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::QPSolverInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::QPSolverInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::QPSolverInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::QPSolverInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::QPSolverInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::QPSolverInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::QPSolverInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::QPSolverInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::QPSolverInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolverInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolverInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::QPSolverInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::QPSolverInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolverInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::QPSolverInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::QPSolverInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::QPSolverInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::QPSolverInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::QPSolverInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::QPSolverInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::QPSolverInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::QPSolverInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::QPSolverInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::QPSolverInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::QPSolverInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::QPSolverInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::QPSolverInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::QPSolverInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::QPSolverInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::QPSolverInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::QPSolverInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::QPSolverInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::QPSolverInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::QPSolverInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::QPSolverInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::QPSolverInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::QPSolverInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::QPSolverInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::QPSolverInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::QPSolverInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::QPSolverInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::QPSolverInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::QPSolverInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::QPSolverInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::QPSolverInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::QPSolverInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::QPSolverInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::QPSolverInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::QPSolverInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::QPSolverInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::QPSolverInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::QPSolverInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1RealtypeSX.xml
%feature("docstring") CasADi::RealtypeSX "

DERIVED CLASSES.

Represents a constant real SX Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::RealtypeSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::RealtypeSX::getIntValue "";

%feature("docstring")  CasADi::RealtypeSX::isInteger "";

%feature("docstring")  CasADi::RealtypeSX::isSymbolic "";

%feature("docstring")  CasADi::RealtypeSX::hasDep "";

%feature("docstring")  CasADi::RealtypeSX::isZero "";

%feature("docstring")  CasADi::RealtypeSX::isOne "";

%feature("docstring")  CasADi::RealtypeSX::isMinusOne "";

%feature("docstring")  CasADi::RealtypeSX::isNan "";

%feature("docstring")  CasADi::RealtypeSX::isInf "";

%feature("docstring")  CasADi::RealtypeSX::isMinusInf "";

%feature("docstring")  CasADi::RealtypeSX::~RealtypeSX "

Destructor. ";

%feature("docstring")  CasADi::RealtypeSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::RealtypeSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::RealtypeSX::print "

print ";

%feature("docstring")  CasADi::RealtypeSX::getName "";

%feature("docstring")  CasADi::RealtypeSX::isEqual "

comparison ";

%feature("docstring")  CasADi::RealtypeSX::isEqual "

comparison ";

%feature("docstring")  CasADi::RealtypeSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::RealtypeSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::RealtypeSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::RealtypeSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::RealtypeSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::RealtypeSX::marked "";

%feature("docstring")  CasADi::RealtypeSX::mark "";


// File: structCasADi_1_1ResEntry.xml
%feature("docstring") CasADi::ResEntry "

Structure to hold the information about an entry

C++ includes: muscod_aux.hpp ";


// File: classCasADi_1_1RKIntegrator.xml
%feature("docstring") CasADi::RKIntegrator "

Fixed step Runge-Kutta integrator ODE integrator based on explicit Runge-
Kutta methods.

The method is still under development

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::RKIn |
|              |              |              | ODE/DAE      | tegratorInte |
|              |              |              | residual     | rnal         |
|              |              |              | function in  |              |
|              |              |              | an SX graph  |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_q     | OT_BOOLEAN   | false        | Expand the   | CasADi::RKIn |
|              |              |              | quadrature   | tegratorInte |
|              |              |              | function in  | rnal         |
|              |              |              | an SX graph  |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_INTEGER   | 4            | Order of the | CasADi::RKIn |
| n_order      |              |              | interpolatin | tegratorInte |
|              |              |              | g            | rnal         |
|              |              |              | polynomials  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fi | OT_INTEGER   | 20           | Number of    | CasADi::RKIn |
| nite_element |              |              | finite       | tegratorInte |
| s            |              |              | elements     | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: rk_integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::RKIntegrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::RKIntegrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::RKIntegrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::RKIntegrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::RKIntegrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::RKIntegrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::RKIntegrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::RKIntegrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::RKIntegrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::RKIntegrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::RKIntegrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::RKIntegrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::RKIntegrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::RKIntegrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::RKIntegrator::getOption "

get an option value ";

%feature("docstring")  CasADi::RKIntegrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::RKIntegrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::RKIntegrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::RKIntegrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::RKIntegrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::RKIntegrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::RKIntegrator::makeUnique "";

%feature("docstring")  CasADi::RKIntegrator::RKIntegrator "

Default constructor. ";

%feature("docstring")  CasADi::RKIntegrator::RKIntegrator "

Create an integrator for explicit ODEs.

Parameters:
-----------

f:  dynamical system >Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+

>Output scheme: CasADi::DAEOutput (DAE_NUM_OUT = 3)
+----------+------------------------------------------+
|   Name   |               Description                |
+==========+==========================================+
| DAE_ODE  | Right hand side of the implicit ODE      |
+----------+------------------------------------------+
| DAE_ALG  | Right hand side of algebraic equations   |
+----------+------------------------------------------+
| DAE_QUAD | Right hand side of quadratures equations |
+----------+------------------------------------------+
";

%feature("docstring")  CasADi::RKIntegrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::RKIntegrator::clone "

Clone. ";

%feature("docstring")  CasADi::RKIntegrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::RKIntegrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::RKIntegrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::RKIntegrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::RKIntegrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::RKIntegrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::RKIntegrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::RKIntegrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::RKIntegrator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::RKIntegrator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::RKIntegrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::RKIntegrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::RKIntegrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::RKIntegrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::RKIntegrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::RKIntegrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::RKIntegrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::RKIntegrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::RKIntegrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::RKIntegrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::RKIntegrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::RKIntegrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::RKIntegrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::RKIntegrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::RKIntegrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::RKIntegrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::RKIntegrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::RKIntegrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::RKIntegrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::RKIntegrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::RKIntegrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::RKIntegrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::RKIntegrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::RKIntegrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::RKIntegrator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::RKIntegrator::indexed_one_based "";

%feature("docstring")  CasADi::RKIntegrator::indexed_zero_based "";

%feature("docstring")  CasADi::RKIntegrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::RKIntegrator::input "

Access input argument. ";

%feature("docstring")  CasADi::RKIntegrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::RKIntegrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::RKIntegrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::RKIntegrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::RKIntegrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::RKIntegrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::RKIntegrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::RKIntegrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::RKIntegrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::RKIntegrator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::RKIntegrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::RKIntegrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::RKIntegrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::RKIntegrator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::RKIntegrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::RKIntegrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::RKIntegrator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::RKIntegrator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::RKIntegrator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::RKIntegrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::RKIntegrator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::RKIntegrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::RKIntegrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::RKIntegrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::RKIntegrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::RKIntegrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::RKIntegrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::RKIntegrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::RKIntegrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::RKIntegrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::RKIntegrator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::RKIntegrator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::RKIntegrator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1RKIntegratorInternal.xml
%feature("docstring") CasADi::RKIntegratorInternal "

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::RKIn |
|              |              |              | ODE/DAE      | tegratorInte |
|              |              |              | residual     | rnal         |
|              |              |              | function in  |              |
|              |              |              | an SX graph  |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_q     | OT_BOOLEAN   | false        | Expand the   | CasADi::RKIn |
|              |              |              | quadrature   | tegratorInte |
|              |              |              | function in  | rnal         |
|              |              |              | an SX graph  |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_INTEGER   | 4            | Order of the | CasADi::RKIn |
| n_order      |              |              | interpolatin | tegratorInte |
|              |              |              | g            | rnal         |
|              |              |              | polynomials  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fi | OT_INTEGER   | 20           | Number of    | CasADi::RKIn |
| nite_element |              |              | finite       | tegratorInte |
| s            |              |              | elements     | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: rk_integrator_internal.hpp ";

%feature("docstring")  CasADi::RKIntegratorInternal::RKIntegratorInternal "

Constructor. ";

%feature("docstring")  CasADi::RKIntegratorInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::RKIntegratorInternal::clone "

Clone. ";

%feature("docstring")  CasADi::RKIntegratorInternal::create "

Create a new integrator. ";

%feature("docstring")  CasADi::RKIntegratorInternal::~RKIntegratorInternal "

Destructor. ";

%feature("docstring")  CasADi::RKIntegratorInternal::init "

Initialize stage. ";

%feature("docstring")  CasADi::RKIntegratorInternal::initAdj "

Initialize the adjoint problem (can only be called after the first
integration) ";

%feature("docstring")  CasADi::RKIntegratorInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::RKIntegratorInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::RKIntegratorInternal::evaluate "

Overload this method, since the number of derivative directions currently
aren't passed. ";

%feature("docstring")  CasADi::RKIntegratorInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::RKIntegratorInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getJacobian "

Get the jacobian in the nonlinear iteration. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")  CasADi::RKIntegratorInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::RKIntegratorInternal::printStats "

Print statistics. ";

%feature("docstring")  CasADi::RKIntegratorInternal::setStopTime "

Set the stop time of the forward integration. ";

%feature("docstring")  CasADi::RKIntegratorInternal::jacobian "

Jacobian of the integrator. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::RKIntegratorInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::RKIntegratorInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::RKIntegratorInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::RKIntegratorInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::RKIntegratorInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::RKIntegratorInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::RKIntegratorInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::RKIntegratorInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::RKIntegratorInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::RKIntegratorInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::RKIntegratorInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::RKIntegratorInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::RKIntegratorInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::RKIntegratorInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::RKIntegratorInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::RKIntegratorInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::RKIntegratorInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::RKIntegratorInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::RKIntegratorInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::RKIntegratorInternal::print "

Print. ";

%feature("docstring")  CasADi::RKIntegratorInternal::repr "

Print. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::RKIntegratorInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::RKIntegratorInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::RKIntegratorInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::RKIntegratorInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::RKIntegratorInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::RKIntegratorInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::RKIntegratorInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::RKIntegratorInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::RKIntegratorInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegratorInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegratorInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::RKIntegratorInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::RKIntegratorInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegratorInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::RKIntegratorInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::RKIntegratorInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::RKIntegratorInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::RKIntegratorInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::RKIntegratorInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::RKIntegratorInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::RKIntegratorInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::RKIntegratorInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::RKIntegratorInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::RKIntegratorInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::RKIntegratorInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::RKIntegratorInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::RKIntegratorInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::RKIntegratorInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::RKIntegratorInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::RKIntegratorInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::RKIntegratorInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::RKIntegratorInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::RKIntegratorInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::RKIntegratorInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::RKIntegratorInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::RKIntegratorInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::RKIntegratorInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1ScalarNonzerosOp.xml
%feature("docstring") CasADi::ScalarNonzerosOp "

A scalar-matrix binary operation where one loops only over nonzeros of the
matrix.

C++ includes: binary_mx.hpp ";

%feature("docstring")  CasADi::ScalarNonzerosOp::ScalarNonzerosOp "

Constructor. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::~ScalarNonzerosOp "

Destructor. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::clone "

Clone function. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::ScalarNonzerosOp::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateGen "

Evaluate the function (template) ";

%feature("docstring")  CasADi::ScalarNonzerosOp::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::repr "

Print a representation. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::print "

Print a description. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::getName "

Get the name. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::ScalarNonzerosOp::dep "";

%feature("docstring")  CasADi::ScalarNonzerosOp::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::ScalarNonzerosOp::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::numel "

Number of elements. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::size "

Get size. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::size1 "

Get size. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::size2 "

Get size. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::init "

Initialize the object. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::ScalarNonzerosOp::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SharedObject.xml
%feature("docstring") CasADi::SharedObject "

SharedObject implements a reference counting framework simular for effient
and easily-maintained memory management.

To use the class, both the SharedObject class (the public class), and the
SharedObjectNode class (the internal class) must be inherited from. It can
be done in two different files and together with memory management, this
approach provides a clear destinction of which methods of the class are to
be considered \"public\", i.e. methods for public use that can be considered
to remain over time with small changes, and the internal memory.

When interfacing a software, which typically includes including some header
file, this is best done only in the file where the internal class is
defined, to avoid polluting the global namespace and other side effects.

The default constructor always means creating a null pointer to an internal
class only. To allocate an internal class (this works only when the internal
class isn't abstract), use the constructor with arguments.

The copy constructor and the assignment operator perform shallow copies
only, to make a deep copy you must use the clone method explictly. This will
give a shared pointer instance.

In an inheritance hierarchy, you can cast down automatically, e.g. (
SXFunction is a child class of FX): SXFunction derived(...); FX base =
derived;

To cast up, use the shared_cast template function, which works analogously
to dynamic_cast, static_cast, const_cast etc, e.g.: SXFunction derived(...);
FX base = derived; SXFunction derived_from_base =
shared_cast<SXFunction>(base);

A failed shared_cast will result in a null pointer (cf. dynamic_cast)

Joel Andersson

C++ includes: shared_object.hpp ";

%feature("docstring")  CasADi::SharedObject::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::SharedObject::makeUnique "";

%feature("docstring")  CasADi::SharedObject::SharedObject "

Default constructor. ";

%feature("docstring")  CasADi::SharedObject::SharedObject "

Copy constructor (shallow copy) ";

%feature("docstring")  CasADi::SharedObject::clone "

Deep copy. ";

%feature("docstring")  CasADi::SharedObject::~SharedObject "

Destructor. ";

%feature("docstring")  CasADi::SharedObject::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::SharedObject::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::SharedObject::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::SharedObject::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::SharedObject::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SharedObject::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::SharedObject::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::SharedObject::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::SharedObject::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::SharedObject::isInit "

Is initialized? ";

%feature("docstring")  CasADi::SharedObject::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::SharedObject::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::SharedObject::checkNode "

Assert that the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::SharedObject::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::SharedObject::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1SharedObjectNode.xml
%feature("docstring") CasADi::SharedObjectNode "

Internal class for the reference counting framework, see comments on the
public class.

C++ includes: shared_object.hpp ";

%feature("docstring")  CasADi::SharedObjectNode::SharedObjectNode "

Default constructor. ";

%feature("docstring")  CasADi::SharedObjectNode::SharedObjectNode "

Copy constructor. ";

%feature("docstring")  CasADi::SharedObjectNode::~SharedObjectNode "

Destructor. ";

%feature("docstring")  CasADi::SharedObjectNode::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::SharedObjectNode::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SharedObjectNode::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SharedObjectNode::init "

Initialize the object. ";

%feature("docstring")  CasADi::SharedObjectNode::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SharedObjectNode::assertInit "

Assert that the object has been initialized. ";

%feature("docstring")  CasADi::SharedObjectNode::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::SharedObjectNode::print "

Print a destription of the object. ";


// File: classCasADi_1_1Simulator.xml
%feature("docstring") CasADi::Simulator "

Integrator class An \"simulator\" integrates an IVP, stopping at a (fixed)
number of grid points and evaluates a set of output functions at these
points. The internal stepsizes of the integrator need not coincide with the
gridpoints.

Simulator is an CasADi::FX mapping from CasADi::IntegratorInput to n. \\\\

The output function needs to be a mapping from CasADi::DAEInput to n. The
default output has n=1 and the output is the (flattened) differential state
for each time step.

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Simulat |
|              |              |              | uts)  (initi | orInternal   |
|              |              |              | al|step)     |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+---------------------------+
|   Id    |          Used in          |
+=========+===========================+
| initial | CasADi::SimulatorInternal |
+---------+---------------------------+
| inputs  | CasADi::FXInternal        |
+---------+---------------------------+
| outputs | CasADi::FXInternal        |
+---------+---------------------------+
| step    | CasADi::SimulatorInternal |
+---------+---------------------------+

C++ includes: simulator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Simulator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Simulator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Simulator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Simulator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Simulator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Simulator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Simulator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Simulator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Simulator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Simulator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Simulator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Simulator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Simulator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Simulator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Simulator::getOption "

get an option value ";

%feature("docstring")  CasADi::Simulator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Simulator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Simulator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Simulator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Simulator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Simulator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Simulator::makeUnique "";

%feature("docstring")  CasADi::Simulator::Simulator "

Default constructor. ";

%feature("docstring")  CasADi::Simulator::Simulator "

Constructor.

Parameters:
-----------

output_fcn:  output function which maps to n outputs. >Input scheme:
CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+ |   Name   |
Description               |
+==========+========================================+ | DAE_X    |
Differential state                     |
+----------+----------------------------------------+ | DAE_Z    | Algebraic
state                        |
+----------+----------------------------------------+ | DAE_P    | Parameter
| +----------+----------------------------------------+ | DAE_T    |
Explicit time dependence               |
+----------+----------------------------------------+ | DAE_XDOT | Time
derivative of differential states |
+----------+----------------------------------------+ ";

%feature("docstring")  CasADi::Simulator::Simulator "";

%feature("docstring")  CasADi::Simulator::Simulator "

Output function equal to the state. ";

%feature("docstring")  CasADi::Simulator::Simulator "";

%feature("docstring")  CasADi::Simulator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Simulator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Simulator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::Simulator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::Simulator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Simulator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Simulator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Simulator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Simulator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Simulator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Simulator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Simulator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Simulator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Simulator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Simulator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Simulator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Simulator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Simulator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Simulator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Simulator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Simulator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Simulator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Simulator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Simulator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Simulator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Simulator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Simulator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Simulator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Simulator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Simulator::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Simulator::indexed_one_based "";

%feature("docstring")  CasADi::Simulator::indexed_zero_based "";

%feature("docstring")  CasADi::Simulator::input "

Const access input argument. ";

%feature("docstring")  CasADi::Simulator::input "

Access input argument. ";

%feature("docstring")  CasADi::Simulator::output "

Const access input argument. ";

%feature("docstring")  CasADi::Simulator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Simulator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Simulator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Simulator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Simulator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Simulator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Simulator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Simulator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Simulator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Simulator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Simulator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Simulator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Simulator::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Simulator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Simulator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Simulator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Simulator::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::Simulator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Simulator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Simulator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Simulator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Simulator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Simulator::clone "

Deep copy. ";

%feature("docstring")  CasADi::Simulator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Simulator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Simulator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Simulator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Simulator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Simulator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Simulator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Simulator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Simulator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Simulator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Simulator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Simulator::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Simulator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Simulator::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1SimulatorInternal.xml
%feature("docstring") CasADi::SimulatorInternal "

Simulator data storage classs.

Joel Andersson

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::Simulat |
|              |              |              | uts)  (initi | orInternal   |
|              |              |              | al|step)     |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+---------------------------+
|   Id    |          Used in          |
+=========+===========================+
| initial | CasADi::SimulatorInternal |
+---------+---------------------------+
| inputs  | CasADi::FXInternal        |
+---------+---------------------------+
| outputs | CasADi::FXInternal        |
+---------+---------------------------+
| step    | CasADi::SimulatorInternal |
+---------+---------------------------+

C++ includes: simulator_internal.hpp ";

%feature("docstring")  CasADi::SimulatorInternal::SimulatorInternal "

Constructor. ";

%feature("docstring")  CasADi::SimulatorInternal::~SimulatorInternal "

Destructor. ";

%feature("docstring")  CasADi::SimulatorInternal::clone "

Clone. ";

%feature("docstring")  CasADi::SimulatorInternal::init "

initialize ";

%feature("docstring")  CasADi::SimulatorInternal::evaluate "

Integrate. ";

%feature("docstring")  CasADi::SimulatorInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization.
";

%feature("docstring")  CasADi::SimulatorInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SimulatorInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::SimulatorInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::SimulatorInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SimulatorInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::SimulatorInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::SimulatorInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::SimulatorInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::SimulatorInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::SimulatorInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SimulatorInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SimulatorInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::SimulatorInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::SimulatorInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::SimulatorInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::SimulatorInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::SimulatorInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::SimulatorInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::SimulatorInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::SimulatorInternal::print "

Print. ";

%feature("docstring")  CasADi::SimulatorInternal::repr "

Print. ";

%feature("docstring")  CasADi::SimulatorInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::SimulatorInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::SimulatorInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::SimulatorInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::SimulatorInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::SimulatorInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::SimulatorInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::SimulatorInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SimulatorInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SimulatorInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SimulatorInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SimulatorInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SimulatorInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SimulatorInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SimulatorInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SimulatorInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::SimulatorInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::SimulatorInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::SimulatorInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::SimulatorInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SimulatorInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SimulatorInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SimulatorInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SimulatorInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SimulatorInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SimulatorInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SimulatorInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SimulatorInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SimulatorInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::SimulatorInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::SimulatorInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::SimulatorInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::SimulatorInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SimulatorInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SimulatorInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SimulatorInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SimulatorInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SimulatorInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SimulatorInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SimulatorInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SimulatorInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SimulatorInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::SimulatorInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::SimulatorInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SimulatorInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SimulatorInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::SimulatorInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::SimulatorInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::SimulatorInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SimulatorInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SimulatorInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SimulatorInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1Slice.xml
%feature("docstring") CasADi::Slice "

Class representing a slice

C++ includes: slice.hpp ";

%feature("docstring")  CasADi::Slice::Slice "

Defailt constructor - all elements. ";

%feature("docstring")  CasADi::Slice::Slice "

A single element. ";

%feature("docstring")  CasADi::Slice::Slice "

A slice. ";

%feature("docstring")  CasADi::Slice::getAll "

Get a vector of indices. ";


// File: structCasADi_1_1SmoothChecker.xml
%feature("docstring") CasADi::SmoothChecker "

Smoothness (by default true)

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1SmoothChecker_3_01OP__CEIL_01_4.xml
%feature("docstring") CasADi::SmoothChecker< OP_CEIL > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1SmoothChecker_3_01OP__EQUALITY_01_4.xml
%feature("docstring") CasADi::SmoothChecker< OP_EQUALITY > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1SmoothChecker_3_01OP__FLOOR_01_4.xml
%feature("docstring") CasADi::SmoothChecker< OP_FLOOR > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1SmoothChecker_3_01OP__SIGN_01_4.xml
%feature("docstring") CasADi::SmoothChecker< OP_SIGN > " C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1SmoothChecker_3_01OP__STEP_01_4.xml
%feature("docstring") CasADi::SmoothChecker< OP_STEP > " C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1SparseSparseOp.xml
%feature("docstring") CasADi::SparseSparseOp "

A sparse matrix-matrix binary operation.

C++ includes: binary_mx.hpp ";

%feature("docstring")  CasADi::SparseSparseOp::SparseSparseOp "

Constructor. ";

%feature("docstring")  CasADi::SparseSparseOp::~SparseSparseOp "

Destructor. ";

%feature("docstring")  CasADi::SparseSparseOp::clone "

Clone function. ";

%feature("docstring")  CasADi::SparseSparseOp::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::SparseSparseOp::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::SparseSparseOp::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::SparseSparseOp::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::SparseSparseOp::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::SparseSparseOp::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::SparseSparseOp::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::SparseSparseOp::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SparseSparseOp::repr "

Print a representation. ";

%feature("docstring")  CasADi::SparseSparseOp::print "

Print a description. ";

%feature("docstring")  CasADi::SparseSparseOp::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::SparseSparseOp::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::SparseSparseOp::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::SparseSparseOp::getName "

Get the name. ";

%feature("docstring")  CasADi::SparseSparseOp::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::SparseSparseOp::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::SparseSparseOp::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::SparseSparseOp::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::SparseSparseOp::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::SparseSparseOp::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::SparseSparseOp::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::SparseSparseOp::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::SparseSparseOp::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::SparseSparseOp::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::SparseSparseOp::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::SparseSparseOp::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::SparseSparseOp::dep "";

%feature("docstring")  CasADi::SparseSparseOp::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::SparseSparseOp::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::SparseSparseOp::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::SparseSparseOp::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::SparseSparseOp::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::SparseSparseOp::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::SparseSparseOp::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::SparseSparseOp::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::SparseSparseOp::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::SparseSparseOp::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::SparseSparseOp::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::SparseSparseOp::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::SparseSparseOp::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::SparseSparseOp::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::SparseSparseOp::numel "

Number of elements. ";

%feature("docstring")  CasADi::SparseSparseOp::size "

Get size. ";

%feature("docstring")  CasADi::SparseSparseOp::size1 "

Get size. ";

%feature("docstring")  CasADi::SparseSparseOp::size2 "

Get size. ";

%feature("docstring")  CasADi::SparseSparseOp::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::SparseSparseOp::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::SparseSparseOp::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SparseSparseOp::init "

Initialize the object. ";

%feature("docstring")  CasADi::SparseSparseOp::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SparseSparseOp::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SQPInternal.xml
%feature("docstring") CasADi::SQPInternal "

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| eta          | OT_REAL      | 0.000        | Linesearch   | CasADi::SQPI |
|              |              |              | parameter:   | nternal      |
|              |              |              | See Nocedal  |              |
|              |              |              | 3.4          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | \"BFGS\"       | BFGS|exact   | CasADi::SQPI |
| oximation    |              |              |              | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter      | OT_INTEGER   | 100          | Maximum      | CasADi::SQPI |
|              |              |              | number of    | nternal      |
|              |              |              | SQP          |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter_ls   | OT_INTEGER   | 100          | Maximum      | CasADi::SQPI |
|              |              |              | number of    | nternal      |
|              |              |              | linesearch   |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::SQPInte |
|              |              |              | uts)  (eval_ | rnal         |
|              |              |              | f|eval_g|eva |              |
|              |              |              | l_jac_g|eval |              |
|              |              |              | _grad_f|eval |              |
|              |              |              | _h|qp)       |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_safety    | OT_REAL      | 1.100        | Safety       | CasADi::SQPI |
|              |              |              | factor for   | nternal      |
|              |              |              | linesearch   |              |
|              |              |              | mu           |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver    | OT_QPSOLVER  | GenericType( | The QP       | CasADi::SQPI |
|              |              | )            | solver to be | nternal      |
|              |              |              | used by the  |              |
|              |              |              | SQP method   |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver_op | OT_DICTIONAR | GenericType( | Options to   | CasADi::SQPI |
| tions        | Y            | )            | be passed to | nternal      |
|              |              |              | the QP       |              |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| rho          | OT_REAL      | 0.500        | Linesearch   | CasADi::SQPI |
|              |              |              | parameter    | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| sigma        | OT_REAL      | 1            | Linesearch   | CasADi::SQPI |
|              |              |              | parameter    | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| tau          | OT_REAL      | 0.200        | Linesearch   | CasADi::SQPI |
|              |              |              | parameter    | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| toldx        | OT_REAL      | 0.000        | Stopping     | CasADi::SQPI |
|              |              |              | criterion    | nternal      |
|              |              |              | for the      |              |
|              |              |              | stepsize     |              |
+--------------+--------------+--------------+--------------+--------------+
| tolgl        | OT_REAL      | 0.000        | Stopping     | CasADi::SQPI |
|              |              |              | criterion    | nternal      |
|              |              |              | for the      |              |
|              |              |              | Lagrangian   |              |
|              |              |              | gradient     |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+---------------------+
|     Id      |       Used in       |
+=============+=====================+
| eval_f      | CasADi::SQPInternal |
+-------------+---------------------+
| eval_g      | CasADi::SQPInternal |
+-------------+---------------------+
| eval_grad_f | CasADi::SQPInternal |
+-------------+---------------------+
| eval_h      | CasADi::SQPInternal |
+-------------+---------------------+
| eval_jac_g  | CasADi::SQPInternal |
+-------------+---------------------+
| inputs      | CasADi::FXInternal  |
+-------------+---------------------+
| outputs     | CasADi::FXInternal  |
+-------------+---------------------+
| qp          | CasADi::SQPInternal |
+-------------+---------------------+

>List of available stats
+------------+---------------------+
|     Id     |       Used in       |
+============+=====================+
| eq_viol    | CasADi::SQPInternal |
+------------+---------------------+
| iter       | CasADi::SQPInternal |
+------------+---------------------+
| iter_count | CasADi::SQPInternal |
+------------+---------------------+
| lsiter     | CasADi::SQPInternal |
+------------+---------------------+
| normdx     | CasADi::SQPInternal |
+------------+---------------------+
| normgradL  | CasADi::SQPInternal |
+------------+---------------------+

C++ includes: sqp_internal.hpp ";

%feature("docstring")  CasADi::SQPInternal::SQPInternal "";

%feature("docstring")  CasADi::SQPInternal::~SQPInternal "";

%feature("docstring")  CasADi::SQPInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::SQPInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::SQPInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::SQPInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::SQPInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::SQPInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::SQPInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SQPInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::SQPInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::SQPInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SQPInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::SQPInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::SQPInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::SQPInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::SQPInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::SQPInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SQPInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SQPInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::SQPInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::SQPInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::SQPInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::SQPInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::SQPInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::SQPInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::SQPInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::SQPInternal::print "

Print. ";

%feature("docstring")  CasADi::SQPInternal::repr "

Print. ";

%feature("docstring")  CasADi::SQPInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::SQPInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::SQPInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::SQPInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::SQPInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::SQPInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::SQPInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::SQPInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SQPInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SQPInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SQPInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SQPInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SQPInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SQPInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SQPInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SQPInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::SQPInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::SQPInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::SQPInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::SQPInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SQPInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SQPInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SQPInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SQPInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SQPInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SQPInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SQPInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SQPInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SQPInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::SQPInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::SQPInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::SQPInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::SQPInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SQPInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SQPInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SQPInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SQPInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SQPInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SQPInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SQPInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SQPInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SQPInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::SQPInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::SQPInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SQPInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SQPInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::SQPInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::SQPInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::SQPInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SQPInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SQPInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SQPInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SQPMethod.xml
%feature("docstring") CasADi::SQPMethod "

Sequential Quadratic Programming method The algorithm is a Quasi- Newton
method with damped BFGS updating to that assures positive definitenes of the
Hessian approximation. Line search is carried out via backtracking until
with the Armijo condition applied to the T1 (in Nocedal phi1) merit function
is satisfied.

The method solved can be written in the form:   min          F(x1,x2)
x1,x2      subject to             LBG1 <= G1(x1,x2) <= UBG1               x2
== G2(x1,x2)             LBX1 <= x1    <= UBX1             LBX2 <=     x2
<= UBX2

We thus assume that the variable vector x can be divided into two parts,
where the second part is given recursively by the equations x2 == G2(x1,x2).
That is x2 is given recursively means that we assume that the Jacobian of G2
with respect to x2 is lower triangular with zeros along the diagonal.

The method is still under development

Joel Andersson

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| eta          | OT_REAL      | 0.000        | Linesearch   | CasADi::SQPI |
|              |              |              | parameter:   | nternal      |
|              |              |              | See Nocedal  |              |
|              |              |              | 3.4          |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | objective    | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | false        | Expand the   | CasADi::NLPS |
|              |              |              | constraint   | olverInterna |
|              |              |              | function in  | l            |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | false        | Use Gauss    | CasADi::NLPS |
|              |              |              | Newton       | olverInterna |
|              |              |              | Hessian appr | l            |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | false        | Generate an  | CasADi::NLPS |
| sian         |              |              | exact        | olverInterna |
|              |              |              | Hessian of   | l            |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | true         | Generate an  | CasADi::NLPS |
| obian        |              |              | exact        | olverInterna |
|              |              |              | Jacobian of  | l            |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| hessian_appr | OT_STRING    | \"BFGS\"       | BFGS|exact   | CasADi::SQPI |
| oximation    |              |              |              | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| _vec         |              |              | true, the    | olverInterna |
|              |              |              | input shape  | l            |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        | FX()         | A function   | CasADi::NLPS |
| llback       |              |              | that will be | olverInterna |
|              |              |              | called at    | l            |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | false        | If set to    | CasADi::NLPS |
| llback_ignor |              |              | true, errors | olverInterna |
| e_errors     |              |              | thrown by it | l            |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::NLPS |
| llback_step  |              |              | the callback | olverInterna |
|              |              |              | function     | l            |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter      | OT_INTEGER   | 100          | Maximum      | CasADi::SQPI |
|              |              |              | number of    | nternal      |
|              |              |              | SQP          |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| maxiter_ls   | OT_INTEGER   | 100          | Maximum      | CasADi::SQPI |
|              |              |              | number of    | nternal      |
|              |              |              | linesearch   |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal   Cas |
|              |              |              | (inputs|outp | ADi::SQPInte |
|              |              |              | uts)  (eval_ | rnal         |
|              |              |              | f|eval_g|eva |              |
|              |              |              | l_jac_g|eval |              |
|              |              |              | _grad_f|eval |              |
|              |              |              | _h|qp)       |              |
+--------------+--------------+--------------+--------------+--------------+
| mu_safety    | OT_REAL      | 1.100        | Safety       | CasADi::SQPI |
|              |              |              | factor for   | nternal      |
|              |              |              | linesearch   |              |
|              |              |              | mu           |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | false        | Expect F, G, | CasADi::NLPS |
|              |              |              | H, J to have | olverInterna |
|              |              |              | an           | l            |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver    | OT_QPSOLVER  | GenericType( | The QP       | CasADi::SQPI |
|              |              | )            | solver to be | nternal      |
|              |              |              | used by the  |              |
|              |              |              | SQP method   |              |
+--------------+--------------+--------------+--------------+--------------+
| qp_solver_op | OT_DICTIONAR | GenericType( | Options to   | CasADi::SQPI |
| tions        | Y            | )            | be passed to | nternal      |
|              |              |              | the QP       |              |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| rho          | OT_REAL      | 0.500        | Linesearch   | CasADi::SQPI |
|              |              |              | parameter    | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| sigma        | OT_REAL      | 1            | Linesearch   | CasADi::SQPI |
|              |              |              | parameter    | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| tau          | OT_REAL      | 0.200        | Linesearch   | CasADi::SQPI |
|              |              |              | parameter    | nternal      |
+--------------+--------------+--------------+--------------+--------------+
| toldx        | OT_REAL      | 0.000        | Stopping     | CasADi::SQPI |
|              |              |              | criterion    | nternal      |
|              |              |              | for the      |              |
|              |              |              | stepsize     |              |
+--------------+--------------+--------------+--------------+--------------+
| tolgl        | OT_REAL      | 0.000        | Stopping     | CasADi::SQPI |
|              |              |              | criterion    | nternal      |
|              |              |              | for the      |              |
|              |              |              | Lagrangian   |              |
|              |              |              | gradient     |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | false        | Warn if the  | CasADi::NLPS |
| _bounds      |              |              | initial      | olverInterna |
|              |              |              | guess does   | l            |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+---------------------+
|     Id      |       Used in       |
+=============+=====================+
| eval_f      | CasADi::SQPInternal |
+-------------+---------------------+
| eval_g      | CasADi::SQPInternal |
+-------------+---------------------+
| eval_grad_f | CasADi::SQPInternal |
+-------------+---------------------+
| eval_h      | CasADi::SQPInternal |
+-------------+---------------------+
| eval_jac_g  | CasADi::SQPInternal |
+-------------+---------------------+
| inputs      | CasADi::FXInternal  |
+-------------+---------------------+
| outputs     | CasADi::FXInternal  |
+-------------+---------------------+
| qp          | CasADi::SQPInternal |
+-------------+---------------------+

>List of available stats
+------------+---------------------+
|     Id     |       Used in       |
+============+=====================+
| eq_viol    | CasADi::SQPInternal |
+------------+---------------------+
| iter       | CasADi::SQPInternal |
+------------+---------------------+
| iter_count | CasADi::SQPInternal |
+------------+---------------------+
| lsiter     | CasADi::SQPInternal |
+------------+---------------------+
| normdx     | CasADi::SQPInternal |
+------------+---------------------+
| normgradL  | CasADi::SQPInternal |
+------------+---------------------+

C++ includes: sqp_method.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::SQPMethod::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::SQPMethod::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::SQPMethod::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::SQPMethod::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::SQPMethod::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::SQPMethod::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::SQPMethod::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::SQPMethod::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::SQPMethod::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::SQPMethod::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::SQPMethod::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::SQPMethod::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::SQPMethod::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::SQPMethod::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::SQPMethod::getOption "

get an option value ";

%feature("docstring")  CasADi::SQPMethod::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SQPMethod::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SQPMethod::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SQPMethod::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SQPMethod::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SQPMethod::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::SQPMethod::makeUnique "";

%feature("docstring")  CasADi::SQPMethod::SQPMethod "

Default constructor. ";

%feature("docstring")  CasADi::SQPMethod::SQPMethod "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::SQPMethod::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::SQPMethod::reportConstraints "";

%feature("docstring")  CasADi::SQPMethod::getReportConstraints "";

%feature("docstring")  CasADi::SQPMethod::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::SQPMethod::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::SQPMethod::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::SQPMethod::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::SQPMethod::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::SQPMethod::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::SQPMethod::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SQPMethod::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SQPMethod::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::SQPMethod::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::SQPMethod::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::SQPMethod::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::SQPMethod::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::SQPMethod::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::SQPMethod::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SQPMethod::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SQPMethod::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::SQPMethod::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::SQPMethod::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::SQPMethod::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::SQPMethod::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::SQPMethod::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SQPMethod::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SQPMethod::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SQPMethod::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SQPMethod::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::SQPMethod::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::SQPMethod::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SQPMethod::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::SQPMethod::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SQPMethod::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::SQPMethod::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SQPMethod::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SQPMethod::indexed_one_based "";

%feature("docstring")  CasADi::SQPMethod::indexed_zero_based "";

%feature("docstring")  CasADi::SQPMethod::input "

Const access input argument. ";

%feature("docstring")  CasADi::SQPMethod::input "

Access input argument. ";

%feature("docstring")  CasADi::SQPMethod::output "

Const access input argument. ";

%feature("docstring")  CasADi::SQPMethod::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::SQPMethod::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SQPMethod::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SQPMethod::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SQPMethod::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SQPMethod::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SQPMethod::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SQPMethod::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SQPMethod::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SQPMethod::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SQPMethod::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SQPMethod::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::SQPMethod::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::SQPMethod::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SQPMethod::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SQPMethod::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SQPMethod::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SQPMethod::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SQPMethod::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SQPMethod::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SQPMethod::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SQPMethod::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SQPMethod::clone "

Deep copy. ";

%feature("docstring")  CasADi::SQPMethod::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::SQPMethod::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::SQPMethod::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::SQPMethod::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::SQPMethod::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SQPMethod::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::SQPMethod::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::SQPMethod::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::SQPMethod::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::SQPMethod::isInit "

Is initialized? ";

%feature("docstring")  CasADi::SQPMethod::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::SQPMethod::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::SQPMethod::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::SQPMethod::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1StrArg.xml
%feature("docstring") CasADi::StrArg "C++ includes: xml_arg.hpp ";

%feature("docstring")  CasADi::StrArg::StrArg "";


// File: structCasADi_1_1SubBinaryOperation.xml
%feature("docstring") CasADi::SubBinaryOperation "C++ includes:
casadi_calculus.hpp ";


// File: classCasADi_1_1SubMatrix.xml
%feature("docstring") CasADi::SubMatrix "

submatrix

SubMatrix class for Matrix SubMatrix is the return type for operator() of
the Matrix class, it allows access to the value as well as changing the
parent object Joel Andersson

C++ includes: submatrix.hpp ";

%feature("docstring")  CasADi::SubMatrix::SubMatrix "

Constructor. ";


// File: classCasADi_1_1Sundials_1_1SundialsIntegrator.xml
%feature("docstring") CasADi::Sundials::SundialsIntegrator "

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_iterat | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| ive_solver   |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_linear | OT_STRING    | \"dense\"      | (dense|bande | CasADi::Sund |
| _solver      |              |              | d|iterative) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_lower_ | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_max_kr | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
| ylov         |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_pretyp | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
| e            |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_upper_ | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | false        |              | CasADi::Sund |
| an           |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| finite_diffe | OT_BOOLEAN   | false        | use finite   | CasADi::Sund |
| rence_fsens  |              |              | differences  | ials::Sundia |
|              |              |              | to           | lsInternal   |
|              |              |              | approximate  |              |
|              |              |              | the forward  |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
|              |              |              | (if AD is    |              |
|              |              |              | not          |              |
|              |              |              | available)   |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_err_co | OT_BOOLEAN   | true         | include the  | CasADi::Sund |
| n            |              |              | forward sens | ials::Sundia |
|              |              |              | itivities in | lsInternal   |
|              |              |              | all error    |              |
|              |              |              | controls     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_scalin | OT_REALVECTO |              | scaling      | CasADi::Sund |
| g_factors    | R            |              | factor for   | ials::Sundia |
|              |              |              | the          | lsInternal   |
|              |              |              | components   |              |
|              |              |              | if finite    |              |
|              |              |              | differences  |              |
|              |              |              | is used      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_sensit | OT_INTEGERVE |              | specifies    | CasADi::Sund |
| iviy_paramet | CTOR         |              | which        | ials::Sundia |
| ers          |              |              | components   | lsInternal   |
|              |              |              | will be used |              |
|              |              |              | when         |              |
|              |              |              | estimating   |              |
|              |              |              | the          |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_STRING    | \"hermite\"    | type of inte | CasADi::Sund |
| n_type       |              |              | rpolation    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint sens |              |
|              |              |              | itivities (h |              |
|              |              |              | ermite|polyn |              |
|              |              |              | omial)       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| lver         |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      | (user_define | CasADi::Sund |
| r            |              |              | d|dense|band | ials::Sundia |
|              |              |              | ed|iterative | lsInternal   |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | An linear    | CasADi::Sund |
| r_creator    | VER          | )            | solver       | ials::Sundia |
|              |              |              | creator      | lsInternal   |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Sundia |
|              |              |              | the linear   | lsInternal   |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
|              |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| max_multiste | OT_INTEGER   | 5            |              | CasADi::Sund |
| p_order      |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_num_step | OT_INTEGER   | 10000        | maximum      | CasADi::Sund |
| s            |              |              | number of    | ials::Sundia |
|              |              |              | steps        | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quad_err_con | OT_BOOLEAN   | false        | should the   | CasADi::Sund |
|              |              |              | quadratures  | ials::Sundia |
|              |              |              | affect the   | lsInternal   |
|              |              |              | step size    |              |
|              |              |              | control      |              |
+--------------+--------------+--------------+--------------+--------------+
| reltol       | OT_REAL      | 0.000        | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| sensitivity_ | OT_STRING    | \"simultaneou | (simultaneou | CasADi::Sund |
| method       |              | s\"           | s|staggered) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| steps_per_ch | OT_INTEGER   | 20           | number of    | CasADi::Sund |
| eckpoint     |              |              | steps        | ials::Sundia |
|              |              |              | between two  | lsInternal   |
|              |              |              | consecutive  |              |
|              |              |              | checkpoints  |              |
+--------------+--------------+--------------+--------------+--------------+
| stop_at_end  | OT_BOOLEAN   | false        | Stop the     | CasADi::Sund |
|              |              |              | integrator   | ials::Sundia |
|              |              |              | at the end   | lsInternal   |
|              |              |              | of the       |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Sundia |
|              |              |              | solver       | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: sundials_integrator.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::makeUnique "";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::SundialsIntegrator "

Default constructor. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setLinearSolver
"

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getJacobian "

Get the Jacobian. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getLinearSolver
"

Get the Linear solver. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setInitialTime
"

Set initial time. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setFinalTime "

Set final time. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setStopTime "

Set a stop time for the forward integration. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::clone "

Clone. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::reset "

Reset the solver and bring the time back to t0 and state back to
INTEGRATOR_X0. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getDAE "

Get the DAE. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getNumOutputs "

Get number of outputs. ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::setJacSparsity
"

Generate the sparsity of a Jacobian block. ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::indexed_one_based "";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::indexed_zero_based "";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::symbolicInputSX
"

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getOptionNames
"

Get a list of all option names. ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getOptionType "

Get the type of a certain option. ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::isNull "

Is a null pointer? ";

%feature("docstring")
CasADi::Sundials::SundialsIntegrator::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::Sundials::SundialsIntegrator::getDescription
"

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1Sundials_1_1SundialsInternal.xml
%feature("docstring") CasADi::Sundials::SundialsInternal "

>Input scheme: CasADi::IntegratorInput (INTEGRATOR_NUM_IN = 3)
+----------------+-----------------------------------------------+
|      Name      |                  Description                  |
+================+===============================================+
| INTEGRATOR_X0  | Differential state at the initial time        |
+----------------+-----------------------------------------------+
| INTEGRATOR_P   | Parameters                                    |
+----------------+-----------------------------------------------+
| INTEGRATOR_RX0 | Backward differential state at the final time |
+----------------+-----------------------------------------------+

>Output scheme: CasADi::IntegratorOutput (INTEGRATOR_NUM_OUT = 4)
+----------------+-------------------------------------------------+
|      Name      |                   Description                   |
+================+=================================================+
| INTEGRATOR_XF  | Differential state at the final time            |
+----------------+-------------------------------------------------+
| INTEGRATOR_QF  | Quadrature state at the final time              |
+----------------+-------------------------------------------------+
| INTEGRATOR_RXF | Backward differential state at the initial time |
+----------------+-------------------------------------------------+
| INTEGRATOR_RQF | Backward quadrature state at the initial time   |
+----------------+-------------------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| abstol       | OT_REAL      | 0.000        | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_iterat | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| ive_solver   |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_linear | OT_STRING    | \"dense\"      | (dense|bande | CasADi::Sund |
| _solver      |              |              | d|iterative) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_lower_ | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_max_kr | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
| ylov         |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_pretyp | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
| e            |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| asens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| asens_upper_ | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| bandwidth    |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| exact_jacobi | OT_BOOLEAN   | false        |              | CasADi::Sund |
| an           |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| finite_diffe | OT_BOOLEAN   | false        | use finite   | CasADi::Sund |
| rence_fsens  |              |              | differences  | ials::Sundia |
|              |              |              | to           | lsInternal   |
|              |              |              | approximate  |              |
|              |              |              | the forward  |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
|              |              |              | (if AD is    |              |
|              |              |              | not          |              |
|              |              |              | available)   |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_abstol | OT_REAL      |              | absolute     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | abstol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_err_co | OT_BOOLEAN   | true         | include the  | CasADi::Sund |
| n            |              |              | forward sens | ials::Sundia |
|              |              |              | itivities in | lsInternal   |
|              |              |              | all error    |              |
|              |              |              | controls     |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_reltol | OT_REAL      |              | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | forward      |              |
|              |              |              | sensitivity  |              |
|              |              |              | solution     |              |
|              |              |              | [default:    |              |
|              |              |              | equal to     |              |
|              |              |              | reltol]      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_scalin | OT_REALVECTO |              | scaling      | CasADi::Sund |
| g_factors    | R            |              | factor for   | ials::Sundia |
|              |              |              | the          | lsInternal   |
|              |              |              | components   |              |
|              |              |              | if finite    |              |
|              |              |              | differences  |              |
|              |              |              | is used      |              |
+--------------+--------------+--------------+--------------+--------------+
| fsens_sensit | OT_INTEGERVE |              | specifies    | CasADi::Sund |
| iviy_paramet | CTOR         |              | which        | ials::Sundia |
| ers          |              |              | components   | lsInternal   |
|              |              |              | will be used |              |
|              |              |              | when         |              |
|              |              |              | estimating   |              |
|              |              |              | the          |              |
|              |              |              | sensitivity  |              |
|              |              |              | equations    |              |
+--------------+--------------+--------------+--------------+--------------+
| interpolatio | OT_STRING    | \"hermite\"    | type of inte | CasADi::Sund |
| n_type       |              |              | rpolation    | ials::Sundia |
|              |              |              | for the      | lsInternal   |
|              |              |              | adjoint sens |              |
|              |              |              | itivities (h |              |
|              |              |              | ermite|polyn |              |
|              |              |              | omial)       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterative_so | OT_STRING    | \"gmres\"      | (gmres|bcgst | CasADi::Sund |
| lver         |              |              | ab|tfqmr)    | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_STRING    | \"dense\"      | (user_define | CasADi::Sund |
| r            |              |              | d|dense|band | ials::Sundia |
|              |              |              | ed|iterative | lsInternal   |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_LINEARSOL | GenericType( | An linear    | CasADi::Sund |
| r_creator    | VER          | )            | solver       | ials::Sundia |
|              |              |              | creator      | lsInternal   |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| linear_solve | OT_DICTIONAR | GenericType( | Options to   | CasADi::Sund |
| r_options    | Y            | )            | be passed to | ials::Sundia |
|              |              |              | the linear   | lsInternal   |
|              |              |              | solver       |              |
+--------------+--------------+--------------+--------------+--------------+
| lower_bandwi | OT_INTEGER   |              | lower band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| max_krylov   | OT_INTEGER   | 10           | maximum      | CasADi::Sund |
|              |              |              | krylov       | ials::Sundia |
|              |              |              | subspace     | lsInternal   |
|              |              |              | size         |              |
+--------------+--------------+--------------+--------------+--------------+
| max_multiste | OT_INTEGER   | 5            |              | CasADi::Sund |
| p_order      |              |              |              | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| max_num_step | OT_INTEGER   | 10000        | maximum      | CasADi::Sund |
| s            |              |              | number of    | ials::Sundia |
|              |              |              | steps        | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| nrhs         | OT_INTEGER   | 1            | number of    | CasADi::Inte |
|              |              |              | right hand   | gratorIntern |
|              |              |              | sides        | al           |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pretype      | OT_STRING    | \"none\"       | (none|left|r | CasADi::Sund |
|              |              |              | ight|both)   | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| print_stats  | OT_BOOLEAN   | false        | Print out    | CasADi::Inte |
|              |              |              | statistics   | gratorIntern |
|              |              |              | after        | al           |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| quad_err_con | OT_BOOLEAN   | false        | should the   | CasADi::Sund |
|              |              |              | quadratures  | ials::Sundia |
|              |              |              | affect the   | lsInternal   |
|              |              |              | step size    |              |
|              |              |              | control      |              |
+--------------+--------------+--------------+--------------+--------------+
| reltol       | OT_REAL      | 0.000        | relative     | CasADi::Sund |
|              |              |              | tolerence    | ials::Sundia |
|              |              |              | for the IVP  | lsInternal   |
|              |              |              | solution     |              |
+--------------+--------------+--------------+--------------+--------------+
| sensitivity_ | OT_STRING    | \"simultaneou | (simultaneou | CasADi::Sund |
| method       |              | s\"           | s|staggered) | ials::Sundia |
|              |              |              |              | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| steps_per_ch | OT_INTEGER   | 20           | number of    | CasADi::Sund |
| eckpoint     |              |              | steps        | ials::Sundia |
|              |              |              | between two  | lsInternal   |
|              |              |              | consecutive  |              |
|              |              |              | checkpoints  |              |
+--------------+--------------+--------------+--------------+--------------+
| stop_at_end  | OT_BOOLEAN   | false        | Stop the     | CasADi::Sund |
|              |              |              | integrator   | ials::Sundia |
|              |              |              | at the end   | lsInternal   |
|              |              |              | of the       |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| t0           | OT_REAL      | 0            | start of the | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| tf           | OT_REAL      | 1            | end of the   | CasADi::Inte |
|              |              |              | integration  | gratorIntern |
|              |              |              |              | al           |
+--------------+--------------+--------------+--------------+--------------+
| upper_bandwi | OT_INTEGER   |              | upper band-  | CasADi::Sund |
| dth          |              |              | width of     | ials::Sundia |
|              |              |              | banded       | lsInternal   |
|              |              |              | jacobians    |              |
+--------------+--------------+--------------+--------------+--------------+
| use_precondi | OT_BOOLEAN   | false        | precondition | CasADi::Sund |
| tioner       |              |              | an iterative | ials::Sundia |
|              |              |              | solver       | lsInternal   |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: sundials_internal.hpp ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::SundialsInternal
"

Constructor. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::~SundialsInternal
"

Destructor. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::init "

Initialize. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getJacobian "

Get the Jacobian. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getLinearSolver "

Get the Linear solver. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::jac "

Create an integrator which integrates the ODE/DAE augmented with the forward
sensitivity equations. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setStopTime "

Set stop time for the integration. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setInitialTime "

Set initial time (to be removed) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setFinalTime "

Set final time (to be removed) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::clone "

Clone. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::create "

Create a new integrator. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setLinearSolver "

Set linear solver. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::printStats "

Print solver statistics. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::reset "

Reset the solver and bring the time back to t0. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::resetAdj "

Reset the solver of the adjoint problem and take time to tf. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::integrate "

Integrate until a specified time point. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::integrateAdj "

Integrate backwards in time until a specified time point. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::evaluate "

evaluate ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::numeric_jacobian
"

Numeric Jacobian. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::print "

Print. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::repr "

Print. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")
CasADi::Sundials::SundialsInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")
CasADi::Sundials::SundialsInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::SundialsInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::Sundials::SundialsInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")
CasADi::Sundials::SundialsInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getOptionTypeName
"

Get the type name of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getOptionDefault
"

Get the default of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getOptionAllowed
"

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::Sundials::SundialsInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SuperLU.xml
%feature("docstring") CasADi::SuperLU "

LU LinearSolver with SuperLU Interface.

Solves the linear system A.x = b for x

This class solves the linear system A.x=b by making an LU factorization of
A:  A = L.U, with L lower and U upper triangular

SuperLU is an CasADi::FX mapping from 2 inputs [ A (matrix),b (vector)] to
one output [x (vector)].

The usual procedure to use SuperLU is:  init()

set the first input (A)

prepare()

set the second input (b)

solve()

Repeat steps 4 and 5 to work with other b vectors.

The method evaluate() combines the prepare() and solve() step and is
therefore more expensive if A is invariant.

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| colperm      | OT_STRING    | \"colamd\"     | Specifies    | CasADi::Supe |
|              |              |              | how to       | rLUInternal  |
|              |              |              | permute the  |              |
|              |              |              | columns of   |              |
|              |              |              | the matrix   |              |
|              |              |              | for sparsity |              |
|              |              |              | preservation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| conditionnum | OT_BOOLEAN   | false        |              | CasADi::Supe |
| ber          |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| diagpivotthr | OT_REAL      | 1            |              | CasADi::Supe |
| esh          |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| equil        | OT_BOOLEAN   | true         | Specifies    | CasADi::Supe |
|              |              |              | whether to   | rLUInternal  |
|              |              |              | equilibrate  |              |
|              |              |              | the system   |              |
|              |              |              | (scale As    |              |
|              |              |              | rows and     |              |
|              |              |              | columns to   |              |
|              |              |              | have unit    |              |
|              |              |              | norm).       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterrefine   | OT_STRING    | \"norefine\"   |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pivotgrowth  | OT_BOOLEAN   | false        |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| printstat    | OT_BOOLEAN   | true         |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| rowperm      | OT_STRING    | \"largediag\"  |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| symmetricmod | OT_BOOLEAN   | false        |              | CasADi::Supe |
| e            |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| user_work    | OT_BOOLEAN   | false        | keep work in | CasADi::Supe |
|              |              |              | memory       | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: superlu.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::SuperLU::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::SuperLU::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::SuperLU::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::SuperLU::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::SuperLU::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::SuperLU::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::SuperLU::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::SuperLU::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::SuperLU::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::SuperLU::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::SuperLU::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::SuperLU::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::SuperLU::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::SuperLU::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::SuperLU::getOption "

get an option value ";

%feature("docstring")  CasADi::SuperLU::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SuperLU::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SuperLU::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SuperLU::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SuperLU::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SuperLU::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::SuperLU::makeUnique "";

%feature("docstring")  CasADi::SuperLU::SuperLU "

Default (empty) constructor. ";

%feature("docstring")  CasADi::SuperLU::SuperLU "

Create a linear solver given a sparsity pattern. ";

%feature("docstring")  CasADi::SuperLU::setSparsity "

Set sparsity (before initialization) ";

%feature("docstring")  CasADi::SuperLU::prepare "

Factorize the matrix. ";

%feature("docstring")  CasADi::SuperLU::solve "

Solve the system of equations, internal vector. ";

%feature("docstring")  CasADi::SuperLU::solve "

Solve the factorized system of equations. ";

%feature("docstring")  CasADi::SuperLU::prepared "

Check if prepared. ";

%feature("docstring")  CasADi::SuperLU::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::SuperLU::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::SuperLU::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::SuperLU::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SuperLU::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SuperLU::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::SuperLU::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::SuperLU::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::SuperLU::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::SuperLU::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::SuperLU::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SuperLU::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SuperLU::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::SuperLU::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::SuperLU::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::SuperLU::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::SuperLU::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::SuperLU::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SuperLU::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SuperLU::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SuperLU::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SuperLU::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::SuperLU::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::SuperLU::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SuperLU::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::SuperLU::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SuperLU::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::SuperLU::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SuperLU::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SuperLU::indexed_one_based "";

%feature("docstring")  CasADi::SuperLU::indexed_zero_based "";

%feature("docstring")  CasADi::SuperLU::input "

Const access input argument. ";

%feature("docstring")  CasADi::SuperLU::input "

Access input argument. ";

%feature("docstring")  CasADi::SuperLU::output "

Const access input argument. ";

%feature("docstring")  CasADi::SuperLU::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::SuperLU::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SuperLU::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SuperLU::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLU::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLU::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SuperLU::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SuperLU::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLU::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLU::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SuperLU::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SuperLU::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::SuperLU::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::SuperLU::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SuperLU::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SuperLU::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SuperLU::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SuperLU::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SuperLU::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SuperLU::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SuperLU::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SuperLU::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SuperLU::clone "

Deep copy. ";

%feature("docstring")  CasADi::SuperLU::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::SuperLU::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::SuperLU::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::SuperLU::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::SuperLU::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SuperLU::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::SuperLU::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::SuperLU::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::SuperLU::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::SuperLU::isInit "

Is initialized? ";

%feature("docstring")  CasADi::SuperLU::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::SuperLU::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::SuperLU::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::SuperLU::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1SuperLUInternal.xml
%feature("docstring") CasADi::SuperLUInternal "

Solves the linear system A.x = b for x

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| colperm      | OT_STRING    | \"colamd\"     | Specifies    | CasADi::Supe |
|              |              |              | how to       | rLUInternal  |
|              |              |              | permute the  |              |
|              |              |              | columns of   |              |
|              |              |              | the matrix   |              |
|              |              |              | for sparsity |              |
|              |              |              | preservation |              |
|              |              |              | .            |              |
+--------------+--------------+--------------+--------------+--------------+
| conditionnum | OT_BOOLEAN   | false        |              | CasADi::Supe |
| ber          |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| diagpivotthr | OT_REAL      | 1            |              | CasADi::Supe |
| esh          |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| equil        | OT_BOOLEAN   | true         | Specifies    | CasADi::Supe |
|              |              |              | whether to   | rLUInternal  |
|              |              |              | equilibrate  |              |
|              |              |              | the system   |              |
|              |              |              | (scale As    |              |
|              |              |              | rows and     |              |
|              |              |              | columns to   |              |
|              |              |              | have unit    |              |
|              |              |              | norm).       |              |
+--------------+--------------+--------------+--------------+--------------+
| iterrefine   | OT_STRING    | \"norefine\"   |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| pivotgrowth  | OT_BOOLEAN   | false        |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| printstat    | OT_BOOLEAN   | true         |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| rowperm      | OT_STRING    | \"largediag\"  |              | CasADi::Supe |
|              |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| symmetricmod | OT_BOOLEAN   | false        |              | CasADi::Supe |
| e            |              |              |              | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| trans        | OT_BOOLEAN   | false        |              | CasADi::Line |
|              |              |              |              | arSolverInte |
|              |              |              |              | rnal         |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| user_work    | OT_BOOLEAN   | false        | keep work in | CasADi::Supe |
|              |              |              | memory       | rLUInternal  |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: superlu_internal.hpp ";

%feature("docstring")  CasADi::SuperLUInternal::SuperLUInternal "";

%feature("docstring")  CasADi::SuperLUInternal::SuperLUInternal "";

%feature("docstring")  CasADi::SuperLUInternal::~SuperLUInternal "";

%feature("docstring")  CasADi::SuperLUInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::SuperLUInternal::prepare "";

%feature("docstring")  CasADi::SuperLUInternal::solve "";

%feature("docstring")  CasADi::SuperLUInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::SuperLUInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::SuperLUInternal::solve "";

%feature("docstring")  CasADi::SuperLUInternal::nrow "";

%feature("docstring")  CasADi::SuperLUInternal::ncol "";

%feature("docstring")  CasADi::SuperLUInternal::nnz "";

%feature("docstring")  CasADi::SuperLUInternal::col "";

%feature("docstring")  CasADi::SuperLUInternal::rowind "";

%feature("docstring")  CasADi::SuperLUInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::SuperLUInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SuperLUInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::SuperLUInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::SuperLUInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SuperLUInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::SuperLUInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::SuperLUInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::SuperLUInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::SuperLUInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::SuperLUInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SuperLUInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SuperLUInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::SuperLUInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::SuperLUInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::SuperLUInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::SuperLUInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::SuperLUInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::SuperLUInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::SuperLUInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::SuperLUInternal::print "

Print. ";

%feature("docstring")  CasADi::SuperLUInternal::repr "

Print. ";

%feature("docstring")  CasADi::SuperLUInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::SuperLUInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::SuperLUInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::SuperLUInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::SuperLUInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::SuperLUInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::SuperLUInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::SuperLUInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SuperLUInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SuperLUInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLUInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLUInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SuperLUInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SuperLUInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLUInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SuperLUInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::SuperLUInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::SuperLUInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::SuperLUInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::SuperLUInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SuperLUInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SuperLUInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SuperLUInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SuperLUInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SuperLUInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SuperLUInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SuperLUInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SuperLUInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SuperLUInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::SuperLUInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::SuperLUInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::SuperLUInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::SuperLUInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SuperLUInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SuperLUInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SuperLUInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SuperLUInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SuperLUInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SuperLUInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SuperLUInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SuperLUInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SuperLUInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::SuperLUInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::SuperLUInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SuperLUInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SuperLUInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::SuperLUInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::SuperLUInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::SuperLUInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SuperLUInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SuperLUInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SuperLUInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SX.xml
%feature("docstring") CasADi::SX "

The basic scalar symbolic class of CasADi.

Joel Andersson

C++ includes: sx.hpp ";

%feature("docstring")  CasADi::SX::SX "

Constructors.

Default constructor (not-a-number)

Object is initialised as not-a-number. ";

%feature("docstring")  CasADi::SX::SX "

Numerical constant constructor.

Parameters:
-----------

val:  Numerical value ";

%feature("docstring")  CasADi::SX::SX "

Symbolic constructor.

Parameters:
-----------

name:  Name of the symbol

This is the name that wil be used by the \"operator<<\" and \"toSTring\"
methods. The name is not used as identifier; you may construct distinct SX
objects with non-unique names. ";

%feature("docstring")  CasADi::SX::SX "

Symbolic constructor.

Parameters:
-----------

Name:  of the symbol

This is the name that wil be used by the \"operator<<\" and \"toSTring\"
methods. The name is not used as identifier; you may construct distinct SX
objects with non-unique names. Create an expression from a node: extra dummy
argument to avoid ambigousity for 0/NULL ";

%feature("docstring")  CasADi::SX::SX "

Copy constructor. ";

%feature("docstring")  CasADi::SX::~SX "

Destructor. ";

%feature("docstring")  CasADi::SX::print "

print to stream, limited ";

%feature("docstring")  CasADi::SX::toString "

string representation (SWIG workaround) ";

%feature("docstring")  CasADi::SX::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::SX::isLeaf "

check if this SX is a leaf of the SX graph

An SX qualifies as leaf when it has no dependencies. ";

%feature("docstring")  CasADi::SX::isConstant "";

%feature("docstring")  CasADi::SX::isInteger "";

%feature("docstring")  CasADi::SX::isSymbolic "";

%feature("docstring")  CasADi::SX::hasDep "";

%feature("docstring")  CasADi::SX::isCommutative "

Check wether a binary SX is commutative. ";

%feature("docstring")  CasADi::SX::isZero "";

%feature("docstring")  CasADi::SX::isOne "";

%feature("docstring")  CasADi::SX::isMinusOne "";

%feature("docstring")  CasADi::SX::isNan "";

%feature("docstring")  CasADi::SX::isInf "";

%feature("docstring")  CasADi::SX::isMinusInf "";

%feature("docstring")  CasADi::SX::getName "";

%feature("docstring")  CasADi::SX::getOp "";

%feature("docstring")  CasADi::SX::isOp "";

%feature("docstring")  CasADi::SX::isEqual "";

%feature("docstring")  CasADi::SX::getValue "";

%feature("docstring")  CasADi::SX::getIntValue "";

%feature("docstring")  CasADi::SX::getDep "";

%feature("docstring")  CasADi::SX::isDoubled "

Check if the node is the sum of two equal expressions. ";

%feature("docstring")  CasADi::SX::isSquared "

Check if the node is an even square. ";

%feature("docstring")  CasADi::SX::getNdeps "

Get the number of dependencies of a binary SX. ";

%feature("docstring")  CasADi::SX::isEquivalent "

Check if two nodes are equivalent up to a given depth a = x*x b = x*x.

a.isEqual(b) will return false, but a.isEquivalent(b) will return true ";

%feature("docstring")  CasADi::SX::__hash__ "

Returns a number that is unique for a given SXNode. If the SX does not point
to any node, 0 is returned. ";

%feature("docstring")  CasADi::SX::__add__ "";

%feature("docstring")  CasADi::SX::__sub__ "";

%feature("docstring")  CasADi::SX::__mul__ "";

%feature("docstring")  CasADi::SX::__div__ "";

%feature("docstring")  CasADi::SX::__pow__ "";

%feature("docstring")  CasADi::SX::__constpow__ "";

%feature("docstring")  CasADi::SX::__mrdivide__ "";

%feature("docstring")  CasADi::SX::__mpower__ "";

%feature("docstring")  CasADi::SX::trans "";

%feature("docstring")  CasADi::SX::mul "

The following functions serves two purposes: Numpy compatibility and to
allow unambigous access. ";

%feature("docstring")  CasADi::SX::exp "";

%feature("docstring")  CasADi::SX::log "";

%feature("docstring")  CasADi::SX::sqrt "";

%feature("docstring")  CasADi::SX::sin "";

%feature("docstring")  CasADi::SX::cos "";

%feature("docstring")  CasADi::SX::tan "";

%feature("docstring")  CasADi::SX::arcsin "";

%feature("docstring")  CasADi::SX::arccos "";

%feature("docstring")  CasADi::SX::arctan "";

%feature("docstring")  CasADi::SX::floor "";

%feature("docstring")  CasADi::SX::ceil "";

%feature("docstring")  CasADi::SX::erf "";

%feature("docstring")  CasADi::SX::erfinv "";

%feature("docstring")  CasADi::SX::fabs "";

%feature("docstring")  CasADi::SX::fmin "";

%feature("docstring")  CasADi::SX::fmax "";

%feature("docstring")  CasADi::SX::inv "";

%feature("docstring")  CasADi::SX::sinh "";

%feature("docstring")  CasADi::SX::cosh "";

%feature("docstring")  CasADi::SX::tanh "";

%feature("docstring")  CasADi::SX::arctan2 "";

%feature("docstring")  CasADi::SX::log10 "";

%feature("docstring")  CasADi::SX::printme "";

%feature("docstring")  CasADi::SX::sign "";

%feature("docstring")  CasADi::SX::constpow "";

%feature("docstring")  CasADi::SX::__add__ "";

%feature("docstring")  CasADi::SX::__sub__ "";

%feature("docstring")  CasADi::SX::__mul__ "";

%feature("docstring")  CasADi::SX::__div__ "";

%feature("docstring")  CasADi::SX::fmin "";

%feature("docstring")  CasADi::SX::fmax "";

%feature("docstring")  CasADi::SX::constpow "";

%feature("docstring")  CasADi::SX::arctan2 "";

%feature("docstring")  CasADi::SX::getTemp "";

%feature("docstring")  CasADi::SX::setTemp "";

%feature("docstring")  CasADi::SX::marked "";

%feature("docstring")  CasADi::SX::mark "";

%feature("docstring")  CasADi::SX::assignNoDelete "

Assign the node to something, without invoking the deletion of the node, if
the count reaches 0. ";

%feature("docstring")  CasADi::SX::__mldivide__ "

Matrix division from left. ";


// File: structCasADi_1_1SXAlgEl.xml
%feature("docstring") CasADi::SXAlgEl "

An atomic operation for the SX virtual machine.

C++ includes: sx_function.hpp ";


// File: classCasADi_1_1SXFunction.xml
%feature("docstring") CasADi::SXFunction "

Dynamically created function that can be expanded into a series of scalar
operations.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| inplace      | OT_BOOLEAN   | false        | Evaluate     | CasADi::SXFu |
|              |              |              | with inplace | nctionIntern |
|              |              |              | operations ( | al           |
|              |              |              | experimental |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| just_in_time | OT_BOOLEAN   | false        | Just-in-time | CasADi::SXFu |
|              |              |              | compilation  | nctionIntern |
|              |              |              | for numeric  | al           |
|              |              |              | evaluation ( |              |
|              |              |              | experimental |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| live_variabl | OT_BOOLEAN   | true         | Reuse        | CasADi::SXFu |
| es           |              |              | variables in | nctionIntern |
|              |              |              | the work     | al           |
|              |              |              | vector       |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: sx_function.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::SXFunction::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::SXFunction::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::SXFunction::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::SXFunction::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::SXFunction::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::SXFunction::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::SXFunction::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::SXFunction::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::SXFunction::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::SXFunction::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::SXFunction::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::SXFunction::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::SXFunction::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::SXFunction::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::SXFunction::getOption "

get an option value ";

%feature("docstring")  CasADi::SXFunction::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SXFunction::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SXFunction::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SXFunction::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SXFunction::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SXFunction::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::SXFunction::makeUnique "";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Default constructor. ";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Expand an MXFunction. ";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Multiple (matrix valued) input, multiple (matrix valued) output. ";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Multiple (vector valued) input, multiple (vector valued) output. ";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Single (scalar/matrix/vector valued) input, single (scalar/matrix/vector
valued) output. ";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Multiple (vector valued) input, single (scalar/vector/matrix valued) output.
";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Multiple (matrix valued) input, single (scalar/vector/matrix valued) output.
";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Single (scalar/vector/matrix valued) input, multiple (vector valued) output.
";

%feature("docstring")  CasADi::SXFunction::SXFunction "

Single (scalar/vector/matrix valued) input, multiple (matrix valued) output.
";

%feature("docstring")  CasADi::SXFunction::jacobian "

Calculate the jacobian of output oind with respect to input iind.

This is just the result of CasADi::SXFunction::jac, wrapped in an
SXFunction.

See:   CasADi::Jacobian for an AD approach ";

%feature("docstring")  CasADi::SXFunction::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SXFunction::jac "

Jacobian via source code transformation.

See:   CasADi::Jacobian for an AD approach ";

%feature("docstring")  CasADi::SXFunction::grad "

Gradient via source code transformation. ";

%feature("docstring")  CasADi::SXFunction::hess "

Hessian (forward over adjoint) via source code transformation. ";

%feature("docstring")  CasADi::SXFunction::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::SXFunction::inputSX "

get function input ";

%feature("docstring")  CasADi::SXFunction::outputSX "

get function output ";

%feature("docstring")  CasADi::SXFunction::inputsSX "

get function inputs ";

%feature("docstring")  CasADi::SXFunction::outputsSX "

get function outputs ";

%feature("docstring")  CasADi::SXFunction::generateCode "

Export / Generate C code for the function. ";

%feature("docstring")  CasADi::SXFunction::algorithm "

Access the algorithm directly. ";

%feature("docstring")  CasADi::SXFunction::getAlgorithmSize "

Get the number of atomic operations. ";

%feature("docstring")  CasADi::SXFunction::getAtomicOperation "

Get an atomic operation operator index. ";

%feature("docstring")  CasADi::SXFunction::getAtomicInput "

Get the (integer) input arguments of an atomic operation. ";

%feature("docstring")  CasADi::SXFunction::getAtomicInputReal "

Get the floating point output argument of an atomic operation. ";

%feature("docstring")  CasADi::SXFunction::getAtomicOutput "

Get the (integer) output argument of an atomic operation. ";

%feature("docstring")  CasADi::SXFunction::countNodes "

Number of nodes in the algorithm. ";

%feature("docstring")  CasADi::SXFunction::clearSymbolic "

Clear the function from its symbolic representation, to free up memory, no
symbolic evaluations are possible after this. ";

%feature("docstring")  CasADi::SXFunction::getFree "

Get all the free variables of the function. ";

%feature("docstring")  CasADi::SXFunction::indexed_one_based "";

%feature("docstring")  CasADi::SXFunction::indexed_zero_based "";

%feature("docstring")  CasADi::SXFunction::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::SXFunction::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::SXFunction::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SXFunction::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SXFunction::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::SXFunction::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::SXFunction::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::SXFunction::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::SXFunction::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::SXFunction::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SXFunction::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::SXFunction::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::SXFunction::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::SXFunction::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::SXFunction::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::SXFunction::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SXFunction::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SXFunction::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SXFunction::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SXFunction::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::SXFunction::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::SXFunction::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SXFunction::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::SXFunction::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::SXFunction::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::SXFunction::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SXFunction::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SXFunction::input "

Const access input argument. ";

%feature("docstring")  CasADi::SXFunction::input "

Access input argument. ";

%feature("docstring")  CasADi::SXFunction::output "

Const access input argument. ";

%feature("docstring")  CasADi::SXFunction::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::SXFunction::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SXFunction::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SXFunction::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunction::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunction::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SXFunction::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SXFunction::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunction::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunction::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SXFunction::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SXFunction::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::SXFunction::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::SXFunction::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SXFunction::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SXFunction::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::SXFunction::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SXFunction::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SXFunction::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SXFunction::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SXFunction::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SXFunction::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SXFunction::clone "

Deep copy. ";

%feature("docstring")  CasADi::SXFunction::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::SXFunction::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::SXFunction::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::SXFunction::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::SXFunction::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SXFunction::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::SXFunction::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::SXFunction::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::SXFunction::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::SXFunction::isInit "

Is initialized? ";

%feature("docstring")  CasADi::SXFunction::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::SXFunction::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::SXFunction::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::SXFunction::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1SXFunctionInternal.xml
%feature("docstring") CasADi::SXFunctionInternal "

Internal node class for SXFunction A regular user should never work with any
Node class. Use SXFunction directly.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| inplace      | OT_BOOLEAN   | false        | Evaluate     | CasADi::SXFu |
|              |              |              | with inplace | nctionIntern |
|              |              |              | operations ( | al           |
|              |              |              | experimental |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| just_in_time | OT_BOOLEAN   | false        | Just-in-time | CasADi::SXFu |
|              |              |              | compilation  | nctionIntern |
|              |              |              | for numeric  | al           |
|              |              |              | evaluation ( |              |
|              |              |              | experimental |              |
|              |              |              | )            |              |
+--------------+--------------+--------------+--------------+--------------+
| live_variabl | OT_BOOLEAN   | true         | Reuse        | CasADi::SXFu |
| es           |              |              | variables in | nctionIntern |
|              |              |              | the work     | al           |
|              |              |              | vector       |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

C++ includes: sx_function_internal.hpp ";

%feature("docstring")  CasADi::SXFunctionInternal::clone "

Make a deep copy. ";

%feature("docstring")  CasADi::SXFunctionInternal::~SXFunctionInternal "

Destructor. ";

%feature("docstring")  CasADi::SXFunctionInternal::evaluate "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::SXFunctionInternal::evaluateGen1 "

Evaluate the function numerically, first argument generic. ";

%feature("docstring")  CasADi::SXFunctionInternal::evaluateGen "

Evaluate the function numerically, both arguments generic. ";

%feature("docstring")  CasADi::SXFunctionInternal::evalSX "

evaluate symbolically while also propagating directional derivatives ";

%feature("docstring")  CasADi::SXFunctionInternal::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::SXFunctionInternal::print "

Print the algorithm. ";

%feature("docstring")  CasADi::SXFunctionInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::SXFunctionInternal::jac "

Calculate the expression for the jacobian of a number of function outputs
with respect to a number of function inputs, optionally include the function
outputs. ";

%feature("docstring")  CasADi::SXFunctionInternal::grad "

Gradient via source code transformation. ";

%feature("docstring")  CasADi::SXFunctionInternal::hess "

Hessian (forward over adjoint) via source code transformation. ";

%feature("docstring")  CasADi::SXFunctionInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::SXFunctionInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::SXFunctionInternal::init "

Initialize. ";

%feature("docstring")  CasADi::SXFunctionInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization.
";

%feature("docstring")  CasADi::SXFunctionInternal::generateCode "

Print to a c file. ";

%feature("docstring")  CasADi::SXFunctionInternal::clearSymbolic "

Clear the function from its symbolic representation, to free up memory, no
symbolic evaluations are possible after this. ";

%feature("docstring")  CasADi::SXFunctionInternal::spEvaluate "

Propagate a sparsity pattern through the algorithm. ";

%feature("docstring")  CasADi::SXFunctionInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::SXFunctionInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::SXFunctionInternal::jacGen "

Construct a complete Jacobian by compression. ";

%feature("docstring")  CasADi::SXFunctionInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::SXFunctionInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::SXFunctionInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::SXFunctionInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::SXFunctionInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::SXFunctionInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::SXFunctionInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::SXFunctionInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::SXFunctionInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::SXFunctionInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::SXFunctionInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::SXFunctionInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::SXFunctionInternal::repr "

Print. ";

%feature("docstring")  CasADi::SXFunctionInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::SXFunctionInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::SXFunctionInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::SXFunctionInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::SXFunctionInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::SXFunctionInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::SXFunctionInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::SXFunctionInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::SXFunctionInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::SXFunctionInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunctionInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunctionInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::SXFunctionInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::SXFunctionInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunctionInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::SXFunctionInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::SXFunctionInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::SXFunctionInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::SXFunctionInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::SXFunctionInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::SXFunctionInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::SXFunctionInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SXFunctionInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::SXFunctionInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SXFunctionInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SXFunctionInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::SXFunctionInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SXFunctionInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::SXFunctionInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::SXFunctionInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::SXFunctionInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::SXFunctionInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::SXFunctionInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::SXFunctionInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::SXFunctionInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::SXFunctionInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::SXFunctionInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::SXFunctionInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::SXFunctionInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::SXFunctionInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::SXFunctionInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::SXFunctionInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::SXFunctionInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::SXFunctionInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::SXFunctionInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::SXFunctionInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::SXFunctionInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::SXFunctionInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::SXFunctionInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SXFunctionInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SXFunctionInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SXFunctionInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SXNode.xml
%feature("docstring") CasADi::SXNode "

Interal node class for SX.

Joel Andersson

C++ includes: sx_node.hpp ";

%feature("docstring")  CasADi::SXNode::isConstant "

check properties of a node ";

%feature("docstring")  CasADi::SXNode::isInteger "";

%feature("docstring")  CasADi::SXNode::isSymbolic "";

%feature("docstring")  CasADi::SXNode::hasDep "";

%feature("docstring")  CasADi::SXNode::isZero "";

%feature("docstring")  CasADi::SXNode::isOne "";

%feature("docstring")  CasADi::SXNode::isMinusOne "";

%feature("docstring")  CasADi::SXNode::isNan "";

%feature("docstring")  CasADi::SXNode::isInf "";

%feature("docstring")  CasADi::SXNode::isMinusInf "";

%feature("docstring")  CasADi::SXNode::getValue "

Get value of a constant node. ";

%feature("docstring")  CasADi::SXNode::getIntValue "";

%feature("docstring")  CasADi::SXNode::SXNode "

constructor ";

%feature("docstring")  CasADi::SXNode::~SXNode "

destructor ";

%feature("docstring")  CasADi::SXNode::getName "";

%feature("docstring")  CasADi::SXNode::getOp "

get the operation only for binary nodes ";

%feature("docstring")  CasADi::SXNode::isEqual "

comparison ";

%feature("docstring")  CasADi::SXNode::isEqual "

comparison ";

%feature("docstring")  CasADi::SXNode::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::SXNode::dep "

get the reference of a child ";

%feature("docstring")  CasADi::SXNode::dep "

get the reference of a child ";

%feature("docstring")  CasADi::SXNode::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::SXNode::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::SXNode::print "

print ";

%feature("docstring")  CasADi::SXNode::print "

print ";

%feature("docstring")  CasADi::SXNode::marked "";

%feature("docstring")  CasADi::SXNode::mark "";


// File: classCasADi_1_1SymbolicMX.xml
%feature("docstring") CasADi::SymbolicMX "

Represents a symbolic MX.

Joel Andersson

C++ includes: symbolic_mx.hpp ";

%feature("docstring")  CasADi::SymbolicMX::SymbolicMX "

Constructors. ";

%feature("docstring")  CasADi::SymbolicMX::SymbolicMX "

Constructors. ";

%feature("docstring")  CasADi::SymbolicMX::clone "

Clone function. ";

%feature("docstring")  CasADi::SymbolicMX::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::SymbolicMX::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::SymbolicMX::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::SymbolicMX::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::SymbolicMX::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::SymbolicMX::isSymbolic "

Is symbolic. ";

%feature("docstring")  CasADi::SymbolicMX::getName "

Get the name. ";

%feature("docstring")  CasADi::SymbolicMX::eval "

Symbolic evaluation (matrix graph) ";

%feature("docstring")  CasADi::SymbolicMX::partial "

Partial derivatives. ";

%feature("docstring")  CasADi::SymbolicMX::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::SymbolicMX::repr "

Print a representation. ";

%feature("docstring")  CasADi::SymbolicMX::print "

Print a description. ";

%feature("docstring")  CasADi::SymbolicMX::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::SymbolicMX::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::SymbolicMX::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::SymbolicMX::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::SymbolicMX::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::SymbolicMX::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::SymbolicMX::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::SymbolicMX::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::SymbolicMX::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::SymbolicMX::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::SymbolicMX::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::SymbolicMX::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::SymbolicMX::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::SymbolicMX::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::SymbolicMX::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::SymbolicMX::dep "";

%feature("docstring")  CasADi::SymbolicMX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::SymbolicMX::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::SymbolicMX::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::SymbolicMX::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::SymbolicMX::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::SymbolicMX::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::SymbolicMX::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::SymbolicMX::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::SymbolicMX::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::SymbolicMX::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::SymbolicMX::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::SymbolicMX::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::SymbolicMX::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::SymbolicMX::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::SymbolicMX::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::SymbolicMX::numel "

Number of elements. ";

%feature("docstring")  CasADi::SymbolicMX::size "

Get size. ";

%feature("docstring")  CasADi::SymbolicMX::size1 "

Get size. ";

%feature("docstring")  CasADi::SymbolicMX::size2 "

Get size. ";

%feature("docstring")  CasADi::SymbolicMX::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::SymbolicMX::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::SymbolicMX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::SymbolicMX::init "

Initialize the object. ";

%feature("docstring")  CasADi::SymbolicMX::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::SymbolicMX::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1SymbolicNLP.xml
%feature("docstring") CasADi::SymbolicNLP "

A symbolic NLP representation.

Joel Andersson

C++ includes: symbolic_nlp.hpp ";

/*  Symbolic representation of the NLP  */

/* Data members

*/

%feature("docstring")  CasADi::SymbolicNLP::parseNL "

Parse an AMPL och PyOmo NL-file. ";

%feature("docstring")  CasADi::SymbolicNLP::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::SymbolicNLP::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::SymbolicNLP::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::SymbolicNLP::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1SymbolicOCP.xml
%feature("docstring") CasADi::SymbolicOCP "

A flat OCP representation coupled to an XML file.

Variables:

t :     time    x :     differential and algebraic states defined by a
fully-implicit DAE    xd:     differential states defined by an explicit ODE
xa:     algebraic states defined by an algebraic equation    q :
quadrature states    y :     dependent variables p :     independent
parameters    u :     control signals

Equations:

fully implicit DAE:       0 = dae(t,x,\\\\dot{x},xd,xa,u,p) explicit ODE:
\\\\dot{xd} = ode(t,x,xd,xa,u,p)   quadratures: \\\\dot{q} =
quad(t,x,xd,xa,u,p)   algebraic equations:      0 = alg(t,x,xd,xa,u,p)
dependent equations:      y = dep(t,x,xd,xa,u,p) initial equations:        0
= initial(t,x,\\\\dot{x},xd,xa,u,p)

Objective function terms:

Mayer terms:          \\\\sum{mterm_k}   Lagrange terms:
\\\\sum{\\\\integral{mterm}}

Note that when parsed, all dynamic states, differential and algebraic, end
up in the category \"x\" and all dynamic equations end up in the implicit
category \"dae\". At a later state, the DAE can be reformulated, for example
in semi-explicit form, possibly in addition to a set of quadrature states.

Also note that division of the states into three categories for states
defined by a DAE, states defined by an ODE and states defined by an
algebraic equation. The category \"xd\" does thus _not_ include differential
states that are implicitly defined by the DAE.

The functions for reformulation is are provided as member functions to this
class or as independent functions located in the header file
\"ocp_tools.hpp\".

Usage skeleton:

1. Call default constructor > SymbolicOCP ocp;

2. Parse an FMI conformant XML file  > ocp.parseFMI(xml_file_name)

3. Modify/add variables, equations, optimization  > ...

When the optimal control problem is in a suitable form, it is possible to
either generate functions for numeric/symbolic evaluation or exporting the
OCP formulation into a new FMI conformant XML file. The latter functionality
is not yet available.

Joel Andersson

C++ includes: symbolic_ocp.hpp ";

/*  Variables categories  */

/* Public data members

*/

/*  Equations  */

/* Get all equations of a particular type

*/

/*  Time points  */

/*  Objective function terms  */

/* Terms in the objective function.

*/

/*  Constraints of the optimal control problem  */

/*  Manipulation  */

/* Reformulate the dynamic optimization problem.

*/

%feature("docstring")  CasADi::SymbolicOCP::eliminateInterdependencies "

Eliminate interdependencies in the dependent equations. ";

%feature("docstring")  CasADi::SymbolicOCP::eliminateDependent "

Eliminate dependent equations, by default sparing the dependent variables
with upper or lower bounds. ";

%feature("docstring")  CasADi::SymbolicOCP::eliminateLagrangeTerms "

Eliminate Lagrange terms from the objective function and make them
quadrature states. ";

%feature("docstring")  CasADi::SymbolicOCP::eliminateQuadratureStates "

Eliminate quadrature states and turn them into ODE states. ";

%feature("docstring")  CasADi::SymbolicOCP::sortDAE "

Sort the DAE equations and variables. ";

%feature("docstring")  CasADi::SymbolicOCP::makeExplicit "

Transform the fully implicit DAE to a explicit or semi-explicit form. ";

%feature("docstring")  CasADi::SymbolicOCP::daeArg "

Get the ODE/DAE input arguments Returns a vector of inputs using the
following scheme:

>Input scheme: CasADi::DAEInput (DAE_NUM_IN = 5)
+----------+----------------------------------------+
|   Name   |              Description               |
+==========+========================================+
| DAE_X    | Differential state                     |
+----------+----------------------------------------+
| DAE_Z    | Algebraic state                        |
+----------+----------------------------------------+
| DAE_P    | Parameter                              |
+----------+----------------------------------------+
| DAE_T    | Explicit time dependence               |
+----------+----------------------------------------+
| DAE_XDOT | Time derivative of differential states |
+----------+----------------------------------------+
";

%feature("docstring")  CasADi::SymbolicOCP::substituteDependents "

Substitute the dependents from a set of expressions. ";

%feature("docstring")  CasADi::SymbolicOCP::generateMuscodDatFile "

Generate a MUSCOD-II compatible DAT file. ";

%feature("docstring")  CasADi::SymbolicOCP::SymbolicOCP "

Default constructor. ";

%feature("docstring")  CasADi::SymbolicOCP::parseFMI "

Parse from XML to C++ format. ";

%feature("docstring")  CasADi::SymbolicOCP::addVariable "

Add a variable. ";

%feature("docstring")  CasADi::SymbolicOCP::variable "

Access a variable by name. ";

%feature("docstring")  CasADi::SymbolicOCP::makeAlgebraic "

Make a differential state algebraic by replacing its time derivative by 0.
";

%feature("docstring")  CasADi::SymbolicOCP::makeAlgebraic "

Make a differential state algebraic by replacing its time derivative by 0.
";

%feature("docstring")  CasADi::SymbolicOCP::x_all "

All states, differential and algebraic (includes x, xd and xa) ";

%feature("docstring")  CasADi::SymbolicOCP::readExpr "

Read an equation. ";

%feature("docstring")  CasADi::SymbolicOCP::readVariable "

Read a variable. ";

%feature("docstring")  CasADi::SymbolicOCP::sortType "

Sort variables according to type. ";

%feature("docstring")  CasADi::SymbolicOCP::scaleVariables "

Scale the variables. ";

%feature("docstring")  CasADi::SymbolicOCP::scaleEquations "

Scale the implicit equations. ";

%feature("docstring")  CasADi::SymbolicOCP::repr "

Print representation. ";

%feature("docstring")  CasADi::SymbolicOCP::print "

Print description. ";

%feature("docstring")  CasADi::SymbolicOCP::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::SymbolicOCP::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1SymbolicSX.xml
%feature("docstring") CasADi::SymbolicSX "

Represents a scalar symbolic expression.

Joel Andersson

C++ includes: symbolic_sx.hpp ";

%feature("docstring")  CasADi::SymbolicSX::isConstant "

check properties of a node ";

%feature("docstring")  CasADi::SymbolicSX::isInteger "";

%feature("docstring")  CasADi::SymbolicSX::hasDep "";

%feature("docstring")  CasADi::SymbolicSX::isZero "";

%feature("docstring")  CasADi::SymbolicSX::isOne "";

%feature("docstring")  CasADi::SymbolicSX::isMinusOne "";

%feature("docstring")  CasADi::SymbolicSX::isNan "";

%feature("docstring")  CasADi::SymbolicSX::isInf "";

%feature("docstring")  CasADi::SymbolicSX::isMinusInf "";

%feature("docstring")  CasADi::SymbolicSX::getValue "

Get value of a constant node. ";

%feature("docstring")  CasADi::SymbolicSX::getIntValue "";

%feature("docstring")  CasADi::SymbolicSX::SymbolicSX "";

%feature("docstring")  CasADi::SymbolicSX::~SymbolicSX "";

%feature("docstring")  CasADi::SymbolicSX::isSymbolic "";

%feature("docstring")  CasADi::SymbolicSX::getName "";

%feature("docstring")  CasADi::SymbolicSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::SymbolicSX::isEqual "

comparison ";

%feature("docstring")  CasADi::SymbolicSX::isEqual "

comparison ";

%feature("docstring")  CasADi::SymbolicSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::SymbolicSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::SymbolicSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::SymbolicSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::SymbolicSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::SymbolicSX::print "

print ";

%feature("docstring")  CasADi::SymbolicSX::marked "";

%feature("docstring")  CasADi::SymbolicSX::mark "";


// File: structCasADi_1_1SXFunctionInternal_1_1TapeEl.xml
%feature("docstring") CasADi::SXFunctionInternal::TapeEl "

An elemenent of the tape.

C++ includes: sx_function_internal.hpp ";


// File: classCasADi_1_1UnaryMX.xml
%feature("docstring") CasADi::UnaryMX "

Represents a general unary operation on an MX.

Joel Andersson

C++ includes: unary_mx.hpp ";

%feature("docstring")  CasADi::UnaryMX::UnaryMX "

Constructor. ";

%feature("docstring")  CasADi::UnaryMX::~UnaryMX "

Destructor. ";

%feature("docstring")  CasADi::UnaryMX::clone "

Clone function. ";

%feature("docstring")  CasADi::UnaryMX::printPart "

Print a part of the expression. ";

%feature("docstring")  CasADi::UnaryMX::evaluateD "

Evaluate the function numerically. ";

%feature("docstring")  CasADi::UnaryMX::evaluateSX "

Evaluate the function symbolically ( SX) ";

%feature("docstring")  CasADi::UnaryMX::evaluateMX "

Evaluate the function symbolically ( MX) ";

%feature("docstring")  CasADi::UnaryMX::propagateSparsity "

Propagate sparsity. ";

%feature("docstring")  CasADi::UnaryMX::isOperation "

Is it a certain operation. ";

%feature("docstring")  CasADi::UnaryMX::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::UnaryMX::repr "

Print a representation. ";

%feature("docstring")  CasADi::UnaryMX::print "

Print a description. ";

%feature("docstring")  CasADi::UnaryMX::print "

Print expression (make sure number of calls is not exceeded) ";

%feature("docstring")  CasADi::UnaryMX::evaluateD "

Evaluate the function, no derivatives. ";

%feature("docstring")  CasADi::UnaryMX::evaluateSX "

Evaluate symbolically ( SX), no derivatives. ";

%feature("docstring")  CasADi::UnaryMX::evaluateMX "

Evaluate symbolically ( MX), no derivatives. ";

%feature("docstring")  CasADi::UnaryMX::getName "

Get the name. ";

%feature("docstring")  CasADi::UnaryMX::isSymbolic "

Check if symbolic. ";

%feature("docstring")  CasADi::UnaryMX::isConstant "

Check if constant. ";

%feature("docstring")  CasADi::UnaryMX::isMapping "

Check if mapping. ";

%feature("docstring")  CasADi::UnaryMX::isEvaluation "

Check if evaluation. ";

%feature("docstring")  CasADi::UnaryMX::isOutputNode "

Check if evaluation output. ";

%feature("docstring")  CasADi::UnaryMX::isMultipleOutput "

Check if a multiple output node. ";

%feature("docstring")  CasADi::UnaryMX::isJacobian "

Check if jacobian reference. ";

%feature("docstring")  CasADi::UnaryMX::isMultiplication "

Check if matrix multiplication. ";

%feature("docstring")  CasADi::UnaryMX::getFunction "

Get function reference. ";

%feature("docstring")  CasADi::UnaryMX::getFunctionInput "

Get function input. ";

%feature("docstring")  CasADi::UnaryMX::getFunctionOutput "

Get function output. ";

%feature("docstring")  CasADi::UnaryMX::dep "

dependencies - functions that have to be evaluated before this one ";

%feature("docstring")  CasADi::UnaryMX::dep "";

%feature("docstring")  CasADi::UnaryMX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::UnaryMX::hasDep "

Does the node depend on other nodes. ";

%feature("docstring")  CasADi::UnaryMX::getNumOutputs "

Number of outputs. ";

%feature("docstring")  CasADi::UnaryMX::sparsity "

Get the sparsity. ";

%feature("docstring")  CasADi::UnaryMX::sparsity "

Get the sparsity of output oind. ";

%feature("docstring")  CasADi::UnaryMX::isNonLinear "

Is the node nonlinear. ";

%feature("docstring")  CasADi::UnaryMX::setSparsity "

Set the sparsity. ";

%feature("docstring")  CasADi::UnaryMX::setDependencies "

Set unary dependency. ";

%feature("docstring")  CasADi::UnaryMX::setDependencies "

Set binary dependencies. ";

%feature("docstring")  CasADi::UnaryMX::setDependencies "

Set ternary dependencies. ";

%feature("docstring")  CasADi::UnaryMX::setDependencies "

Set multiple dependencies. ";

%feature("docstring")  CasADi::UnaryMX::addDependency "

Add a dependency. ";

%feature("docstring")  CasADi::UnaryMX::assign "

Assign nonzeros (mapping matrix) ";

%feature("docstring")  CasADi::UnaryMX::assign "

Assign nonzeros (mapping matrix), output indices sequential. ";

%feature("docstring")  CasADi::UnaryMX::numel "

Number of elements. ";

%feature("docstring")  CasADi::UnaryMX::size "

Get size. ";

%feature("docstring")  CasADi::UnaryMX::size1 "

Get size. ";

%feature("docstring")  CasADi::UnaryMX::size2 "

Get size. ";

%feature("docstring")  CasADi::UnaryMX::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::UnaryMX::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::UnaryMX::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::UnaryMX::init "

Initialize the object. ";

%feature("docstring")  CasADi::UnaryMX::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::UnaryMX::assertInit "

Assert that the object has been initialized. ";


// File: structCasADi_1_1UnaryOperation.xml
%feature("docstring") CasADi::UnaryOperation "C++ includes:
casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__ACOS_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_ACOS > "

Arcus cosine.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__ASIN_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_ASIN > "

Arcus sine.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__ASSIGN_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_ASSIGN > "

Simple assignment.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__ATAN_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_ATAN > "

Arcus tangent.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__CEIL_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_CEIL > "

Ceil function.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__COS_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_COS > "

Cosine.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__COSH_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_COSH > "

Hyperbolic cosine.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__ERF_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_ERF > "

Error function.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__ERFINV_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_ERFINV > "

Inverse of error function.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__EXP_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_EXP > "

Natural exponent.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__FABS_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_FABS > "

Absolute value.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__FLOOR_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_FLOOR > "

Floor function.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__INV_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_INV > "

Elementwise inverse.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__LOG_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_LOG > "

Natural logarithm.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__NEG_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_NEG > "

Negation.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__SIGN_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_SIGN > "

Sign.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__SIN_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_SIN > "

Sine.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__SINH_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_SINH > "

Hyperbolic sine.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__SQRT_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_SQRT > "

Square root.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__STEP_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_STEP > "

Step function.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__TAN_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_TAN > "

Tangent.

C++ includes: casadi_calculus.hpp ";


// File: structCasADi_1_1UnaryOperation_3_01OP__TANH_01_4.xml
%feature("docstring") CasADi::UnaryOperation< OP_TANH > "

Hyperbolic tangent.

C++ includes: casadi_calculus.hpp ";


// File: classCasADi_1_1UnarySX.xml
%feature("docstring") CasADi::UnarySX "

Represents a basic unary operation on an SX node.

Joel Andersson

C++ includes: unary_sx.hpp ";

%feature("docstring")  CasADi::UnarySX::isConstant "

check properties of a node ";

%feature("docstring")  CasADi::UnarySX::isInteger "";

%feature("docstring")  CasADi::UnarySX::isSymbolic "";

%feature("docstring")  CasADi::UnarySX::isZero "";

%feature("docstring")  CasADi::UnarySX::isOne "";

%feature("docstring")  CasADi::UnarySX::isMinusOne "";

%feature("docstring")  CasADi::UnarySX::isNan "";

%feature("docstring")  CasADi::UnarySX::isInf "";

%feature("docstring")  CasADi::UnarySX::isMinusInf "";

%feature("docstring")  CasADi::UnarySX::getValue "

Get value of a constant node. ";

%feature("docstring")  CasADi::UnarySX::getIntValue "";

%feature("docstring")  CasADi::UnarySX::~UnarySX "

Destructor. ";

%feature("docstring")  CasADi::UnarySX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::UnarySX::hasDep "";

%feature("docstring")  CasADi::UnarySX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::UnarySX::dep "

get the reference of a dependency ";

%feature("docstring")  CasADi::UnarySX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::UnarySX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::UnarySX::print "

Print the expression (recursively with a maximum number of levels) ";

%feature("docstring")  CasADi::UnarySX::getName "";

%feature("docstring")  CasADi::UnarySX::isEqual "

comparison ";

%feature("docstring")  CasADi::UnarySX::isEqual "

comparison ";

%feature("docstring")  CasADi::UnarySX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::UnarySX::print "

print ";

%feature("docstring")  CasADi::UnarySX::marked "";

%feature("docstring")  CasADi::UnarySX::mark "";


// File: classCasADi_1_1Variable.xml
%feature("docstring") CasADi::Variable "C++ includes: variable.hpp ";

%feature("docstring")  CasADi::Variable::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::Variable::makeUnique "";

%feature("docstring")  CasADi::Variable::Variable "

Default (empty) constructor. ";

%feature("docstring")  CasADi::Variable::Variable "

Create a new variable. ";

%feature("docstring")  CasADi::Variable::~Variable "

Destructor. ";

%feature("docstring")  CasADi::Variable::var "

Get the variable expression. ";

%feature("docstring")  CasADi::Variable::der "

Get differential expression. ";

%feature("docstring")  CasADi::Variable::binding "

Get the binding expression. ";

%feature("docstring")  CasADi::Variable::highest "

Get the highest order derivative (i.e. der() or var()) ";

%feature("docstring")  CasADi::Variable::atTime "

Timed variable (never allocate) ";

%feature("docstring")  CasADi::Variable::atTime "

Timed variable (allocate if necessary) ";

%feature("docstring")  CasADi::Variable::index "

Get the variable index. ";

%feature("docstring")  CasADi::Variable::getName "

Get variable name. ";

%feature("docstring")  CasADi::Variable::setName "

Set variable name. ";

%feature("docstring")  CasADi::Variable::getVariability "

Get the variability (see Fritzon) ";

%feature("docstring")  CasADi::Variable::setVariability "

Set the variability (see Fritzon) ";

%feature("docstring")  CasADi::Variable::getCausality "

Get the causality (see Fritzon) ";

%feature("docstring")  CasADi::Variable::setCausality "

Set the causality (see Fritzon) ";

%feature("docstring")  CasADi::Variable::getCategory "

Get the variable category. ";

%feature("docstring")  CasADi::Variable::setCategory "

Set the variable category. ";

%feature("docstring")  CasADi::Variable::getAlias "

Check if the variable is an alias variable. ";

%feature("docstring")  CasADi::Variable::setAlias "

Set if the variable is an alias variable. ";

%feature("docstring")  CasADi::Variable::getDescription "

Get the description. ";

%feature("docstring")  CasADi::Variable::setDescription "

Set the description. ";

%feature("docstring")  CasADi::Variable::getValueReference "

Get the variable reference (XML) ";

%feature("docstring")  CasADi::Variable::setValueReference "

Set the variable reference (XML) ";

%feature("docstring")  CasADi::Variable::getMin "

Get the lower bound. ";

%feature("docstring")  CasADi::Variable::setMin "

Set the lower bound. ";

%feature("docstring")  CasADi::Variable::getMax "

Get the upper bound. ";

%feature("docstring")  CasADi::Variable::setMax "

Set the upper bound. ";

%feature("docstring")  CasADi::Variable::getNominal "

Get the nominal value of the variable. ";

%feature("docstring")  CasADi::Variable::setNominal "

Set the nominal value of the variable. ";

%feature("docstring")  CasADi::Variable::getStart "

Get the value at time 0. ";

%feature("docstring")  CasADi::Variable::getDerivativeStart "

Get the derivative at time 0. ";

%feature("docstring")  CasADi::Variable::setStart "

Set the value at time 0. ";

%feature("docstring")  CasADi::Variable::getInitialGuess "

Get the lower bound. ";

%feature("docstring")  CasADi::Variable::setInitialGuess "

Set the lower bound. ";

%feature("docstring")  CasADi::Variable::setDerivativeStart "

Set the derivative at time 0. ";

%feature("docstring")  CasADi::Variable::getUnit "

Get the unit. ";

%feature("docstring")  CasADi::Variable::setUnit "

Set the unit. ";

%feature("docstring")  CasADi::Variable::getDisplayUnit "

Get the display unit. ";

%feature("docstring")  CasADi::Variable::setDisplayUnit "

Set the display unit. ";

%feature("docstring")  CasADi::Variable::setExpression "

Set the expression. ";

%feature("docstring")  CasADi::Variable::setDerivative "

Set the derivative expression. ";

%feature("docstring")  CasADi::Variable::setBinding "

Set the binding expression. ";

%feature("docstring")  CasADi::Variable::setIndex "

Set the variable index. ";

%feature("docstring")  CasADi::Variable::isDifferential "

Is differential? ";

%feature("docstring")  CasADi::Variable::setDifferential "

Set differential. ";

%feature("docstring")  CasADi::Variable::getFree "

Get the the free attribute. ";

%feature("docstring")  CasADi::Variable::setFree "

Set the the free attribute. ";

%feature("docstring")  CasADi::Variable::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::Variable::clone "

Deep copy. ";

%feature("docstring")  CasADi::Variable::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::Variable::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::Variable::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::Variable::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::Variable::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::Variable::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::Variable::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::Variable::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::Variable::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::Variable::isInit "

Is initialized? ";

%feature("docstring")  CasADi::Variable::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::Variable::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::Variable::getRepresentation "

Return a string with a representation (for SWIG) ";


// File: classCasADi_1_1VariableInternal.xml
%feature("docstring") CasADi::VariableInternal "

Internal node class.

C++ includes: variable_internal.hpp ";

%feature("docstring")  CasADi::VariableInternal::VariableInternal "";

%feature("docstring")  CasADi::VariableInternal::~VariableInternal "";

%feature("docstring")  CasADi::VariableInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::VariableInternal::getName "";

%feature("docstring")  CasADi::VariableInternal::atTime "";

%feature("docstring")  CasADi::VariableInternal::atTime "";

%feature("docstring")  CasADi::VariableInternal::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::VariableInternal::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::VariableInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::VariableInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::VariableInternal::init "

Initialize the object. ";

%feature("docstring")  CasADi::VariableInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::VariableInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1WeakRef.xml
%feature("docstring") CasADi::WeakRef "

A weak reference to a cached object.

Joel Andersson

C++ includes: cached_object.hpp ";

%feature("docstring")  CasADi::WeakRef::WeakRef "

Default constructor. ";

%feature("docstring")  CasADi::WeakRef::~WeakRef "

Destructor. ";

%feature("docstring")  CasADi::WeakRef::WeakRef "

Copy constructor. ";

%feature("docstring")  CasADi::WeakRef::WeakRef "

Construct weak reference from shared object. ";

%feature("docstring")  CasADi::WeakRef::isNull "

Check if the weak object is null. ";

%feature("docstring")  CasADi::WeakRef::clear "

Clear the weak pointer by setting the owner to null. ";

%feature("docstring")  CasADi::WeakRef::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::WeakRef::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::WeakRef::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::WeakRef::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1WorhpInternal.xml
%feature("docstring") CasADi::WorhpInternal "

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| AcceptTolFea | OT_REAL      | 0.001        | Tolerance    | CasADi::Worh |
| s            |              |              | for          | pInternal    |
|              |              |              | acceptable   |              |
|              |              |              | feasibility  |              |
+--------------+--------------+--------------+--------------+--------------+
| AcceptTolOpt | OT_REAL      | 0.001        | Tolerance    | CasADi::Worh |
| i            |              |              | for          | pInternal    |
|              |              |              | acceptable   |              |
|              |              |              | optimality   |              |
+--------------+--------------+--------------+--------------+--------------+
| AlphaMinCons | OT_BOOLEAN   | False        | Use a        | CasADi::Worh |
| t            |              |              | constant     | pInternal    |
|              |              |              | lower bound  |              |
|              |              |              | on Armijo    |              |
|              |              |              | stepsize in  |              |
|              |              |              | Filter       |              |
+--------------+--------------+--------------+--------------+--------------+
| Ares         | OT_INTEGERVE | (42, 41, 42, | Armijo       | CasADi::Worh |
|              | CTOR         | 45, 43, 46,  | recovery     | pInternal    |
|              |              | 44)          | strategies.  |              |
|              |              |              | Vector of    |              |
|              |              |              | size 7       |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoBeta   | OT_REAL      | 0.712        | Trial        | CasADi::Worh |
|              |              |              | stepsize     | pInternal    |
|              |              |              | decrease     |              |
|              |              |              | factor for   |              |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoMaxAlp | OT_REAL      | 1            | Initial      | CasADi::Worh |
| ha           |              |              | alpha for    | pInternal    |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoMinAlp | OT_REAL      | 0.000        | Lower bound  | CasADi::Worh |
| ha           |              |              | on alpha for | pInternal    |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoMinAlp | OT_REAL      | 0.000        | Lower bound  | CasADi::Worh |
| haRec        |              |              | on alpha for | pInternal    |
|              |              |              | Armijo rule  |              |
|              |              |              | during       |              |
|              |              |              | recovery     |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoSigma  | OT_REAL      | 0.005        | Scale factor | CasADi::Worh |
|              |              |              | for          | pInternal    |
|              |              |              | linearised   |              |
|              |              |              | descent      |              |
|              |              |              | check in     |              |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| AutoQPRecove | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| ry           |              |              | automatic QP | pInternal    |
|              |              |              | recovery     |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSmaxblock | OT_INTEGER   | 300          | Maximum BFGS | CasADi::Worh |
| Size         |              |              | block size   | pInternal    |
|              |              |              | (depends on  |              |
|              |              |              | BFGS method) |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSmethod   | OT_INTEGER   | 0            | Choose BFGS  | CasADi::Worh |
|              |              |              | method       | pInternal    |
|              |              |              | (dense,      |              |
|              |              |              | block,       |              |
|              |              |              | sparse)      |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSminblock | OT_INTEGER   | 300          | Minimum BFGS | CasADi::Worh |
| Size         |              |              | block size   | pInternal    |
|              |              |              | (depends on  |              |
|              |              |              | BFGS method) |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSrestart  | OT_INTEGER   | 50           | Restart BFGS | CasADi::Worh |
|              |              |              | update after | pInternal    |
|              |              |              | this many    |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| BettsFactor  | OT_REAL      | 2.100        | Update       | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | Hessian regu |              |
|              |              |              | larisation   |              |
+--------------+--------------+--------------+--------------+--------------+
| BettsPoint   | OT_REAL      | 1            | Smallest     | CasADi::Worh |
|              |              |              | eigenvalue   | pInternal    |
|              |              |              | of the       |              |
|              |              |              | regularised  |              |
|              |              |              | Hessian      |              |
+--------------+--------------+--------------+--------------+--------------+
| BoundTolFac  | OT_REAL      | 1000         | Factor in    | CasADi::Worh |
|              |              |              | determining  | pInternal    |
|              |              |              | active       |              |
|              |              |              | constraints  |              |
|              |              |              | by KKT       |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckFJ      | OT_REAL      | 1.000e+12    | Upper bound  | CasADi::Worh |
|              |              |              | used by      | pInternal    |
|              |              |              | Fritz-John   |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckStructu | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| reDF         |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | DF           |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckStructu | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| reDG         |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | DG           |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckStructu | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| reHM         |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | HM           |              |
+--------------+--------------+--------------+--------------+--------------+
| CorStepBetts | OT_REAL      | 0.500        | (experimenta | CasADi::Worh |
| Sum          |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepConSt | OT_REAL      | 0.000        | (experimenta | CasADi::Worh |
| op           |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepConvi | OT_REAL      | 1            | (experimenta | CasADi::Worh |
| o            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepMaxIt | OT_INTEGER   | 50           | (experimenta | CasADi::Worh |
| er           |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepMetho | OT_INTEGER   | 0            | (experimenta | CasADi::Worh |
| d            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepMode  | OT_INTEGER   | 1            | (experimenta | CasADi::Worh |
|              |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepPFact | OT_REAL      | 1            | (experimenta | CasADi::Worh |
| or           |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepPMax  | OT_REAL      | 1000000      | (experimenta | CasADi::Worh |
|              |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepRecov | OT_BOOLEAN   | False        | Enable       | CasADi::Worh |
| eryDX        |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | HM           |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvBCond    | OT_REAL      | 0.020        | Block BFGS   | CasADi::Worh |
|              |              |              | curvature    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | bound        |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvBFac     | OT_REAL      | 0.300        | Block BFGS   | CasADi::Worh |
|              |              |              | curvature    | pInternal    |
|              |              |              | condition re |              |
|              |              |              | gularisation |              |
|              |              |              | factor       |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvCond     | OT_REAL      | 0.020        | BFGS         | CasADi::Worh |
|              |              |              | Curvature    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | bound        |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvFac      | OT_REAL      | 0.300        | BFGS         | CasADi::Worh |
|              |              |              | curvature    | pInternal    |
|              |              |              | condition re |              |
|              |              |              | gularisation |              |
|              |              |              | factor       |              |
+--------------+--------------+--------------+--------------+--------------+
| CutLength    | OT_REAL      | 0.001        | Scaling      | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | Cut recovery |              |
|              |              |              | strategy     |              |
+--------------+--------------+--------------+--------------+--------------+
| DebugMarker0 | OT_INTEGER   | 42           | Debug        | CasADi::Worh |
| 6            |              |              | marker, only | pInternal    |
|              |              |              | needed for   |              |
|              |              |              | ASTOS        |              |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| FGtogether   | OT_BOOLEAN   | False        | F and G      | CasADi::Worh |
|              |              |              | cannot be    | pInternal    |
|              |              |              | evaluated    |              |
|              |              |              | separately   |              |
+--------------+--------------+--------------+--------------+--------------+
| FJandND      | OT_BOOLEAN   | False        | Enable       | CasADi::Worh |
|              |              |              | Fritz-John   | pInternal    |
|              |              |              | and non-diff |              |
|              |              |              | erentiable   |              |
|              |              |              | check        |              |
|              |              |              | heuristics   |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleDual | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
|              |              |              | dual         | pInternal    |
|              |              |              | feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleInit | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
|              |              |              | initial      | pInternal    |
|              |              |              | feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleInit | OT_REAL      | 0.001        | Feasibility  | CasADi::Worh |
| Tol          |              |              | tolerance    | pInternal    |
|              |              |              | for no-      |              |
|              |              |              | objective    |              |
|              |              |              | feasible     |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleOnly | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
|              |              |              | feasible-    | pInternal    |
|              |              |              | only mode    |              |
+--------------+--------------+--------------+--------------+--------------+
| FidifEps     | OT_REAL      | 0.000        | Finite       | CasADi::Worh |
|              |              |              | difference   | pInternal    |
|              |              |              | perturbation |              |
+--------------+--------------+--------------+--------------+--------------+
| FidifHM      | OT_BOOLEAN   | False        | Approximate  | CasADi::Worh |
|              |              |              | Hessian by   | pInternal    |
|              |              |              | finite       |              |
|              |              |              | differences  |              |
|              |              |              | (otherwise   |              |
|              |              |              | BFGS)        |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterBisecA | OT_BOOLEAN   | True         | Filter       | CasADi::Worh |
| lpha         |              |              | heuristic to | pInternal    |
|              |              |              | save Armijo  |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterGammaC | OT_REAL      | 0.000        | Constraint   | CasADi::Worh |
| V            |              |              | violation    | pInternal    |
|              |              |              | decrease     |              |
|              |              |              | factor in    |              |
|              |              |              | Filter       |              |
|              |              |              | acceptance   |              |
|              |              |              | check        |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterGammaF | OT_REAL      | 0.000        | Objective    | CasADi::Worh |
|              |              |              | decrease     | pInternal    |
|              |              |              | factor in    |              |
|              |              |              | Filter       |              |
|              |              |              | acceptance   |              |
|              |              |              | check        |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterInters | OT_BOOLEAN   | True         | Filter       | CasADi::Worh |
| ecAlpha      |              |              | heuristic to | pInternal    |
|              |              |              | save Armijo  |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| FirstDifCent | OT_BOOLEAN   | True         | Use central  | CasADi::Worh |
| ral          |              |              | finite       | pInternal    |
|              |              |              | difference   |              |
|              |              |              | quotient for |              |
|              |              |              | first        |              |
|              |              |              | derivatives  |              |
+--------------+--------------+--------------+--------------+--------------+
| FocusOnFeas  | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
|              |              |              | Focus-on-    | pInternal    |
|              |              |              | Feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FocusOnFeasF | OT_REAL      | 1.360        | Factor in    | CasADi::Worh |
| actor        |              |              | Focus-on-    | pInternal    |
|              |              |              | Feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| GammaAlpha   | OT_REAL      | 0.050        | Safety       | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | alphamin     |              |
|              |              |              | calculation  |              |
|              |              |              | by Filter    |              |
+--------------+--------------+--------------+--------------+--------------+
| GroupMethod  | OT_INTEGER   | 1            | Select       | CasADi::Worh |
|              |              |              | method to    | pInternal    |
|              |              |              | determine    |              |
|              |              |              | graph        |              |
|              |              |              | colouring    |              |
|              |              |              | groups       |              |
+--------------+--------------+--------------+--------------+--------------+
| IgnoreFilter | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
| Crit         |              |              | accelerating | pInternal    |
|              |              |              | heuristics   |              |
|              |              |              | for Filter   |              |
+--------------+--------------+--------------+--------------+--------------+
| IncBettsTau  | OT_REAL      | 2            | Increase     | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| IncBettsTauM | OT_REAL      | 100          | Larger       | CasADi::Worh |
| ore          |              |              | increase     | pInternal    |
|              |              |              | factor for   |              |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| IncreaseIWS  | OT_REAL      | 1            | Increase     | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | estimated    |              |
|              |              |              | integer      |              |
|              |              |              | workspace    |              |
|              |              |              | requirement  |              |
+--------------+--------------+--------------+--------------+--------------+
| IncreaseRWS  | OT_REAL      | 1            | Increase     | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | estimated    |              |
|              |              |              | real         |              |
|              |              |              | workspace    |              |
|              |              |              | requirement  |              |
+--------------+--------------+--------------+--------------+--------------+
| Infty        | OT_REAL      | 1.000e+20    | Upper bound  | CasADi::Worh |
|              |              |              | for numbers  | pInternal    |
|              |              |              | to be        |              |
|              |              |              | regarded as  |              |
|              |              |              | finite       |              |
+--------------+--------------+--------------+--------------+--------------+
| InftyUnbound | OT_REAL      | 1.000e+20    | Tolerance    | CasADi::Worh |
| ed           |              |              | for unbounde | pInternal    |
|              |              |              | dness        |              |
|              |              |              | detection    |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| InitialLMest | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
|              |              |              | initial      | pInternal    |
|              |              |              | Lagrange     |              |
|              |              |              | multiplier   |              |
|              |              |              | estimate     |              |
+--------------+--------------+--------------+--------------+--------------+
| KeepAcceptab | OT_BOOLEAN   | True         | Save         | CasADi::Worh |
| leSol        |              |              | acceptable   | pInternal    |
|              |              |              | solutions as |              |
|              |              |              | fallback     |              |
+--------------+--------------+--------------+--------------+--------------+
| LMestQPipCom | OT_REAL      | 0.003        | IP complemen | CasADi::Worh |
| Tol          |              |              | tarity       | pInternal    |
|              |              |              | tolerance in |              |
|              |              |              | initial      |              |
|              |              |              | multiplier   |              |
|              |              |              | estimate     |              |
+--------------+--------------+--------------+--------------+--------------+
| LMestQPipRes | OT_REAL      | 1            | IP residual  | CasADi::Worh |
| Tol          |              |              | tolerance in | pInternal    |
|              |              |              | initial      |              |
|              |              |              | multiplier   |              |
|              |              |              | estimate     |              |
+--------------+--------------+--------------+--------------+--------------+
| LinMult      | OT_BOOLEAN   | False        | Control      | CasADi::Worh |
|              |              |              | Lagrange     | pInternal    |
|              |              |              | multiplier   |              |
|              |              |              | update       |              |
+--------------+--------------+--------------+--------------+--------------+
| LogLevel     | OT_INTEGER   | 0            | Enable XML   | CasADi::Worh |
|              |              |              | logfiles and | pInternal    |
|              |              |              | writing      |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| LogResult    | OT_INTEGER   | 0            | Enable XML   | CasADi::Worh |
|              |              |              | result       | pInternal    |
|              |              |              | logging and  |              |
|              |              |              | detail level |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassAlpha | OT_REAL      | 0.950        | Lowpass-     | CasADi::Worh |
| F            |              |              | filter       | pInternal    |
|              |              |              | update       |              |
|              |              |              | factor for   |              |
|              |              |              | objective    |              |
|              |              |              | values       |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassAlpha | OT_REAL      | 0.950        | Lowpass-     | CasADi::Worh |
| G            |              |              | filter       | pInternal    |
|              |              |              | update       |              |
|              |              |              | factor for   |              |
|              |              |              | constraint   |              |
|              |              |              | values       |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassAlpha | OT_REAL      | 0.100        | Lowpass-     | CasADi::Worh |
| Merit        |              |              | filter       | pInternal    |
|              |              |              | update       |              |
|              |              |              | factor for   |              |
|              |              |              | merit        |              |
|              |              |              | function     |              |
|              |              |              | values       |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassFilte | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| r            |              |              | lowpass-     | pInternal    |
|              |              |              | filter       |              |
|              |              |              | termination  |              |
|              |              |              | criterion    |              |
+--------------+--------------+--------------+--------------+--------------+
| Ma57PivotThr | OT_REAL      | 0.000        | Pivoting     | CasADi::Worh |
| esh          |              |              | tolerance    | pInternal    |
|              |              |              | for MA57 =   |              |
|              |              |              | CNTL(1)      |              |
+--------------+--------------+--------------+--------------+--------------+
| MatrixCC     | OT_BOOLEAN   | False        | Not to be    | CasADi::Worh |
|              |              |              | included     | pInternal    |
|              |              |              | into a       |              |
|              |              |              | parameter    |              |
|              |              |              | file!        |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxCalls     | OT_INTEGER   | 2.147e+09    | Upper bound  | CasADi::Worh |
|              |              |              | to Reverse C | pInternal    |
|              |              |              | ommunication |              |
|              |              |              | calls        |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxForce     | OT_INTEGER   | 1000         | Maximum      | CasADi::Worh |
|              |              |              | number of    | pInternal    |
|              |              |              | Force        |              |
|              |              |              | recovery     |              |
|              |              |              | strategy     |              |
|              |              |              | steps        |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxGPart     | OT_INTEGER   | 1            | (experimenta | CasADi::Worh |
|              |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| MaxIter      | OT_INTEGER   | 500          | Upper bound  | CasADi::Worh |
|              |              |              | on major     | pInternal    |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxLScounter | OT_INTEGER   | 3            | Control      | CasADi::Worh |
|              |              |              | activation   | pInternal    |
|              |              |              | of Filter    |              |
|              |              |              | acceleration |              |
|              |              |              | heuristics   |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxNorm      | OT_BOOLEAN   | True         | Select max-  | CasADi::Worh |
|              |              |              | norm instead | pInternal    |
|              |              |              | of 1-norm in |              |
|              |              |              | Filter       |              |
+--------------+--------------+--------------+--------------+--------------+
| MeritFunctio | OT_INTEGER   | 4            | Select merit | CasADi::Worh |
| n            |              |              | function and | pInternal    |
|              |              |              | penalty      |              |
|              |              |              | update [0,   |              |
|              |              |              | 3..5]        |              |
+--------------+--------------+--------------+--------------+--------------+
| MeritGradTol | OT_REAL      | 0.000        | Threshold of | CasADi::Worh |
|              |              |              | meritfunctio | pInternal    |
|              |              |              | n gradient   |              |
|              |              |              | for          |              |
|              |              |              | increasing   |              |
|              |              |              | Hessian regu |              |
|              |              |              | larisation   |              |
+--------------+--------------+--------------+--------------+--------------+
| MinBettsTau  | OT_REAL      | 0.000        | Lower bound  | CasADi::Worh |
|              |              |              | for Betts'   | pInternal    |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| MoreRelax    | OT_BOOLEAN   | False        | Introduce    | CasADi::Worh |
|              |              |              | one          | pInternal    |
|              |              |              | relaxation   |              |
|              |              |              | variable for |              |
|              |              |              | every        |              |
|              |              |              | constraint   |              |
+--------------+--------------+--------------+--------------+--------------+
| NLPmethod    | OT_INTEGER   | 1            | Select (1) M | CasADi::Worh |
|              |              |              | eritfunction | pInternal    |
|              |              |              | or (3)       |              |
|              |              |              | Filter globa |              |
|              |              |              | lisation     |              |
+--------------+--------------+--------------+--------------+--------------+
| NLPprint     | OT_INTEGER   | 2            | NLP print    | CasADi::Worh |
|              |              |              | level        | pInternal    |
|              |              |              | [-1..4]      |              |
+--------------+--------------+--------------+--------------+--------------+
| PairMethod   | OT_INTEGER   | 1            | Select       | CasADi::Worh |
|              |              |              | method to    | pInternal    |
|              |              |              | determine    |              |
|              |              |              | graph        |              |
|              |              |              | colouring    |              |
|              |              |              | pairgroups   |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdEpsBar | OT_REAL      | 0.900        | Penalty      | CasADi::Worh |
|              |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
|              |              |              | factor for M |              |
|              |              |              | eritFunction |              |
|              |              |              | = 3          |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdEpsKFa | OT_REAL      | 2            | Penalty      | CasADi::Worh |
| c            |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
|              |              |              | factor for M |              |
|              |              |              | eritFunction |              |
|              |              |              | = 4          |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdEpsKSe | OT_INTEGER   | 2            | Penalty      | CasADi::Worh |
| quence       |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdMaxDel | OT_REAL      | 11           | Max penalty  | CasADi::Worh |
| taK          |              |              | for MeritFun | pInternal    |
|              |              |              | ction = 4    |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdMaxFac | OT_REAL      | 100000000    | Max factor   | CasADi::Worh |
|              |              |              | for          | pInternal    |
|              |              |              | increasing   |              |
|              |              |              | penalty for  |              |
|              |              |              | MeritFunctio |              |
|              |              |              | n = 4        |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdRBar   | OT_REAL      | 2            | Penalty      | CasADi::Worh |
|              |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
|              |              |              | for MeritFun |              |
|              |              |              | ction = 3    |              |
+--------------+--------------+--------------+--------------+--------------+
| PrecisionF   | OT_REAL      | 0.000        | (currently   | CasADi::Worh |
|              |              |              | unused)      | pInternal    |
|              |              |              | Relative     |              |
|              |              |              | precision of |              |
|              |              |              | objective    |              |
+--------------+--------------+--------------+--------------+--------------+
| PrecisionG   | OT_REAL      | 0.000        | (currently   | CasADi::Worh |
|              |              |              | unused)      | pInternal    |
|              |              |              | Relative     |              |
|              |              |              | precision of |              |
|              |              |              | constraints  |              |
+--------------+--------------+--------------+--------------+--------------+
| QPscaleParam | OT_REAL      | 0            | (currently   | CasADi::Worh |
|              |              |              | unused)      | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| QuadraticPro | OT_BOOLEAN   | False        | Not to be    | CasADi::Worh |
| blem         |              |              | included     | pInternal    |
|              |              |              | into a       |              |
|              |              |              | parameter    |              |
|              |              |              | file!        |              |
+--------------+--------------+--------------+--------------+--------------+
| ReduceBettsT | OT_REAL      | 0.300        | Decrease     | CasADi::Worh |
| au           |              |              | factor for   | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| RegStrategy  | OT_INTEGER   | 1            | Select       | CasADi::Worh |
|              |              |              | Hessian regu | pInternal    |
|              |              |              | larisation   |              |
|              |              |              | strategy in  |              |
|              |              |              | Filter       |              |
+--------------+--------------+--------------+--------------+--------------+
| ReinitFilter | OT_BOOLEAN   | False        | Enables      | CasADi::Worh |
|              |              |              | Filter-reini | pInternal    |
|              |              |              | tialisation  |              |
|              |              |              | accelerating |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxMaxDelt | OT_REAL      | 0.920        | Upper bound  | CasADi::Worh |
| a            |              |              | for          | pInternal    |
|              |              |              | accepting    |              |
|              |              |              | the          |              |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | variable     |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxMaxPen  | OT_REAL      | 50000000     | Upper bound  | CasADi::Worh |
|              |              |              | on the       | pInternal    |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | penalty      |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxRho     | OT_REAL      | 6            | Update       | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | the          |              |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | penalty      |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxStart   | OT_REAL      | 1            | Initial      | CasADi::Worh |
|              |              |              | value of the | pInternal    |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | penalty      |              |
+--------------+--------------+--------------+--------------+--------------+
| RestUntilFea | OT_BOOLEAN   | False        | Do           | CasADi::Worh |
| s            |              |              | restoration  | pInternal    |
|              |              |              | until a      |              |
|              |              |              | feasible     |              |
|              |              |              | solution is  |              |
|              |              |              | found        |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaleConIter | OT_BOOLEAN   | False        | Scale        | CasADi::Worh |
|              |              |              | constraints  | pInternal    |
|              |              |              | in every     |              |
|              |              |              | iteration    |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaleFacObj  | OT_REAL      | 10           | Value to     | CasADi::Worh |
|              |              |              | scale large  | pInternal    |
|              |              |              | objective    |              |
|              |              |              | functions to |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaleFacQP   | OT_REAL      | 10           | Upper bound  | CasADi::Worh |
|              |              |              | on resulting | pInternal    |
|              |              |              | matrix norm  |              |
|              |              |              | for QP       |              |
|              |              |              | scaling      |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaledFD     | OT_BOOLEAN   | True         | Use a scaled | CasADi::Worh |
|              |              |              | perturbation | pInternal    |
|              |              |              | for finite   |              |
|              |              |              | differences  |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaledKKT    | OT_BOOLEAN   | True         | Scale KKT    | CasADi::Worh |
|              |              |              | conditions   | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| ScaledObj    | OT_BOOLEAN   | True         | Scale the    | CasADi::Worh |
|              |              |              | objective    | pInternal    |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaledQP     | OT_BOOLEAN   | True         | Scale some   | CasADi::Worh |
|              |              |              | matrices     | pInternal    |
|              |              |              | handed to    |              |
|              |              |              | the QP       |              |
+--------------+--------------+--------------+--------------+--------------+
| StartBettsTa | OT_REAL      | 0.100        | Initial      | CasADi::Worh |
| u            |              |              | value for    | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| SwitchingDel | OT_REAL      | 0.010        | Filter       | CasADi::Worh |
| ta           |              |              | switching    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| SwitchingSCV | OT_REAL      | 1.100        | Filter       | CasADi::Worh |
|              |              |              | switching    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| SwitchingSF  | OT_REAL      | 2.300        | Filter       | CasADi::Worh |
|              |              |              | switching    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| TakeQPSol    | OT_BOOLEAN   | False        | Evaluate QP  | CasADi::Worh |
|              |              |              | search       | pInternal    |
|              |              |              | direction    |              |
|              |              |              | regardless   |              |
|              |              |              | of           |              |
|              |              |              | convergence  |              |
+--------------+--------------+--------------+--------------+--------------+
| Timeout      | OT_REAL      | 300          | Timeout in   | CasADi::Worh |
|              |              |              | seconds      | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TolComp      | OT_REAL      | 0.001        | Complementar | CasADi::Worh |
|              |              |              | ity          | pInternal    |
|              |              |              | tolerance    |              |
+--------------+--------------+--------------+--------------+--------------+
| TolFeas      | OT_REAL      | 0.000        | Feasibility  | CasADi::Worh |
|              |              |              | tolerance    | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TolOpti      | OT_REAL      | 0.000        | Optimality   | CasADi::Worh |
|              |              |              | tolerance    | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TolWeakActiv | OT_REAL      | 1            | (experimenta | CasADi::Worh |
| e            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TooBig       | OT_BOOLEAN   | True         | Enable too-  | CasADi::Worh |
|              |              |              | big          | pInternal    |
|              |              |              | termination  |              |
|              |              |              | heuristics   |              |
+--------------+--------------+--------------+--------------+--------------+
| TooBigCV     | OT_REAL      | 1.000e+25    | Upper bound  | CasADi::Worh |
|              |              |              | on           | pInternal    |
|              |              |              | constraint   |              |
|              |              |              | violation    |              |
|              |              |              | for too-big  |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| TooBigKKT    | OT_REAL      | 1.000e+30    | Upper bound  | CasADi::Worh |
|              |              |              | on KKT       | pInternal    |
|              |              |              | values for   |              |
|              |              |              | too-big      |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| UserDF       | OT_BOOLEAN   | True         | Objective    | CasADi::Worh |
|              |              |              | gradient     | pInternal    |
|              |              |              | values       |              |
|              |              |              | supplied by  |              |
|              |              |              | caller       |              |
+--------------+--------------+--------------+--------------+--------------+
| UserDG       | OT_BOOLEAN   | True         | Jacobian     | CasADi::Worh |
|              |              |              | values       | pInternal    |
|              |              |              | supplied by  |              |
|              |              |              | caller       |              |
+--------------+--------------+--------------+--------------+--------------+
| UserHM       | OT_BOOLEAN   | False        | Hessian      | CasADi::Worh |
|              |              |              | values       | pInternal    |
|              |              |              | supplied by  |              |
|              |              |              | caller       |              |
+--------------+--------------+--------------+--------------+--------------+
| UserHMstruct | OT_INTEGER   | 2            | Enable       | CasADi::Worh |
| ure          |              |              | automatic    | pInternal    |
|              |              |              | Hessian      |              |
|              |              |              | structure    |              |
|              |              |              | generation   |              |
|              |              |              | or checking  |              |
+--------------+--------------+--------------+--------------+--------------+
| WeakActiveSe | OT_BOOLEAN   | False        | (experimenta | CasADi::Worh |
| t            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | automatic    | How to       | CasADi::Worh |
|              |              |              | calculate    | pInternal    |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
+--------------+--------------+--------------+--------------+--------------+
| eps          | OT_REAL      | 0.000        | Machine      | CasADi::Worh |
|              |              |              | epsilon      | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | False        | Expand the   | CasADi::Worh |
|              |              |              | objective    | pInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | False        | Expand the   | CasADi::Worh |
|              |              |              | constraint   | pInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | False        | Use Gauss    | CasADi::Worh |
|              |              |              | Newton       | pInternal    |
|              |              |              | Hessian appr |              |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | False        | Generate an  | CasADi::Worh |
| sian         |              |              | exact        | pInternal    |
|              |              |              | Hessian of   |              |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | True         | Generate an  | CasADi::Worh |
| obian        |              |              | exact        | pInternal    |
|              |              |              | Jacobian of  |              |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | False        | If set to    | CasADi::Worh |
| _vec         |              |              | true, the    | pInternal    |
|              |              |              | input shape  |              |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| initialised  | OT_BOOLEAN   | True         | Automaticall | CasADi::Worh |
|              |              |              | y added init | pInternal    |
|              |              |              | ialisation   |              |
|              |              |              | flag.        |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        |              | A function   | CasADi::Worh |
| llback       |              |              | that will be | pInternal    |
|              |              |              | called at    |              |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | False        | If set to    | CasADi::Worh |
| llback_ignor |              |              | true, errors | pInternal    |
| e_errors     |              |              | thrown by it |              |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::Worh |
| llback_step  |              |              | the callback | pInternal    |
|              |              |              | function     |              |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | False        | Create the a | CasADi::Worh |
|              |              |              | Jacobian     | pInternal    |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG |              | Function     | CasADi::Worh |
| erator       | ENERATOR     |              | pointer that | pInternal    |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC |              | Monitors to  | CasADi::Worh |
|              | TOR          |              | be activated | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | unnamed_shar | n/a          | CasADi::Worh |
|              |              | ed_object    |              | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::Worh |
| j_dir        |              |              | adjoint      | pInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::Worh |
| d_dir        |              |              | forward      | pInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | False        | Calculate    | CasADi::Worh |
| ian          |              |              | Hessians     | pInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | False        | Calculate    | CasADi::Worh |
| bian         |              |              | Jacobians    | pInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | False        | Expect F, G, | CasADi::Worh |
|              |              |              | H, J to have | pInternal    |
|              |              |              | an           |              |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | True         | function is  | CasADi::Worh |
|              |              |              | sparse       | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG |              | Function     | CasADi::Worh |
| erator       | ENERATOR     |              | that         | pInternal    |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | False        | keep         | CasADi::Worh |
| ans          |              |              | references   | pInternal    |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_UNKNOWN   |              | A user-      | CasADi::Worh |
|              |              |              | defined      | pInternal    |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | False        | verbose      | CasADi::Worh |
|              |              |              | evaluation   | pInternal    |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | False        | Warn if the  | CasADi::Worh |
| _bounds      |              |              | initial      | pInternal    |
|              |              |              | guess does   |              |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+-----------------------+
|     Id      |        Used in        |
+=============+=======================+
| eval_f      | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_g      | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_grad_f | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_h      | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_jac_g  | CasADi::WorhpInternal |
+-------------+-----------------------+
| inputs      | CasADi::FXInternal    |
+-------------+-----------------------+
| outputs     | CasADi::FXInternal    |
+-------------+-----------------------+

C++ includes: worhp_internal.hpp ";

%feature("docstring")  CasADi::WorhpInternal::WorhpInternal "

Autogenerated from C_worhp_aux.h with params.pl ";

%feature("docstring")  CasADi::WorhpInternal::~WorhpInternal "";

%feature("docstring")  CasADi::WorhpInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::WorhpInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized.

Known issue in WORHP: Worhp cannot handle the degenerate case of constant
objective value.

Autogenerated from C_worhp_aux.h with params.pl ";

%feature("docstring")  CasADi::WorhpInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::WorhpInternal::reportConstraints "

Prints out a human readable report about possible constraint violations -
all constraints. ";

%feature("docstring")  CasADi::WorhpInternal::checkInitialBounds "

Warns the user about inital bounds, if option 'warn_initial_bounds' is true.
";

%feature("docstring")  CasADi::WorhpInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::WorhpInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::WorhpInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::WorhpInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::WorhpInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::WorhpInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::WorhpInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::WorhpInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::WorhpInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::WorhpInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::WorhpInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::WorhpInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::WorhpInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::WorhpInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::WorhpInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::WorhpInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::WorhpInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::WorhpInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::WorhpInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::WorhpInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::WorhpInternal::print "

Print. ";

%feature("docstring")  CasADi::WorhpInternal::repr "

Print. ";

%feature("docstring")  CasADi::WorhpInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::WorhpInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::WorhpInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::WorhpInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::WorhpInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::WorhpInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::WorhpInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::WorhpInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::WorhpInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::WorhpInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::WorhpInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::WorhpInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::WorhpInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::WorhpInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::WorhpInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::WorhpInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::WorhpInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::WorhpInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::WorhpInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::WorhpInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::WorhpInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::WorhpInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::WorhpInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::WorhpInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::WorhpInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::WorhpInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::WorhpInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::WorhpInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::WorhpInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::WorhpInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::WorhpInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::WorhpInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::WorhpInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::WorhpInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::WorhpInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::WorhpInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::WorhpInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::WorhpInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::WorhpInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::WorhpInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::WorhpInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::WorhpInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::WorhpInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::WorhpInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::WorhpInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::WorhpInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::WorhpInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::WorhpInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1WorhpSolver.xml
%feature("docstring") CasADi::WorhpSolver "

interface to WORHP NLP solver

Solves the following nonlinear optimization problem:   min          F(x,p)
x      subject to               LBG <= G(x,p) <= UBG               LBX <= x
<= UBX                      n: number of decision variables (x)       m:
number of constraints (A)

>Input scheme: CasADi::NLPInput (NLP_NUM_IN = 7)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_INIT                         | Decision variables initial guess   |
|                                    | (n x 1)                            |
+------------------------------------+------------------------------------+
| NLP_LBX                            | Decision variables lower bound (n  |
|                                    | x 1), default -inf.                |
+------------------------------------+------------------------------------+
| NLP_UBX                            | Decision variables upper bound (n  |
|                                    | x 1), default +inf.                |
+------------------------------------+------------------------------------+
| NLP_LBG                            | Constraints lower bound (m x 1),   |
|                                    | default -inf.                      |
+------------------------------------+------------------------------------+
| NLP_UBG                            | Constraints upper bound (m x 1),   |
|                                    | default +inf.                      |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_INIT                    | Lagrange multipliers associated    |
|                                    | with G, initial guess (m x 1)      |
+------------------------------------+------------------------------------+
| NLP_P                              | Only for parametric NLP - static   |
|                                    | parameters on which the objective  |
|                                    | and constraints might depend.      |
+------------------------------------+------------------------------------+

>Output scheme: CasADi::NLPOutput (NLP_NUM_OUT = 5)
+------------------------------------+------------------------------------+
|                Name                |            Description             |
+====================================+====================================+
| NLP_X_OPT                          | Decision variables for optimal     |
|                                    | solution (n x 1)                   |
+------------------------------------+------------------------------------+
| NLP_COST                           | Objective/cost function for        |
|                                    | optimal solution (1 x 1)           |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_G                       | Lagrange multipliers associated    |
|                                    | with G at the solution (m x 1)     |
+------------------------------------+------------------------------------+
| NLP_LAMBDA_X                       | Lagrange multipliers associated    |
|                                    | with bounds on X at the solution   |
|                                    | (n x 1) When in warmstart mode,    |
|                                    | this output may be used as input ( |
+------------------------------------+------------------------------------+
| NLP_G                              | The constraints evaluated at the   |
|                                    | optimal solution (m x 1)           |
+------------------------------------+------------------------------------+

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| AcceptTolFea | OT_REAL      | 0.001        | Tolerance    | CasADi::Worh |
| s            |              |              | for          | pInternal    |
|              |              |              | acceptable   |              |
|              |              |              | feasibility  |              |
+--------------+--------------+--------------+--------------+--------------+
| AcceptTolOpt | OT_REAL      | 0.001        | Tolerance    | CasADi::Worh |
| i            |              |              | for          | pInternal    |
|              |              |              | acceptable   |              |
|              |              |              | optimality   |              |
+--------------+--------------+--------------+--------------+--------------+
| AlphaMinCons | OT_BOOLEAN   | False        | Use a        | CasADi::Worh |
| t            |              |              | constant     | pInternal    |
|              |              |              | lower bound  |              |
|              |              |              | on Armijo    |              |
|              |              |              | stepsize in  |              |
|              |              |              | Filter       |              |
+--------------+--------------+--------------+--------------+--------------+
| Ares         | OT_INTEGERVE | (42, 41, 42, | Armijo       | CasADi::Worh |
|              | CTOR         | 45, 43, 46,  | recovery     | pInternal    |
|              |              | 44)          | strategies.  |              |
|              |              |              | Vector of    |              |
|              |              |              | size 7       |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoBeta   | OT_REAL      | 0.712        | Trial        | CasADi::Worh |
|              |              |              | stepsize     | pInternal    |
|              |              |              | decrease     |              |
|              |              |              | factor for   |              |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoMaxAlp | OT_REAL      | 1            | Initial      | CasADi::Worh |
| ha           |              |              | alpha for    | pInternal    |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoMinAlp | OT_REAL      | 0.000        | Lower bound  | CasADi::Worh |
| ha           |              |              | on alpha for | pInternal    |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoMinAlp | OT_REAL      | 0.000        | Lower bound  | CasADi::Worh |
| haRec        |              |              | on alpha for | pInternal    |
|              |              |              | Armijo rule  |              |
|              |              |              | during       |              |
|              |              |              | recovery     |              |
+--------------+--------------+--------------+--------------+--------------+
| ArmijoSigma  | OT_REAL      | 0.005        | Scale factor | CasADi::Worh |
|              |              |              | for          | pInternal    |
|              |              |              | linearised   |              |
|              |              |              | descent      |              |
|              |              |              | check in     |              |
|              |              |              | Armijo rule  |              |
+--------------+--------------+--------------+--------------+--------------+
| AutoQPRecove | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| ry           |              |              | automatic QP | pInternal    |
|              |              |              | recovery     |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSmaxblock | OT_INTEGER   | 300          | Maximum BFGS | CasADi::Worh |
| Size         |              |              | block size   | pInternal    |
|              |              |              | (depends on  |              |
|              |              |              | BFGS method) |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSmethod   | OT_INTEGER   | 0            | Choose BFGS  | CasADi::Worh |
|              |              |              | method       | pInternal    |
|              |              |              | (dense,      |              |
|              |              |              | block,       |              |
|              |              |              | sparse)      |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSminblock | OT_INTEGER   | 300          | Minimum BFGS | CasADi::Worh |
| Size         |              |              | block size   | pInternal    |
|              |              |              | (depends on  |              |
|              |              |              | BFGS method) |              |
+--------------+--------------+--------------+--------------+--------------+
| BFGSrestart  | OT_INTEGER   | 50           | Restart BFGS | CasADi::Worh |
|              |              |              | update after | pInternal    |
|              |              |              | this many    |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| BettsFactor  | OT_REAL      | 2.100        | Update       | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | Hessian regu |              |
|              |              |              | larisation   |              |
+--------------+--------------+--------------+--------------+--------------+
| BettsPoint   | OT_REAL      | 1            | Smallest     | CasADi::Worh |
|              |              |              | eigenvalue   | pInternal    |
|              |              |              | of the       |              |
|              |              |              | regularised  |              |
|              |              |              | Hessian      |              |
+--------------+--------------+--------------+--------------+--------------+
| BoundTolFac  | OT_REAL      | 1000         | Factor in    | CasADi::Worh |
|              |              |              | determining  | pInternal    |
|              |              |              | active       |              |
|              |              |              | constraints  |              |
|              |              |              | by KKT       |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckFJ      | OT_REAL      | 1.000e+12    | Upper bound  | CasADi::Worh |
|              |              |              | used by      | pInternal    |
|              |              |              | Fritz-John   |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckStructu | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| reDF         |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | DF           |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckStructu | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| reDG         |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | DG           |              |
+--------------+--------------+--------------+--------------+--------------+
| CheckStructu | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| reHM         |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | HM           |              |
+--------------+--------------+--------------+--------------+--------------+
| CorStepBetts | OT_REAL      | 0.500        | (experimenta | CasADi::Worh |
| Sum          |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepConSt | OT_REAL      | 0.000        | (experimenta | CasADi::Worh |
| op           |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepConvi | OT_REAL      | 1            | (experimenta | CasADi::Worh |
| o            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepMaxIt | OT_INTEGER   | 50           | (experimenta | CasADi::Worh |
| er           |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepMetho | OT_INTEGER   | 0            | (experimenta | CasADi::Worh |
| d            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepMode  | OT_INTEGER   | 1            | (experimenta | CasADi::Worh |
|              |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepPFact | OT_REAL      | 1            | (experimenta | CasADi::Worh |
| or           |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepPMax  | OT_REAL      | 1000000      | (experimenta | CasADi::Worh |
|              |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| CorStepRecov | OT_BOOLEAN   | False        | Enable       | CasADi::Worh |
| eryDX        |              |              | structural   | pInternal    |
|              |              |              | checking of  |              |
|              |              |              | HM           |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvBCond    | OT_REAL      | 0.020        | Block BFGS   | CasADi::Worh |
|              |              |              | curvature    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | bound        |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvBFac     | OT_REAL      | 0.300        | Block BFGS   | CasADi::Worh |
|              |              |              | curvature    | pInternal    |
|              |              |              | condition re |              |
|              |              |              | gularisation |              |
|              |              |              | factor       |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvCond     | OT_REAL      | 0.020        | BFGS         | CasADi::Worh |
|              |              |              | Curvature    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | bound        |              |
+--------------+--------------+--------------+--------------+--------------+
| CurvFac      | OT_REAL      | 0.300        | BFGS         | CasADi::Worh |
|              |              |              | curvature    | pInternal    |
|              |              |              | condition re |              |
|              |              |              | gularisation |              |
|              |              |              | factor       |              |
+--------------+--------------+--------------+--------------+--------------+
| CutLength    | OT_REAL      | 0.001        | Scaling      | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | Cut recovery |              |
|              |              |              | strategy     |              |
+--------------+--------------+--------------+--------------+--------------+
| DebugMarker0 | OT_INTEGER   | 42           | Debug        | CasADi::Worh |
| 6            |              |              | marker, only | pInternal    |
|              |              |              | needed for   |              |
|              |              |              | ASTOS        |              |
|              |              |              | integration  |              |
+--------------+--------------+--------------+--------------+--------------+
| FGtogether   | OT_BOOLEAN   | False        | F and G      | CasADi::Worh |
|              |              |              | cannot be    | pInternal    |
|              |              |              | evaluated    |              |
|              |              |              | separately   |              |
+--------------+--------------+--------------+--------------+--------------+
| FJandND      | OT_BOOLEAN   | False        | Enable       | CasADi::Worh |
|              |              |              | Fritz-John   | pInternal    |
|              |              |              | and non-diff |              |
|              |              |              | erentiable   |              |
|              |              |              | check        |              |
|              |              |              | heuristics   |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleDual | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
|              |              |              | dual         | pInternal    |
|              |              |              | feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleInit | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
|              |              |              | initial      | pInternal    |
|              |              |              | feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleInit | OT_REAL      | 0.001        | Feasibility  | CasADi::Worh |
| Tol          |              |              | tolerance    | pInternal    |
|              |              |              | for no-      |              |
|              |              |              | objective    |              |
|              |              |              | feasible     |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FeasibleOnly | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
|              |              |              | feasible-    | pInternal    |
|              |              |              | only mode    |              |
+--------------+--------------+--------------+--------------+--------------+
| FidifEps     | OT_REAL      | 0.000        | Finite       | CasADi::Worh |
|              |              |              | difference   | pInternal    |
|              |              |              | perturbation |              |
+--------------+--------------+--------------+--------------+--------------+
| FidifHM      | OT_BOOLEAN   | False        | Approximate  | CasADi::Worh |
|              |              |              | Hessian by   | pInternal    |
|              |              |              | finite       |              |
|              |              |              | differences  |              |
|              |              |              | (otherwise   |              |
|              |              |              | BFGS)        |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterBisecA | OT_BOOLEAN   | True         | Filter       | CasADi::Worh |
| lpha         |              |              | heuristic to | pInternal    |
|              |              |              | save Armijo  |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterGammaC | OT_REAL      | 0.000        | Constraint   | CasADi::Worh |
| V            |              |              | violation    | pInternal    |
|              |              |              | decrease     |              |
|              |              |              | factor in    |              |
|              |              |              | Filter       |              |
|              |              |              | acceptance   |              |
|              |              |              | check        |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterGammaF | OT_REAL      | 0.000        | Objective    | CasADi::Worh |
|              |              |              | decrease     | pInternal    |
|              |              |              | factor in    |              |
|              |              |              | Filter       |              |
|              |              |              | acceptance   |              |
|              |              |              | check        |              |
+--------------+--------------+--------------+--------------+--------------+
| FilterInters | OT_BOOLEAN   | True         | Filter       | CasADi::Worh |
| ecAlpha      |              |              | heuristic to | pInternal    |
|              |              |              | save Armijo  |              |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| FirstDifCent | OT_BOOLEAN   | True         | Use central  | CasADi::Worh |
| ral          |              |              | finite       | pInternal    |
|              |              |              | difference   |              |
|              |              |              | quotient for |              |
|              |              |              | first        |              |
|              |              |              | derivatives  |              |
+--------------+--------------+--------------+--------------+--------------+
| FocusOnFeas  | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
|              |              |              | Focus-on-    | pInternal    |
|              |              |              | Feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| FocusOnFeasF | OT_REAL      | 1.360        | Factor in    | CasADi::Worh |
| actor        |              |              | Focus-on-    | pInternal    |
|              |              |              | Feasibility  |              |
|              |              |              | mode         |              |
+--------------+--------------+--------------+--------------+--------------+
| GammaAlpha   | OT_REAL      | 0.050        | Safety       | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | alphamin     |              |
|              |              |              | calculation  |              |
|              |              |              | by Filter    |              |
+--------------+--------------+--------------+--------------+--------------+
| GroupMethod  | OT_INTEGER   | 1            | Select       | CasADi::Worh |
|              |              |              | method to    | pInternal    |
|              |              |              | determine    |              |
|              |              |              | graph        |              |
|              |              |              | colouring    |              |
|              |              |              | groups       |              |
+--------------+--------------+--------------+--------------+--------------+
| IgnoreFilter | OT_BOOLEAN   | False        | Activate     | CasADi::Worh |
| Crit         |              |              | accelerating | pInternal    |
|              |              |              | heuristics   |              |
|              |              |              | for Filter   |              |
+--------------+--------------+--------------+--------------+--------------+
| IncBettsTau  | OT_REAL      | 2            | Increase     | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| IncBettsTauM | OT_REAL      | 100          | Larger       | CasADi::Worh |
| ore          |              |              | increase     | pInternal    |
|              |              |              | factor for   |              |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| IncreaseIWS  | OT_REAL      | 1            | Increase     | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | estimated    |              |
|              |              |              | integer      |              |
|              |              |              | workspace    |              |
|              |              |              | requirement  |              |
+--------------+--------------+--------------+--------------+--------------+
| IncreaseRWS  | OT_REAL      | 1            | Increase     | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | estimated    |              |
|              |              |              | real         |              |
|              |              |              | workspace    |              |
|              |              |              | requirement  |              |
+--------------+--------------+--------------+--------------+--------------+
| Infty        | OT_REAL      | 1.000e+20    | Upper bound  | CasADi::Worh |
|              |              |              | for numbers  | pInternal    |
|              |              |              | to be        |              |
|              |              |              | regarded as  |              |
|              |              |              | finite       |              |
+--------------+--------------+--------------+--------------+--------------+
| InftyUnbound | OT_REAL      | 1.000e+20    | Tolerance    | CasADi::Worh |
| ed           |              |              | for unbounde | pInternal    |
|              |              |              | dness        |              |
|              |              |              | detection    |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| InitialLMest | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
|              |              |              | initial      | pInternal    |
|              |              |              | Lagrange     |              |
|              |              |              | multiplier   |              |
|              |              |              | estimate     |              |
+--------------+--------------+--------------+--------------+--------------+
| KeepAcceptab | OT_BOOLEAN   | True         | Save         | CasADi::Worh |
| leSol        |              |              | acceptable   | pInternal    |
|              |              |              | solutions as |              |
|              |              |              | fallback     |              |
+--------------+--------------+--------------+--------------+--------------+
| LMestQPipCom | OT_REAL      | 0.003        | IP complemen | CasADi::Worh |
| Tol          |              |              | tarity       | pInternal    |
|              |              |              | tolerance in |              |
|              |              |              | initial      |              |
|              |              |              | multiplier   |              |
|              |              |              | estimate     |              |
+--------------+--------------+--------------+--------------+--------------+
| LMestQPipRes | OT_REAL      | 1            | IP residual  | CasADi::Worh |
| Tol          |              |              | tolerance in | pInternal    |
|              |              |              | initial      |              |
|              |              |              | multiplier   |              |
|              |              |              | estimate     |              |
+--------------+--------------+--------------+--------------+--------------+
| LinMult      | OT_BOOLEAN   | False        | Control      | CasADi::Worh |
|              |              |              | Lagrange     | pInternal    |
|              |              |              | multiplier   |              |
|              |              |              | update       |              |
+--------------+--------------+--------------+--------------+--------------+
| LogLevel     | OT_INTEGER   | 0            | Enable XML   | CasADi::Worh |
|              |              |              | logfiles and | pInternal    |
|              |              |              | writing      |              |
|              |              |              | interval     |              |
+--------------+--------------+--------------+--------------+--------------+
| LogResult    | OT_INTEGER   | 0            | Enable XML   | CasADi::Worh |
|              |              |              | result       | pInternal    |
|              |              |              | logging and  |              |
|              |              |              | detail level |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassAlpha | OT_REAL      | 0.950        | Lowpass-     | CasADi::Worh |
| F            |              |              | filter       | pInternal    |
|              |              |              | update       |              |
|              |              |              | factor for   |              |
|              |              |              | objective    |              |
|              |              |              | values       |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassAlpha | OT_REAL      | 0.950        | Lowpass-     | CasADi::Worh |
| G            |              |              | filter       | pInternal    |
|              |              |              | update       |              |
|              |              |              | factor for   |              |
|              |              |              | constraint   |              |
|              |              |              | values       |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassAlpha | OT_REAL      | 0.100        | Lowpass-     | CasADi::Worh |
| Merit        |              |              | filter       | pInternal    |
|              |              |              | update       |              |
|              |              |              | factor for   |              |
|              |              |              | merit        |              |
|              |              |              | function     |              |
|              |              |              | values       |              |
+--------------+--------------+--------------+--------------+--------------+
| LowPassFilte | OT_BOOLEAN   | True         | Enable       | CasADi::Worh |
| r            |              |              | lowpass-     | pInternal    |
|              |              |              | filter       |              |
|              |              |              | termination  |              |
|              |              |              | criterion    |              |
+--------------+--------------+--------------+--------------+--------------+
| Ma57PivotThr | OT_REAL      | 0.000        | Pivoting     | CasADi::Worh |
| esh          |              |              | tolerance    | pInternal    |
|              |              |              | for MA57 =   |              |
|              |              |              | CNTL(1)      |              |
+--------------+--------------+--------------+--------------+--------------+
| MatrixCC     | OT_BOOLEAN   | False        | Not to be    | CasADi::Worh |
|              |              |              | included     | pInternal    |
|              |              |              | into a       |              |
|              |              |              | parameter    |              |
|              |              |              | file!        |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxCalls     | OT_INTEGER   | 2.147e+09    | Upper bound  | CasADi::Worh |
|              |              |              | to Reverse C | pInternal    |
|              |              |              | ommunication |              |
|              |              |              | calls        |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxForce     | OT_INTEGER   | 1000         | Maximum      | CasADi::Worh |
|              |              |              | number of    | pInternal    |
|              |              |              | Force        |              |
|              |              |              | recovery     |              |
|              |              |              | strategy     |              |
|              |              |              | steps        |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxGPart     | OT_INTEGER   | 1            | (experimenta | CasADi::Worh |
|              |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| MaxIter      | OT_INTEGER   | 500          | Upper bound  | CasADi::Worh |
|              |              |              | on major     | pInternal    |
|              |              |              | iterations   |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxLScounter | OT_INTEGER   | 3            | Control      | CasADi::Worh |
|              |              |              | activation   | pInternal    |
|              |              |              | of Filter    |              |
|              |              |              | acceleration |              |
|              |              |              | heuristics   |              |
+--------------+--------------+--------------+--------------+--------------+
| MaxNorm      | OT_BOOLEAN   | True         | Select max-  | CasADi::Worh |
|              |              |              | norm instead | pInternal    |
|              |              |              | of 1-norm in |              |
|              |              |              | Filter       |              |
+--------------+--------------+--------------+--------------+--------------+
| MeritFunctio | OT_INTEGER   | 4            | Select merit | CasADi::Worh |
| n            |              |              | function and | pInternal    |
|              |              |              | penalty      |              |
|              |              |              | update [0,   |              |
|              |              |              | 3..5]        |              |
+--------------+--------------+--------------+--------------+--------------+
| MeritGradTol | OT_REAL      | 0.000        | Threshold of | CasADi::Worh |
|              |              |              | meritfunctio | pInternal    |
|              |              |              | n gradient   |              |
|              |              |              | for          |              |
|              |              |              | increasing   |              |
|              |              |              | Hessian regu |              |
|              |              |              | larisation   |              |
+--------------+--------------+--------------+--------------+--------------+
| MinBettsTau  | OT_REAL      | 0.000        | Lower bound  | CasADi::Worh |
|              |              |              | for Betts'   | pInternal    |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| MoreRelax    | OT_BOOLEAN   | False        | Introduce    | CasADi::Worh |
|              |              |              | one          | pInternal    |
|              |              |              | relaxation   |              |
|              |              |              | variable for |              |
|              |              |              | every        |              |
|              |              |              | constraint   |              |
+--------------+--------------+--------------+--------------+--------------+
| NLPmethod    | OT_INTEGER   | 1            | Select (1) M | CasADi::Worh |
|              |              |              | eritfunction | pInternal    |
|              |              |              | or (3)       |              |
|              |              |              | Filter globa |              |
|              |              |              | lisation     |              |
+--------------+--------------+--------------+--------------+--------------+
| NLPprint     | OT_INTEGER   | 2            | NLP print    | CasADi::Worh |
|              |              |              | level        | pInternal    |
|              |              |              | [-1..4]      |              |
+--------------+--------------+--------------+--------------+--------------+
| PairMethod   | OT_INTEGER   | 1            | Select       | CasADi::Worh |
|              |              |              | method to    | pInternal    |
|              |              |              | determine    |              |
|              |              |              | graph        |              |
|              |              |              | colouring    |              |
|              |              |              | pairgroups   |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdEpsBar | OT_REAL      | 0.900        | Penalty      | CasADi::Worh |
|              |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
|              |              |              | factor for M |              |
|              |              |              | eritFunction |              |
|              |              |              | = 3          |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdEpsKFa | OT_REAL      | 2            | Penalty      | CasADi::Worh |
| c            |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
|              |              |              | factor for M |              |
|              |              |              | eritFunction |              |
|              |              |              | = 4          |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdEpsKSe | OT_INTEGER   | 2            | Penalty      | CasADi::Worh |
| quence       |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdMaxDel | OT_REAL      | 11           | Max penalty  | CasADi::Worh |
| taK          |              |              | for MeritFun | pInternal    |
|              |              |              | ction = 4    |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdMaxFac | OT_REAL      | 100000000    | Max factor   | CasADi::Worh |
|              |              |              | for          | pInternal    |
|              |              |              | increasing   |              |
|              |              |              | penalty for  |              |
|              |              |              | MeritFunctio |              |
|              |              |              | n = 4        |              |
+--------------+--------------+--------------+--------------+--------------+
| PenUpdRBar   | OT_REAL      | 2            | Penalty      | CasADi::Worh |
|              |              |              | update       | pInternal    |
|              |              |              | parameter    |              |
|              |              |              | for MeritFun |              |
|              |              |              | ction = 3    |              |
+--------------+--------------+--------------+--------------+--------------+
| PrecisionF   | OT_REAL      | 0.000        | (currently   | CasADi::Worh |
|              |              |              | unused)      | pInternal    |
|              |              |              | Relative     |              |
|              |              |              | precision of |              |
|              |              |              | objective    |              |
+--------------+--------------+--------------+--------------+--------------+
| PrecisionG   | OT_REAL      | 0.000        | (currently   | CasADi::Worh |
|              |              |              | unused)      | pInternal    |
|              |              |              | Relative     |              |
|              |              |              | precision of |              |
|              |              |              | constraints  |              |
+--------------+--------------+--------------+--------------+--------------+
| QPscaleParam | OT_REAL      | 0            | (currently   | CasADi::Worh |
|              |              |              | unused)      | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| QuadraticPro | OT_BOOLEAN   | False        | Not to be    | CasADi::Worh |
| blem         |              |              | included     | pInternal    |
|              |              |              | into a       |              |
|              |              |              | parameter    |              |
|              |              |              | file!        |              |
+--------------+--------------+--------------+--------------+--------------+
| ReduceBettsT | OT_REAL      | 0.300        | Decrease     | CasADi::Worh |
| au           |              |              | factor for   | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| RegStrategy  | OT_INTEGER   | 1            | Select       | CasADi::Worh |
|              |              |              | Hessian regu | pInternal    |
|              |              |              | larisation   |              |
|              |              |              | strategy in  |              |
|              |              |              | Filter       |              |
+--------------+--------------+--------------+--------------+--------------+
| ReinitFilter | OT_BOOLEAN   | False        | Enables      | CasADi::Worh |
|              |              |              | Filter-reini | pInternal    |
|              |              |              | tialisation  |              |
|              |              |              | accelerating |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxMaxDelt | OT_REAL      | 0.920        | Upper bound  | CasADi::Worh |
| a            |              |              | for          | pInternal    |
|              |              |              | accepting    |              |
|              |              |              | the          |              |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | variable     |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxMaxPen  | OT_REAL      | 50000000     | Upper bound  | CasADi::Worh |
|              |              |              | on the       | pInternal    |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | penalty      |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxRho     | OT_REAL      | 6            | Update       | CasADi::Worh |
|              |              |              | factor for   | pInternal    |
|              |              |              | the          |              |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | penalty      |              |
+--------------+--------------+--------------+--------------+--------------+
| RelaxStart   | OT_REAL      | 1            | Initial      | CasADi::Worh |
|              |              |              | value of the | pInternal    |
|              |              |              | constraint   |              |
|              |              |              | relaxation   |              |
|              |              |              | penalty      |              |
+--------------+--------------+--------------+--------------+--------------+
| RestUntilFea | OT_BOOLEAN   | False        | Do           | CasADi::Worh |
| s            |              |              | restoration  | pInternal    |
|              |              |              | until a      |              |
|              |              |              | feasible     |              |
|              |              |              | solution is  |              |
|              |              |              | found        |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaleConIter | OT_BOOLEAN   | False        | Scale        | CasADi::Worh |
|              |              |              | constraints  | pInternal    |
|              |              |              | in every     |              |
|              |              |              | iteration    |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaleFacObj  | OT_REAL      | 10           | Value to     | CasADi::Worh |
|              |              |              | scale large  | pInternal    |
|              |              |              | objective    |              |
|              |              |              | functions to |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaleFacQP   | OT_REAL      | 10           | Upper bound  | CasADi::Worh |
|              |              |              | on resulting | pInternal    |
|              |              |              | matrix norm  |              |
|              |              |              | for QP       |              |
|              |              |              | scaling      |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaledFD     | OT_BOOLEAN   | True         | Use a scaled | CasADi::Worh |
|              |              |              | perturbation | pInternal    |
|              |              |              | for finite   |              |
|              |              |              | differences  |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaledKKT    | OT_BOOLEAN   | True         | Scale KKT    | CasADi::Worh |
|              |              |              | conditions   | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| ScaledObj    | OT_BOOLEAN   | True         | Scale the    | CasADi::Worh |
|              |              |              | objective    | pInternal    |
|              |              |              | function     |              |
+--------------+--------------+--------------+--------------+--------------+
| ScaledQP     | OT_BOOLEAN   | True         | Scale some   | CasADi::Worh |
|              |              |              | matrices     | pInternal    |
|              |              |              | handed to    |              |
|              |              |              | the QP       |              |
+--------------+--------------+--------------+--------------+--------------+
| StartBettsTa | OT_REAL      | 0.100        | Initial      | CasADi::Worh |
| u            |              |              | value for    | pInternal    |
|              |              |              | Betts'       |              |
|              |              |              | update       |              |
|              |              |              | dampening    |              |
|              |              |              | term         |              |
+--------------+--------------+--------------+--------------+--------------+
| SwitchingDel | OT_REAL      | 0.010        | Filter       | CasADi::Worh |
| ta           |              |              | switching    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| SwitchingSCV | OT_REAL      | 1.100        | Filter       | CasADi::Worh |
|              |              |              | switching    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| SwitchingSF  | OT_REAL      | 2.300        | Filter       | CasADi::Worh |
|              |              |              | switching    | pInternal    |
|              |              |              | condition    |              |
|              |              |              | parameter    |              |
+--------------+--------------+--------------+--------------+--------------+
| TakeQPSol    | OT_BOOLEAN   | False        | Evaluate QP  | CasADi::Worh |
|              |              |              | search       | pInternal    |
|              |              |              | direction    |              |
|              |              |              | regardless   |              |
|              |              |              | of           |              |
|              |              |              | convergence  |              |
+--------------+--------------+--------------+--------------+--------------+
| Timeout      | OT_REAL      | 300          | Timeout in   | CasADi::Worh |
|              |              |              | seconds      | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TolComp      | OT_REAL      | 0.001        | Complementar | CasADi::Worh |
|              |              |              | ity          | pInternal    |
|              |              |              | tolerance    |              |
+--------------+--------------+--------------+--------------+--------------+
| TolFeas      | OT_REAL      | 0.000        | Feasibility  | CasADi::Worh |
|              |              |              | tolerance    | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TolOpti      | OT_REAL      | 0.000        | Optimality   | CasADi::Worh |
|              |              |              | tolerance    | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TolWeakActiv | OT_REAL      | 1            | (experimenta | CasADi::Worh |
| e            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| TooBig       | OT_BOOLEAN   | True         | Enable too-  | CasADi::Worh |
|              |              |              | big          | pInternal    |
|              |              |              | termination  |              |
|              |              |              | heuristics   |              |
+--------------+--------------+--------------+--------------+--------------+
| TooBigCV     | OT_REAL      | 1.000e+25    | Upper bound  | CasADi::Worh |
|              |              |              | on           | pInternal    |
|              |              |              | constraint   |              |
|              |              |              | violation    |              |
|              |              |              | for too-big  |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| TooBigKKT    | OT_REAL      | 1.000e+30    | Upper bound  | CasADi::Worh |
|              |              |              | on KKT       | pInternal    |
|              |              |              | values for   |              |
|              |              |              | too-big      |              |
|              |              |              | heuristic    |              |
+--------------+--------------+--------------+--------------+--------------+
| UserDF       | OT_BOOLEAN   | True         | Objective    | CasADi::Worh |
|              |              |              | gradient     | pInternal    |
|              |              |              | values       |              |
|              |              |              | supplied by  |              |
|              |              |              | caller       |              |
+--------------+--------------+--------------+--------------+--------------+
| UserDG       | OT_BOOLEAN   | True         | Jacobian     | CasADi::Worh |
|              |              |              | values       | pInternal    |
|              |              |              | supplied by  |              |
|              |              |              | caller       |              |
+--------------+--------------+--------------+--------------+--------------+
| UserHM       | OT_BOOLEAN   | False        | Hessian      | CasADi::Worh |
|              |              |              | values       | pInternal    |
|              |              |              | supplied by  |              |
|              |              |              | caller       |              |
+--------------+--------------+--------------+--------------+--------------+
| UserHMstruct | OT_INTEGER   | 2            | Enable       | CasADi::Worh |
| ure          |              |              | automatic    | pInternal    |
|              |              |              | Hessian      |              |
|              |              |              | structure    |              |
|              |              |              | generation   |              |
|              |              |              | or checking  |              |
+--------------+--------------+--------------+--------------+--------------+
| WeakActiveSe | OT_BOOLEAN   | False        | (experimenta | CasADi::Worh |
| t            |              |              | l)           | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| ad_mode      | OT_STRING    | automatic    | How to       | CasADi::Worh |
|              |              |              | calculate    | pInternal    |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
+--------------+--------------+--------------+--------------+--------------+
| eps          | OT_REAL      | 0.000        | Machine      | CasADi::Worh |
|              |              |              | epsilon      | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| expand_f     | OT_BOOLEAN   | False        | Expand the   | CasADi::Worh |
|              |              |              | objective    | pInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| expand_g     | OT_BOOLEAN   | False        | Expand the   | CasADi::Worh |
|              |              |              | constraint   | pInternal    |
|              |              |              | function in  |              |
|              |              |              | terms of     |              |
|              |              |              | scalar       |              |
|              |              |              | operations,  |              |
|              |              |              | i.e. MX-> SX |              |
+--------------+--------------+--------------+--------------+--------------+
| gauss_newton | OT_BOOLEAN   | False        | Use Gauss    | CasADi::Worh |
|              |              |              | Newton       | pInternal    |
|              |              |              | Hessian appr |              |
|              |              |              | oximation    |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_hes | OT_BOOLEAN   | False        | Generate an  | CasADi::Worh |
| sian         |              |              | exact        | pInternal    |
|              |              |              | Hessian of   |              |
|              |              |              | the          |              |
|              |              |              | Lagrangian   |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| generate_jac | OT_BOOLEAN   | True         | Generate an  | CasADi::Worh |
| obian        |              |              | exact        | pInternal    |
|              |              |              | Jacobian of  |              |
|              |              |              | the          |              |
|              |              |              | constraints  |              |
|              |              |              | if not       |              |
|              |              |              | supplied     |              |
+--------------+--------------+--------------+--------------+--------------+
| ignore_check | OT_BOOLEAN   | False        | If set to    | CasADi::Worh |
| _vec         |              |              | true, the    | pInternal    |
|              |              |              | input shape  |              |
|              |              |              | of F will    |              |
|              |              |              | not be       |              |
|              |              |              | checked.     |              |
+--------------+--------------+--------------+--------------+--------------+
| initialised  | OT_BOOLEAN   | True         | Automaticall | CasADi::Worh |
|              |              |              | y added init | pInternal    |
|              |              |              | ialisation   |              |
|              |              |              | flag.        |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_FX        |              | A function   | CasADi::Worh |
| llback       |              |              | that will be | pInternal    |
|              |              |              | called at    |              |
|              |              |              | each         |              |
|              |              |              | iteration.   |              |
|              |              |              | Input scheme |              |
|              |              |              | is the same  |              |
|              |              |              | as           |              |
|              |              |              | NLPSolver's  |              |
|              |              |              | output       |              |
|              |              |              | scheme.      |              |
|              |              |              | Output is    |              |
|              |              |              | scalar.      |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_BOOLEAN   | False        | If set to    | CasADi::Worh |
| llback_ignor |              |              | true, errors | pInternal    |
| e_errors     |              |              | thrown by it |              |
|              |              |              | eration_call |              |
|              |              |              | back will be |              |
|              |              |              | ignored.     |              |
+--------------+--------------+--------------+--------------+--------------+
| iteration_ca | OT_INTEGER   | 1            | Only call    | CasADi::Worh |
| llback_step  |              |              | the callback | pInternal    |
|              |              |              | function     |              |
|              |              |              | every few    |              |
|              |              |              | iterations.  |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | False        | Create the a | CasADi::Worh |
|              |              |              | Jacobian     | pInternal    |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG |              | Function     | CasADi::Worh |
| erator       | ENERATOR     |              | pointer that | pInternal    |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC |              | Monitors to  | CasADi::Worh |
|              | TOR          |              | be activated | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | unnamed_shar | n/a          | CasADi::Worh |
|              |              | ed_object    |              | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::Worh |
| j_dir        |              |              | adjoint      | pInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::Worh |
| d_dir        |              |              | forward      | pInternal    |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | False        | Calculate    | CasADi::Worh |
| ian          |              |              | Hessians     | pInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | False        | Calculate    | CasADi::Worh |
| bian         |              |              | Jacobians    | pInternal    |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| parametric   | OT_BOOLEAN   | False        | Expect F, G, | CasADi::Worh |
|              |              |              | H, J to have | pInternal    |
|              |              |              | an           |              |
|              |              |              | additional   |              |
|              |              |              | input        |              |
|              |              |              | argument     |              |
|              |              |              | appended at  |              |
|              |              |              | the end,     |              |
|              |              |              | denoting     |              |
|              |              |              | fixed        |              |
|              |              |              | parameters.  |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | True         | function is  | CasADi::Worh |
|              |              |              | sparse       | pInternal    |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG |              | Function     | CasADi::Worh |
| erator       | ENERATOR     |              | that         | pInternal    |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | False        | keep         | CasADi::Worh |
| ans          |              |              | references   | pInternal    |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_UNKNOWN   |              | A user-      | CasADi::Worh |
|              |              |              | defined      | pInternal    |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | False        | verbose      | CasADi::Worh |
|              |              |              | evaluation   | pInternal    |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+
| warn_initial | OT_BOOLEAN   | False        | Warn if the  | CasADi::Worh |
| _bounds      |              |              | initial      | pInternal    |
|              |              |              | guess does   |              |
|              |              |              | not satisfy  |              |
|              |              |              | LBX and UBX  |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+-------------+-----------------------+
|     Id      |        Used in        |
+=============+=======================+
| eval_f      | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_g      | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_grad_f | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_h      | CasADi::WorhpInternal |
+-------------+-----------------------+
| eval_jac_g  | CasADi::WorhpInternal |
+-------------+-----------------------+
| inputs      | CasADi::FXInternal    |
+-------------+-----------------------+
| outputs     | CasADi::FXInternal    |
+-------------+-----------------------+

C++ includes: worhp_solver.hpp ";

/*  Setters  */

/* Set an input, output, forward seed/sensitivity or adjoint
seed/sensitivity  T can be double&, double*, std::vector<double>&,
Matrix<double> &  Assumes a properly allocated val.

*/

%feature("docstring")  CasADi::WorhpSolver::setInput "

Reads in the input argument from val. ";

%feature("docstring")  CasADi::WorhpSolver::setOutput "

Reads in the output argument from val. ";

%feature("docstring")  CasADi::WorhpSolver::setFwdSeed "

Reads in the forward seed from val. ";

%feature("docstring")  CasADi::WorhpSolver::setFwdSens "

Reads in the forward sensitivity from val. ";

%feature("docstring")  CasADi::WorhpSolver::setAdjSeed "

Reads in the adjoint seed from val. ";

%feature("docstring")  CasADi::WorhpSolver::setAdjSens "

Reads in the adjoint sensitivity from val. ";

/*  Getters  */

/* A group of accessor for numerical data that operate on preallocated data.
get an input, output, forward seed/sensitivity or adjoint seed/sensitivity
T can be double&, double*, std::vector<double>&, Matrix<double> &  Assumes a
properly allocated val.

*/

%feature("docstring")  CasADi::WorhpSolver::getInput "

Writes out the input argument into val. ";

%feature("docstring")  CasADi::WorhpSolver::getOutput "

Writes out the output argument into val. ";

%feature("docstring")  CasADi::WorhpSolver::getFwdSeed "

Writes out the forward seed into val. ";

%feature("docstring")  CasADi::WorhpSolver::getFwdSens "

Writes out the forward sensitivity into val. ";

%feature("docstring")  CasADi::WorhpSolver::getAdjSeed "

Writes out the adjoint seed into val. ";

%feature("docstring")  CasADi::WorhpSolver::getAdjSens "

Writes out the adjoint sensitivity into val. ";

/*  Option Functionality  */

%feature("docstring")  CasADi::WorhpSolver::setOption "

set an option. For a list of options, check the class documentation of this
class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::WorhpSolver::setOption "

set a set of options. For a list of options, check the class documentation
of this class.

The setOptions are only considered before the init function. If properties
changes, the init function should be called again. ";

%feature("docstring")  CasADi::WorhpSolver::getOption "

get an option value ";

%feature("docstring")  CasADi::WorhpSolver::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::WorhpSolver::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::WorhpSolver::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::WorhpSolver::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::WorhpSolver::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::WorhpSolver::makeUnique "

If there are other references to the object, then make a deep copy of it and
point to this new object. ";

%feature("docstring")  CasADi::WorhpSolver::makeUnique "";

%feature("docstring")  CasADi::WorhpSolver::WorhpSolver "

Default constructor. ";

%feature("docstring")  CasADi::WorhpSolver::WorhpSolver "

Constuct an NLP with non-linear constraints and provided hessian
approximation. ";

%feature("docstring")  CasADi::WorhpSolver::checkNode "

Check if the node is pointing to the right type of object. ";

%feature("docstring")  CasADi::WorhpSolver::reportConstraints "";

%feature("docstring")  CasADi::WorhpSolver::getReportConstraints "";

%feature("docstring")  CasADi::WorhpSolver::getF "

Access the objective function F. ";

%feature("docstring")  CasADi::WorhpSolver::getG "

Access the objective function G. ";

%feature("docstring")  CasADi::WorhpSolver::getH "

Access the hessian of the Lagrangian function H. ";

%feature("docstring")  CasADi::WorhpSolver::getJ "

Access the jacobian of the constraint function J. ";

%feature("docstring")  CasADi::WorhpSolver::getNumInputs "

Get number of inputs. ";

%feature("docstring")  CasADi::WorhpSolver::getNumOutputs "

Get number of outputs. ";

%feature("docstring")  CasADi::WorhpSolver::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::WorhpSolver::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::WorhpSolver::setNumInputs "

Set number of inputs (normally invoked internally) ";

%feature("docstring")  CasADi::WorhpSolver::setNumOutputs "

Set number of outputs (normally invoked internally) ";

%feature("docstring")  CasADi::WorhpSolver::updateNumSens "

Update the number of sensitivity directions during or after initialization
(normally invoked internally) ";

%feature("docstring")  CasADi::WorhpSolver::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::WorhpSolver::solve "

the same as evaluate(0,0) ";

%feature("docstring")  CasADi::WorhpSolver::jacobian "

Calculate jacobian of output oind with respect to input iind.

Parameters:
-----------

oind:  The index of the output

iind:  The index of the input

The default behaviour for FX is to use CasADi::Jacobian, which uses
(numerical) directional derivatives (i.e. operator overloading) to form the
Jacobian. ";

%feature("docstring")  CasADi::WorhpSolver::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::WorhpSolver::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::WorhpSolver::call "

Create a function call (single input) ";

%feature("docstring")  CasADi::WorhpSolver::call "

Create a function call ( MX graph) ";

%feature("docstring")  CasADi::WorhpSolver::call "

Create a function call with directional derivatives Note: return by
reference with SWIG. ";

%feature("docstring")  CasADi::WorhpSolver::call "

Evaluate symbolically in parallel (matrix graph) paropt: Set of options to
be passed to the Parallelizer. ";

%feature("docstring")  CasADi::WorhpSolver::callSX "

Create a function call ( SX graph) NOTE: UNDER DEVELOPMENT. ";

%feature("docstring")  CasADi::WorhpSolver::eval "

evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::WorhpSolver::eval "

evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::WorhpSolver::eval "

Evaluate symbolically with with directional derivatives, SX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::WorhpSolver::eval "

Evaluate symbolically with with directional derivatives, MX type, overloaded
The first two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::WorhpSolver::eval "

evaluate symbolically, single input, single output ";

%feature("docstring")  CasADi::WorhpSolver::evalMX "

evaluate symbolically, MX type (unambiguous) ";

%feature("docstring")  CasADi::WorhpSolver::evalMX "

Evaluate symbolically with with directional derivatives, MX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::WorhpSolver::evalSX "

evaluate symbolically, SX type (unambiguous) ";

%feature("docstring")  CasADi::WorhpSolver::evalSX "

Evaluate symbolically with with directional derivatives, SX type The first
two arguments are the nondifferentiated inputs and results of the
evaluation, the next two arguments are a set of forward directional seeds
and the resulting forward directional derivatives, the length of the vector
being the number of forward directions. The next two arguments are a set of
adjoint directional seeds and the resulting adjoint directional derivatives,
the length of the vector being the number of adjoint directions. The boolean
argument allows the second argument to the functions to be used as an input
instead of output, assuming it is already known. ";

%feature("docstring")  CasADi::WorhpSolver::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives Returns a function with (1+nfwd)*n_in+nadj*n_out inputs and
(1+nfwd)*n_out + nadj*n_in outputs. The first n_in inputs corresponds to
nondifferentiated inputs. The next nfwd*n_in inputs corresponds to forward
seeds, one direction at a time and the last nadj*n_out inputs corresponds to
adjoint seeds, one direction at a time. The first n_out outputs corresponds
to nondifferentiated outputs. The next nfwd*n_out outputs corresponds to
forward sensitivities, one direction at a time and the last nadj*n_in
outputs corresponds to adjoint sensitivties, one direction at a time.

(n_in = getNumInputs(), n_out = getNumOutputs())

The functions returned are cached, meaning that if called multiple timed
with the same value, then multiple references to the same function will be
returned. ";

%feature("docstring")  CasADi::WorhpSolver::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::WorhpSolver::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::WorhpSolver::indexed_one_based "";

%feature("docstring")  CasADi::WorhpSolver::indexed_zero_based "";

%feature("docstring")  CasADi::WorhpSolver::input "

Const access input argument. ";

%feature("docstring")  CasADi::WorhpSolver::input "

Access input argument. ";

%feature("docstring")  CasADi::WorhpSolver::output "

Const access input argument. ";

%feature("docstring")  CasADi::WorhpSolver::output "

Access output argument Note that copies in Python are shallow by default and
fx.output() gives a reference/pointer to an internal data structure. So if
you want save fx.output(), you need to make a deep copy using for example
DMatrix(fx.output()). ";

%feature("docstring")  CasADi::WorhpSolver::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::WorhpSolver::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::WorhpSolver::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpSolver::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpSolver::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::WorhpSolver::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::WorhpSolver::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpSolver::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::WorhpSolver::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::WorhpSolver::getStat "

Get a single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::WorhpSolver::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs
There is no guarantee that consecutive calls return identical objects. ";

%feature("docstring")  CasADi::WorhpSolver::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs,
SX graph There is no guarantee that consecutive calls return identical
objects. ";

%feature("docstring")  CasADi::WorhpSolver::spCanEvaluate "

Is the class able to propate seeds through the algorithm? (for usage, see
the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::WorhpSolver::spInit "

Reset the sparsity propagation (for usage, see the example
propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::WorhpSolver::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward (for usage, see the example propagating_sparsity.cpp) ";

%feature("docstring")  CasADi::WorhpSolver::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::WorhpSolver::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::WorhpSolver::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::WorhpSolver::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::WorhpSolver::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::WorhpSolver::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::WorhpSolver::clone "

Deep copy. ";

%feature("docstring")  CasADi::WorhpSolver::assignNode "

Assign the node to a node class pointer (or null) ";

%feature("docstring")  CasADi::WorhpSolver::assignNodeNoCount "

Assign the node to a node class pointer without reference counting: inproper
use will cause memory leaks! ";

%feature("docstring")  CasADi::WorhpSolver::get "

Get a const pointer to the node. ";

%feature("docstring")  CasADi::WorhpSolver::get "

Get a pointer to the node. ";

%feature("docstring")  CasADi::WorhpSolver::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::WorhpSolver::swap "

Swap content with another instance. ";

%feature("docstring")  CasADi::WorhpSolver::repr "

Print a representation of the object. ";

%feature("docstring")  CasADi::WorhpSolver::print "

Print a destription of the object. ";

%feature("docstring")  CasADi::WorhpSolver::init "

Initialize the object: more documentation in the node class (
SharedObjectNode and derived classes) ";

%feature("docstring")  CasADi::WorhpSolver::isInit "

Is initialized? ";

%feature("docstring")  CasADi::WorhpSolver::assertInit "

Assert that it is initialized. ";

%feature("docstring")  CasADi::WorhpSolver::isNull "

Is a null pointer? ";

%feature("docstring")  CasADi::WorhpSolver::getRepresentation "

Return a string with a representation (for SWIG) ";

%feature("docstring")  CasADi::WorhpSolver::getDescription "

Return a string with a destription (for SWIG) ";


// File: classCasADi_1_1XFunctionInternal.xml
%feature("docstring") CasADi::XFunctionInternal "

Internal node class for the base class of SXFunctionInternal and
MXFunctionInternal (lacks a public counterpart) The design of the class uses
the curiously recurring template pattern (CRTP) idiom.

Joel Andersson

>List of available options
+--------------+--------------+--------------+--------------+--------------+
|      Id      |     Type     |   Default    | Description  |   Used in    |
+==============+==============+==============+==============+==============+
| ad_mode      | OT_STRING    | \"automatic\"  | How to       | CasADi::FXIn |
|              |              |              | calculate    | ternal       |
|              |              |              | the          |              |
|              |              |              | Jacobians:   |              |
|              |              |              | \"forward\"    |              |
|              |              |              | (only        |              |
|              |              |              | forward      |              |
|              |              |              | mode)        |              |
|              |              |              | \"reverse\"    |              |
|              |              |              | (only        |              |
|              |              |              | adjoint      |              |
|              |              |              | mode) or     |              |
|              |              |              | \"automatic\"  |              |
|              |              |              | (a heuristic |              |
|              |              |              | decides      |              |
|              |              |              | which is     |              |
|              |              |              | more         |              |
|              |              |              | appropriate) |              |
|              |              |              | (forward|rev |              |
|              |              |              | erse|automat |              |
|              |              |              | ic)          |              |
+--------------+--------------+--------------+--------------+--------------+
| jac_for_sens | OT_BOOLEAN   | false        | Create the a | CasADi::FXIn |
|              |              |              | Jacobian     | ternal       |
|              |              |              | function and |              |
|              |              |              | use this to  |              |
|              |              |              | calculate    |              |
|              |              |              | forward sens |              |
|              |              |              | itivities    |              |
+--------------+--------------+--------------+--------------+--------------+
| jacobian_gen | OT_JACOBIANG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | pointer that | ternal       |
|              |              |              | returns a    |              |
|              |              |              | Jacobian     |              |
|              |              |              | function     |              |
|              |              |              | given a set  |              |
|              |              |              | of desired   |              |
|              |              |              | Jacobian     |              |
|              |              |              | blocks,      |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| monitor      | OT_STRINGVEC | GenericType( | Monitors to  | CasADi::FXIn |
|              | TOR          | )            | be activated | ternal       |
|              |              |              | (inputs|outp |              |
|              |              |              | uts)         |              |
+--------------+--------------+--------------+--------------+--------------+
| name         | OT_STRING    | \"unnamed_sha | name of the  | CasADi::Opti |
|              |              | red_object\"  | object       | onsFunctiona |
|              |              |              |              | lityNode     |
+--------------+--------------+--------------+--------------+--------------+
| number_of_ad | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| j_dir        |              |              | adjoint      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| number_of_fw | OT_INTEGER   | 1            | number of    | CasADi::FXIn |
| d_dir        |              |              | forward      | ternal       |
|              |              |              | derivatives  |              |
|              |              |              | to be        |              |
|              |              |              | calculated s |              |
|              |              |              | imultanously |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_hess | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| ian          |              |              | Hessians     | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| numeric_jaco | OT_BOOLEAN   | false        | Calculate    | CasADi::FXIn |
| bian         |              |              | Jacobians    | ternal       |
|              |              |              | numerically  |              |
|              |              |              | (using       |              |
|              |              |              | directional  |              |
|              |              |              | derivatives) |              |
|              |              |              | rather than  |              |
|              |              |              | with the     |              |
|              |              |              | built-in     |              |
|              |              |              | method       |              |
+--------------+--------------+--------------+--------------+--------------+
| sparse       | OT_BOOLEAN   | true         | function is  | CasADi::FXIn |
|              |              |              | sparse       | ternal       |
+--------------+--------------+--------------+--------------+--------------+
| sparsity_gen | OT_SPARSITYG | GenericType( | Function     | CasADi::FXIn |
| erator       | ENERATOR     | )            | that         | ternal       |
|              |              |              | provides     |              |
|              |              |              | sparsity for |              |
|              |              |              | a given      |              |
|              |              |              | input output |              |
|              |              |              | block,       |              |
|              |              |              | overrides    |              |
|              |              |              | internal     |              |
|              |              |              | routines     |              |
+--------------+--------------+--------------+--------------+--------------+
| store_jacobi | OT_BOOLEAN   | false        | keep         | CasADi::FXIn |
| ans          |              |              | references   | ternal       |
|              |              |              | to generated |              |
|              |              |              | Jacobians in |              |
|              |              |              | order to     |              |
|              |              |              | avoid        |              |
|              |              |              | generating   |              |
|              |              |              | identical    |              |
|              |              |              | Jacobians    |              |
|              |              |              | multiple     |              |
|              |              |              | times        |              |
+--------------+--------------+--------------+--------------+--------------+
| user_data    | OT_VOIDPTR   | GenericType( | A user-      | CasADi::FXIn |
|              |              | )            | defined      | ternal       |
|              |              |              | field that   |              |
|              |              |              | can be used  |              |
|              |              |              | to identify  |              |
|              |              |              | the function |              |
|              |              |              | or pass      |              |
|              |              |              | additional   |              |
|              |              |              | information  |              |
+--------------+--------------+--------------+--------------+--------------+
| verbose      | OT_BOOLEAN   | false        | verbose      | CasADi::FXIn |
|              |              |              | evaluation   | ternal       |
|              |              |              | -- for       |              |
|              |              |              | debugging    |              |
+--------------+--------------+--------------+--------------+--------------+

>List of available monitors
+---------+--------------------+
|   Id    |      Used in       |
+=========+====================+
| inputs  | CasADi::FXInternal |
+---------+--------------------+
| outputs | CasADi::FXInternal |
+---------+--------------------+

C++ includes: x_function_internal.hpp ";

%feature("docstring")  CasADi::XFunctionInternal::XFunctionInternal "

Constructor. ";

%feature("docstring")  CasADi::XFunctionInternal::~XFunctionInternal "

Destructor. ";

%feature("docstring")  CasADi::XFunctionInternal::jacGen "

Construct a complete Jacobian by compression. ";

%feature("docstring")  CasADi::XFunctionInternal::evaluate "

Evaluate. ";

%feature("docstring")  CasADi::XFunctionInternal::init "

Initialize Initialize and make the object ready for setting arguments and
evaluation. This method is typically called after setting options but before
evaluating. If passed to another class (in the constructor), this class
should invoke this function when initialized. ";

%feature("docstring")  CasADi::XFunctionInternal::updateNumSens "

Update the number of sensitivity directions during or after initialization,
if recursive==true, updateNumSens is also invoked for the baseclass. ";

%feature("docstring")  CasADi::XFunctionInternal::jacobian "

Calculate the jacobian of a number of function outputs with respect to a
number of function inputs, optionally include the function outputs. ";

%feature("docstring")  CasADi::XFunctionInternal::jacobian_switch "

Switch between numeric and symbolic jacobian. ";

%feature("docstring")  CasADi::XFunctionInternal::numeric_jacobian "

Numeric Jacobian. ";

%feature("docstring")  CasADi::XFunctionInternal::hessian "

Hessian of output oind with respect to input iind. ";

%feature("docstring")  CasADi::XFunctionInternal::spEvaluate "

Propagate the sparsity pattern through a set of directional derivatives
forward or backward. ";

%feature("docstring")  CasADi::XFunctionInternal::spCanEvaluate "

Is the class able to propate seeds through the algorithm? ";

%feature("docstring")  CasADi::XFunctionInternal::spInit "

Reset the sparsity propagation. ";

%feature("docstring")  CasADi::XFunctionInternal::evalSX "

Evaluate symbolically, SX type. ";

%feature("docstring")  CasADi::XFunctionInternal::evalMX "

Evaluate symbolically, MX type. ";

%feature("docstring")  CasADi::XFunctionInternal::eval "

Evaluate symbolically, SX type (overloaded) ";

%feature("docstring")  CasADi::XFunctionInternal::eval "

Evaluate symbolically, MX type (overloaded) ";

%feature("docstring")  CasADi::XFunctionInternal::derivative "

Get a function that calculates nfwd forward derivatives and nadj adjoint
derivatives (cached) ";

%feature("docstring")  CasADi::XFunctionInternal::getDerivative "

Generate a function that calculates nfwd forward derivatives and nadj
adjoint derivatives. ";

%feature("docstring")  CasADi::XFunctionInternal::jacobian_new "

Access a Jacobian function (cached) ";

%feature("docstring")  CasADi::XFunctionInternal::getJacobian "

Generate a function that calculates a Jacobian function. ";

%feature("docstring")  CasADi::XFunctionInternal::iStruct "

Access an input. ";

%feature("docstring")  CasADi::XFunctionInternal::iStruct "

Const access an input. ";

%feature("docstring")  CasADi::XFunctionInternal::oStruct "

Access an output. ";

%feature("docstring")  CasADi::XFunctionInternal::oStruct "

Const access an output. ";

%feature("docstring")  CasADi::XFunctionInternal::print "

Print. ";

%feature("docstring")  CasADi::XFunctionInternal::repr "

Print. ";

%feature("docstring")  CasADi::XFunctionInternal::getPartition "

Get the unidirectional or bidirectional partition. ";

%feature("docstring")  CasADi::XFunctionInternal::verbose "

Verbose mode? ";

%feature("docstring")  CasADi::XFunctionInternal::monitored "

Is function fcn being monitored. ";

%feature("docstring")  CasADi::XFunctionInternal::input "

Access input argument. ";

%feature("docstring")  CasADi::XFunctionInternal::input "

Const access input argument. ";

%feature("docstring")  CasADi::XFunctionInternal::output "

Access input argument. ";

%feature("docstring")  CasADi::XFunctionInternal::output "

Const access input argument. ";

%feature("docstring")  CasADi::XFunctionInternal::fwdSeed "

Access forward seed. ";

%feature("docstring")  CasADi::XFunctionInternal::fwdSeed "

Const access forward seed. ";

%feature("docstring")  CasADi::XFunctionInternal::fwdSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::XFunctionInternal::fwdSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::XFunctionInternal::adjSeed "

Access adjoint seed. ";

%feature("docstring")  CasADi::XFunctionInternal::adjSeed "

Const access adjoint seed. ";

%feature("docstring")  CasADi::XFunctionInternal::adjSens "

Access forward sensitivity. ";

%feature("docstring")  CasADi::XFunctionInternal::adjSens "

Const access forward sensitivity. ";

%feature("docstring")  CasADi::XFunctionInternal::setNumInputs "

Set the number of function inputs. ";

%feature("docstring")  CasADi::XFunctionInternal::setNumOutputs "

Set the number of function outputs. ";

%feature("docstring")  CasADi::XFunctionInternal::getNumInputs "

Get the number of function inputs. ";

%feature("docstring")  CasADi::XFunctionInternal::getNumOutputs "

Get the number of function outputs. ";

%feature("docstring")  CasADi::XFunctionInternal::getNumScalarInputs "

Get total number of scalar inputs (i.e. the number of nonzeros in all of the
matrix-valued inputs) ";

%feature("docstring")  CasADi::XFunctionInternal::getNumScalarOutputs "

Get total number of scalar outputs (i.e. the number of nonzeros in all of
the matrix-valued outputs) ";

%feature("docstring")  CasADi::XFunctionInternal::getStats "

Get all statistics obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::XFunctionInternal::getStat "

Get single statistic obtained at the end of the last evaluate call. ";

%feature("docstring")  CasADi::XFunctionInternal::getJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::XFunctionInternal::setJacSparsity "

Generate the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::XFunctionInternal::jacSparsity "

Get, if necessary generate, the sparsity of a Jacobian block. ";

%feature("docstring")  CasADi::XFunctionInternal::symbolicInput "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::XFunctionInternal::symbolicInputSX "

Get a vector of symbolic variables with the same dimensions as the inputs.
";

%feature("docstring")  CasADi::XFunctionInternal::log "

Log the status of the solver. ";

%feature("docstring")  CasADi::XFunctionInternal::log "

Log the status of the solver, function given. ";

%feature("docstring")  CasADi::XFunctionInternal::setOption "

set an option. The setOptions are in general only considered before the init
function, if any. If properties changes, the init function should be called
again. (Ticket #54) ";

%feature("docstring")  CasADi::XFunctionInternal::setOption "

set a set of options. The setOptions are in general only considered before
the init function, if any. If properties changes, the init function should
be called again. (Ticket #54) ";

%feature("docstring")  CasADi::XFunctionInternal::getOptionNames "

Get a list of all option names. ";

%feature("docstring")  CasADi::XFunctionInternal::getOptionDescription "

Get the description of a certain option. ";

%feature("docstring")  CasADi::XFunctionInternal::getOptionType "

Get the type of a certain option. ";

%feature("docstring")  CasADi::XFunctionInternal::getOptionTypeName "

Get the type name of a certain option. ";

%feature("docstring")  CasADi::XFunctionInternal::getOptionDefault "

Get the default of a certain option. ";

%feature("docstring")  CasADi::XFunctionInternal::getOptionAllowed "

Get the allowed values of a certain option. ";

%feature("docstring")  CasADi::XFunctionInternal::hasOption "

check if there is an option str ";

%feature("docstring")  CasADi::XFunctionInternal::hasSetOption "

check if the user has there is an option str ";

%feature("docstring")  CasADi::XFunctionInternal::printOptions "

Print options to a stream. ";

%feature("docstring")  CasADi::XFunctionInternal::printOption "

Print all information there is to know about a certain option. ";

%feature("docstring")  CasADi::XFunctionInternal::getOption "

get an option value ";

%feature("docstring")  CasADi::XFunctionInternal::copyOptions "

Copy all options from another object. ";

%feature("docstring")  CasADi::XFunctionInternal::dictionary "

Get the dictionary. ";

%feature("docstring")  CasADi::XFunctionInternal::getBestMatches "

Get th ebest suggestions of option names. ";

%feature("docstring")  CasADi::XFunctionInternal::regRef "

Register a weak reference. ";

%feature("docstring")  CasADi::XFunctionInternal::unregRef "

Unregister a weak reference. ";

%feature("docstring")  CasADi::XFunctionInternal::clone "

Make a deep copy of the instance. ";

%feature("docstring")  CasADi::XFunctionInternal::deepCopyMembers "

Deep copy data members. ";

%feature("docstring")  CasADi::XFunctionInternal::getCount "

Get the reference count. ";

%feature("docstring")  CasADi::XFunctionInternal::isInit "

Check if the object has been initialized. ";

%feature("docstring")  CasADi::XFunctionInternal::assertInit "

Assert that the object has been initialized. ";


// File: classCasADi_1_1XMLNode.xml
%feature("docstring") CasADi::XMLNode "C++ includes: xml_node.hpp ";

%feature("docstring")  CasADi::XMLNode::XMLNode "";

%feature("docstring")  CasADi::XMLNode::XMLNode "";

%feature("docstring")  CasADi::XMLNode::~XMLNode "";

%feature("docstring")  CasADi::XMLNode::setAttribute "

Add an attribute. ";

%feature("docstring")  CasADi::XMLNode::addChild "

Add a child. ";

%feature("docstring")  CasADi::XMLNode::attribute "

Get an attribute by its name. ";

%feature("docstring")  CasADi::XMLNode::hasChild "

Check if a child is present. ";

%feature("docstring")  CasADi::XMLNode::hasAttribute "

Check if an attribute is present. ";

%feature("docstring")  CasADi::XMLNode::size "

Get the number of children. ";

%feature("docstring")  CasADi::XMLNode::getName "

Get the name of the node. ";

%feature("docstring")  CasADi::XMLNode::setName "

Set the name of the node. ";

%feature("docstring")  CasADi::XMLNode::checkName "

check if the name is equal to something ";

%feature("docstring")  CasADi::XMLNode::getText "

Get the value of the text field. ";

%feature("docstring")  CasADi::XMLNode::addAttributes "";

%feature("docstring")  CasADi::XMLNode::addNode "";

%feature("docstring")  CasADi::XMLNode::dump "";


// File: classCasADi_1_1ZeroSX.xml
%feature("docstring") CasADi::ZeroSX "

Represents a zero SX.

Joel Andersson

C++ includes: constant_sx.hpp ";

%feature("docstring")  CasADi::ZeroSX::getValue "

Get the value. ";

%feature("docstring")  CasADi::ZeroSX::getIntValue "";

%feature("docstring")  CasADi::ZeroSX::isInteger "

Properties. ";

%feature("docstring")  CasADi::ZeroSX::isZero "";

%feature("docstring")  CasADi::ZeroSX::isSymbolic "";

%feature("docstring")  CasADi::ZeroSX::hasDep "";

%feature("docstring")  CasADi::ZeroSX::isOne "";

%feature("docstring")  CasADi::ZeroSX::isMinusOne "";

%feature("docstring")  CasADi::ZeroSX::isNan "";

%feature("docstring")  CasADi::ZeroSX::isInf "";

%feature("docstring")  CasADi::ZeroSX::isMinusInf "";

%feature("docstring")  CasADi::ZeroSX::~ZeroSX "";

%feature("docstring")  CasADi::ZeroSX::ZeroSX "";

%feature("docstring")  CasADi::ZeroSX::isConstant "

Properties. ";

%feature("docstring")  CasADi::ZeroSX::getOp "

Get the operation. ";

%feature("docstring")  CasADi::ZeroSX::print "

print ";

%feature("docstring")  CasADi::ZeroSX::getName "";

%feature("docstring")  CasADi::ZeroSX::isEqual "

comparison ";

%feature("docstring")  CasADi::ZeroSX::isEqual "

comparison ";

%feature("docstring")  CasADi::ZeroSX::ndep "

Number of dependencies. ";

%feature("docstring")  CasADi::ZeroSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::ZeroSX::dep "

get the reference of a child ";

%feature("docstring")  CasADi::ZeroSX::init "

Initialize the node (currently used only to give a similar interface to
MXNode) ";

%feature("docstring")  CasADi::ZeroSX::isSmooth "

Check if smooth. ";

%feature("docstring")  CasADi::ZeroSX::marked "";

%feature("docstring")  CasADi::ZeroSX::mark "";


// File: namespaceACADO.xml


// File: namespaceboost_1_1numeric.xml


// File: namespaceCasADi.xml
%feature("docstring")  CasADi::Interfaces::sqrt "

Pre-C99 elementary functions from the math.h (cmath) header. ";

%feature("docstring")  CasADi::Interfaces::sin "";

%feature("docstring")  CasADi::Interfaces::cos "";

%feature("docstring")  CasADi::Interfaces::tan "";

%feature("docstring")  CasADi::Interfaces::atan "";

%feature("docstring")  CasADi::Interfaces::asin "";

%feature("docstring")  CasADi::Interfaces::acos "";

%feature("docstring")  CasADi::Interfaces::sinh "";

%feature("docstring")  CasADi::Interfaces::cosh "";

%feature("docstring")  CasADi::Interfaces::tanh "";

%feature("docstring")  CasADi::Interfaces::exp "";

%feature("docstring")  CasADi::Interfaces::log "";

%feature("docstring")  CasADi::Interfaces::log10 "";

%feature("docstring")  CasADi::Interfaces::pow "";

%feature("docstring")  CasADi::Interfaces::pow "";

%feature("docstring")  CasADi::Interfaces::pow "";

%feature("docstring")  CasADi::Interfaces::abs "";

%feature("docstring")  CasADi::Interfaces::fabs "";

%feature("docstring")  CasADi::Interfaces::floor "";

%feature("docstring")  CasADi::Interfaces::ceil "";

%feature("docstring")  CasADi::Interfaces::atan2 "";

%feature("docstring")  CasADi::Interfaces::atan2 "";

%feature("docstring")  CasADi::Interfaces::atan2 "";

%feature("docstring")  CasADi::Interfaces::erf "

C99 elementary functions from the math.h header. ";

%feature("docstring")  CasADi::Interfaces::erf "throw ()";

%feature("docstring")  CasADi::Interfaces::fmin "";

%feature("docstring")  CasADi::Interfaces::fmin "";

%feature("docstring")  CasADi::Interfaces::fmin "";

%feature("docstring")  CasADi::Interfaces::fmin "throw ()";

%feature("docstring")  CasADi::Interfaces::fmax "";

%feature("docstring")  CasADi::Interfaces::fmax "";

%feature("docstring")  CasADi::Interfaces::fmax "";

%feature("docstring")  CasADi::Interfaces::fmax "throw ()";

%feature("docstring")  CasADi::Interfaces::isnan "throw ()";

%feature("docstring")  CasADi::Interfaces::isinf "throw ()";

%feature("docstring")  CasADi::Interfaces::constpow "

CasADi additions. ";

%feature("docstring")  CasADi::Interfaces::printme "";

%feature("docstring")  CasADi::Interfaces::printme "";

%feature("docstring")  CasADi::Interfaces::sign "

Sign function, note that sign(nan) == nan. ";

%feature("docstring")  CasADi::Interfaces::sign "

Sign function, note that sign(nan) == nan. ";

%feature("docstring")  CasADi::Interfaces::erfinv "

Inverse of the error function. ";

%feature("docstring")  CasADi::Interfaces::erfinv "throw ()";

%feature("docstring")  CasADi::Interfaces::vec "

Make a vector-valued function out of a matrix-valued one. In spirit, this
function is like applying vec() to all inputs outputs.

Get the SX input and output vectors ";

%feature("docstring")  CasADi::Interfaces::vec "";

%feature("docstring")  CasADi::Interfaces::typeName "

Get typename. ";

%feature("docstring")  CasADi::Interfaces::typeName< double > " ";

%feature("docstring")  CasADi::Interfaces::typeName< float > " ";

%feature("docstring")  CasADi::Interfaces::typeName< int > " ";

%feature("docstring")  CasADi::Interfaces::typeName< long > " ";

%feature("docstring")  CasADi::Interfaces::ptrVec "

Convenience function, convert vectors to vectors of pointers. ";

%feature("docstring")  CasADi::Interfaces::ptrVec "";

%feature("docstring")  CasADi::Interfaces::ptrVec "";

%feature("docstring")  CasADi::Interfaces::ptrVec "";

%feature("docstring")  CasADi::Interfaces::msym "

Construct symbolic arrays and variables using CasADi's MX expression graph
representation The \"msym\" function is intended to work in a similar way as
\"sym\" used in the Symbolic Toolbox for Matlab but instead creating an MX
object. The MX expression graph is more general but also have considerably
more overhead than the alternative SX expression graph.

Create a matrix symbolic variable of given sparsity ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a matrix symbolic variable of given sparsity. ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a matrix variable from a constant matrix. ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a matrix symbolic variable of given sparsity. ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a vector of length p with with matrix symbolic variables of given
sparsity. ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a vector of length r of vectors of length p with matrix symbolic
variables with given sparsity. ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a vector of length p with n-by-m matrix symbolic variables. ";

%feature("docstring")  CasADi::Interfaces::msym "

Create a vector of length r of vectors of length p with n-by-m matrices with
symbolic variables. ";

%feature("docstring")  CasADi::Interfaces::deepcopy "

Make a deep copy of an object (Note: default is a shallow copy!) ";

%feature("docstring")  CasADi::Interfaces::deepcopy "";

%feature("docstring")  CasADi::Interfaces::deepcopy "";

%feature("docstring")  CasADi::Interfaces::ssym "

Construct symbolic arrays and variables using CasADi's SX expression graph
representation The \"ssym\" function is intended to work in a similar way as
\"sym\" used in the Symbolic Toolbox for Matlab but instead creating an
SXMatrix object. The SX expression graph has much less overhead, but is also
more restricted than the alternative MX expression graph.

Construct symbolic arrays and variables using CasADi's more restricted, but
more efficient SX expression graphCreate an matrix with symbolic variables,
with the dimension given by the string ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create an n-by-m matrix with symbolic variables. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create an n-by-m matrix with symbolic variables. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create an matrix with symbolic variables, given a sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create a vector of length p with with matrices with symbolic variables of
given sparsity. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create a vector of length r of vectors of length p with matrices with
symbolic variables with given sparsity. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create a vector of length p with n-by-m matrices with symbolic variables. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create a vector of length r of vectors of length p with n-by-m matrices with
symbolic variables. ";

%feature("docstring")  CasADi::Interfaces::ssym "

Create a symbolic matrix out of a numeric one. ";

%feature("docstring")  CasADi::Interfaces::gradient "";

%feature("docstring")  CasADi::Interfaces::jacobian "

Calculate jacobian via source code transformation.

Uses CasADi::SXFunction::jac ";

%feature("docstring")  CasADi::Interfaces::hessian "";

%feature("docstring")  CasADi::Interfaces::hessian "";

%feature("docstring")  CasADi::Interfaces::timesTwo "";

%feature("docstring")  CasADi::Interfaces::square "";

%feature("docstring")  CasADi::Interfaces::operation_checker "";

%feature("docstring")  CasADi::Interfaces::reportConstraints "

Prints out a human readable report about possible constraint violations -
specific constraints.

Constraint visualiser strip: o-------=-------o Indicates that the value is
nicely inbetween the bounds o-=-------------o Indicates that the value is
closer to the lower bound X---------------o Indicates that the lower bound
is active 8---------------o Indicates that the lower bound is -inifinity
o------------=--o Indicates that the value is closer to the upper bound o
---------------X Indicates that the upper bound is active o---------------8
Indicates that the upper bound is inifinity VIOLATED Indicates constraint
violation ";

%feature("docstring")  CasADi::Interfaces::parameterizeTime "

make integration start and end time a parameter Applies the conversion t =
t0 + (tf-t0)*tau to the supplied dae. with tau dimensionless time. The
Input/OuputScheme of the result is the same as the scheme of the dae, except
for input(DAE_P), which is extended by t0 and tf at the top. ";

%feature("docstring")  CasADi::Interfaces::parameterizeTimeOutput "

adapts an output function such that start and end time are parameters
Applies the conversion t = t0 + (tf-t0)*tau to the supplied dae. with tau
dimensionless time. The InputScheme of the result is the same as the scheme
of the dae, except for input(DAE_P), which is extended by t0 and tf at the
top. ";

%feature("docstring")  CasADi::Interfaces::numSample1D "

sample a function on a 1D grid

Parameters:
-----------

fx:  an initialized function mapping from single p-by-1 to single m-by-n

a:  grid of numbers p-by-N

For each column in the grid, fx is numerically evaluated and the output is
put in a resulting matrix of size m-by-n*p

If your fx is really multiple output, and you wish to use a particular
output, use the slice operator on the fx. ";

%feature("docstring")  CasADi::Interfaces::numSample1DT "

sample a function on a 1D grid

Parameters:
-----------

fx:  an initialized function mapping from single p-by-1 to single m-by-n

a:  grid of numbers p-by-N

For each column in the grid, fx is numerically evaluated and the output is
put in a resulting matrix of size m*p-by-n

If your fx is really multiple output, and you wish to use a particular
output, use the slice operator on the fx. ";

%feature("docstring")  CasADi::Interfaces::numSample2D "

sample a function on a 2D grid

Parameters:
-----------

fx:  an initialized function mapping from (1-by-1,1-by-1) to single m-by-n

a:  grid of numbers

For each point (i,j) in the grid, fx is numerically evaluated and the output
is put in a matrix

If your fx is really multiple output, and you wish to use a particular
output, use the slice operator on the fx. ";

%feature("docstring")  CasADi::Interfaces::daeIn "

Helper function to create ODE/DAE forward integration function input
arguments. ";

%feature("docstring")  CasADi::Interfaces::daeOut "

Helper function to create DAE forward integration function output arguments.
";

%feature("docstring")  CasADi::Interfaces::rdaeIn "

Helper function to create ODE/DAE backward integration function input
arguments. ";

%feature("docstring")  CasADi::Interfaces::rdaeOut "

Helper function to create ODE/DAE backward integration function output
arguments. ";

%feature("docstring")  CasADi::Interfaces::getptr "";

%feature("docstring")  CasADi::Interfaces::linspace "

Matlab's linspace command. ";

%feature("docstring")  CasADi::Interfaces::sym "

Construct a symbolic matrix. ";

%feature("docstring")  CasADi::Interfaces::trans "

Transpose of a matrix. ";

%feature("docstring")  CasADi::Interfaces::mul "

Matrix product of two matrices. ";

%feature("docstring")  CasADi::Interfaces::mul "

Matrix product of n matrices. ";

%feature("docstring")  CasADi::Interfaces::isConstant "

check if the matrix is constant (note that false negative answers are
possible) ";

%feature("docstring")  CasADi::Interfaces::isDense "";

%feature("docstring")  CasADi::Interfaces::isEmpty "";

%feature("docstring")  CasADi::Interfaces::isInteger "";

%feature("docstring")  CasADi::Interfaces::isScalar "";

%feature("docstring")  CasADi::Interfaces::isVector "";

%feature("docstring")  CasADi::Interfaces::isTril "

Check if a matrix is lower triangular (complexity ~ A.size1()) ";

%feature("docstring")  CasADi::Interfaces::isTriu "

Check if a matrix is upper triangular (complexity ~ A.size1()) ";

%feature("docstring")  CasADi::Interfaces::det "";

%feature("docstring")  CasADi::Interfaces::getMinor "";

%feature("docstring")  CasADi::Interfaces::cofactor "";

%feature("docstring")  CasADi::Interfaces::adj "";

%feature("docstring")  CasADi::Interfaces::inv "";

%feature("docstring")  CasADi::Interfaces::reshape "";

%feature("docstring")  CasADi::Interfaces::reshape "";

%feature("docstring")  CasADi::Interfaces::reshape "";

%feature("docstring")  CasADi::Interfaces::trace "";

%feature("docstring")  CasADi::Interfaces::vec "

make a vector Reshapes/vectorizes the Matrix<T> such that the shape becomes
(expr.numel(),1). Columns are stacked on top of each other. Same as
reshape(trans(expr), expr.numel(),1)

a b  c d

turns into

a  c  b  d ";

%feature("docstring")  CasADi::Interfaces::flatten "

make a vector Flattens the Matrix<T> such that the shape becomes
(expr.numel(),1). Transposed rows are stacked on top of each other. Same as
reshape(expr, expr.numel(),1)

a b  c d

turns into

a  b  c  d ";

%feature("docstring")  CasADi::Interfaces::vecNZ "

Returns a flattened version of the Matrix, preserving only nonzeros. ";

%feature("docstring")  CasADi::Interfaces::blockcat "";

%feature("docstring")  CasADi::Interfaces::vertcat "";

%feature("docstring")  CasADi::Interfaces::horzcat "";

%feature("docstring")  CasADi::Interfaces::vertcat "";

%feature("docstring")  CasADi::Interfaces::horzcat "";

%feature("docstring")  CasADi::Interfaces::veccat "

concatenate vertically while vectorizing all arguments with vec ";

%feature("docstring")  CasADi::Interfaces::vecNZcat "

concatenate vertically while vectorizing all arguments with vecNZ ";

%feature("docstring")  CasADi::Interfaces::applymap "

Apply a function f to each element in a vector ";

%feature("docstring")  CasADi::Interfaces::applymap "

Apply a function f to each element in a vector ";

%feature("docstring")  CasADi::Interfaces::inner_prod "

Inner product of two vectors Equals.

with x and y vectors ";

%feature("docstring")  CasADi::Interfaces::outer_prod "

Outer product of two vectors Equals.

with x and y vectors ";

%feature("docstring")  CasADi::Interfaces::qr "

QR factorization using the modified Gram-Schmidt algorithm More stable than
the classical Gram-Schmidt, but may break down if the columns of A are
nearly linearly dependent See J. Demmel: Applied Numerical Linear Algebra
(algorithm 3.1.). Note that in SWIG, Q and R are returned by value. ";

%feature("docstring")  CasADi::Interfaces::solve "

Solve a system of equations: A*x = b The solve routine works similar to
Matlab's backslash when A is square and nonsingular. The algorithm used is
the following: 1. A simple forward or backward substitution if A is upper or
lower triangular 2. If the linear system is at most 3-by-3, form the inverse
via minor expansion and multiply 3. Permute the variables and equations as
to get a (structurally) nonzero diagonal, then perform a QR factorization
without pivoting and solve the factorized system.

Note 1: If there are entries of the linear system known to be zero, these
will be removed. Elements that are very small, or will evaluate to be zero,
can still cause numerical errors, due to the lack of pivoting (which is not
possible since cannot compare the size of entries)

Note 2: When permuting the linear system, a BLT (block lower triangular)
transformation is formed. Only the permutation part of this is however used.
An improvement would be to solve block-by-block if there are multiple BLT
blocks. ";

%feature("docstring")  CasADi::Interfaces::isZero "

check if the matrix is 0 (note that false negative answers are possible) ";

%feature("docstring")  CasADi::Interfaces::isOne "

check if the matrix is 1 (note that false negative answers are possible) ";

%feature("docstring")  CasADi::Interfaces::isMinusOne "

check if the matrix is -1 (note that false negative answers are possible) ";

%feature("docstring")  CasADi::Interfaces::isIdentity "

check if the matrix is an identity matrix (note that false negative answers
are possible) ";

%feature("docstring")  CasADi::Interfaces::nnz "";

%feature("docstring")  CasADi::Interfaces::nnz_sym "";

%feature("docstring")  CasADi::Interfaces::isEqual "";

%feature("docstring")  CasADi::Interfaces::norm_1 "

Make the vector 1-norm of an Matrix<T> ";

%feature("docstring")  CasADi::Interfaces::norm_2 "

Make the vector 2-norm (Frobenius Norm) of an Matrix<T> ";

%feature("docstring")  CasADi::Interfaces::norm_22 "

Make the vector 2-norm (Frobenius Norm) squared of an Matrix<T> ";

%feature("docstring")  CasADi::Interfaces::sumAll "

Return summation of all elements. ";

%feature("docstring")  CasADi::Interfaces::sumRows "

Return a row-wise summation of elements. ";

%feature("docstring")  CasADi::Interfaces::sumCols "

Return a column-wise summation of elements. ";

%feature("docstring")  CasADi::Interfaces::repmat "

Repeat matrix A n times vertically and m times horizontally. ";

%feature("docstring")  CasADi::Interfaces::polyval "

Evaluate a polynomial with coefficeints p in x. ";

%feature("docstring")  CasADi::Interfaces::diag "

Get the diagonal of a matrix or construct a diagonal When the input is
square, the diagonal elements are returned. If the input is vector- like, a
diagonal matrix is constructed with it. ";

%feature("docstring")  CasADi::Interfaces::getSparseTriplet "

Get the sparsity in sparse triplet format. ";

%feature("docstring")  CasADi::Interfaces::getSparseTriplet "

Get the sparsity in sparse triplet format - Python style: [row,col] =
getSparseTriplet(A) ";

%feature("docstring")  CasADi::Interfaces::unite "

Unite two matrices no overlapping sparsity. ";

%feature("docstring")  CasADi::Interfaces::makeDense "

Make a matrix dense. ";

%feature("docstring")  CasADi::Interfaces::makeSparse "

Make a matrix sparse by removing numerical. ";

%feature("docstring")  CasADi::Interfaces::hasNonStructuralZeros "

Check if the matrix has any zero entries which are not structural zeros. ";

%feature("docstring")  CasADi::Interfaces::addMultiple "

same as: res += mul(A,v) ";

%feature("docstring")  CasADi::Interfaces::getPtr "

Get a pointer to the data contained in the vector. ";

%feature("docstring")  CasADi::Interfaces::getPtr "

Get a pointer to the data contained in the vector. ";

%feature("docstring")  CasADi::Interfaces::project "

Create a new matrix with a given sparsity pattern but with the nonzeros
taken from an existing matrix. ";

%feature("docstring")  CasADi::Interfaces::all "";

%feature("docstring")  CasADi::Interfaces::any "";

%feature("docstring")  CasADi::Interfaces::sp_dense "

Create a dense rectangular sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::sp_sparse "

Create a sparse rectangular sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::sp_tril "

Create a lower triangular square sparsity pattern.

See:   lowerSparsity ";

%feature("docstring")  CasADi::Interfaces::sp_diag "

Create diagonal square sparsity pattern. ";

%feature("docstring")  CasADi::Interfaces::sp_band "

Create a single band in a square sparsity pattern.

sp_band(n,0) is equivalent to sp_diag(n)  sp_band(n,-1) has a band below the
diagonal

Parameters:
-----------

p:  indicate ";

%feature("docstring")  CasADi::Interfaces::sp_banded "

Create banded square sparsity pattern.

sp_band(n,0) is equivalent to sp_diag(n)  sp_band(n,1) is tri-diagonal
matrix ";

%feature("docstring")  CasADi::Interfaces::sp_rowcol "

Construct a block sparsity pattern from (row,col) vectors. ";

%feature("docstring")  CasADi::Interfaces::getNZDense "

Get the indices of all non-zero elements as they would appear in a Dense
matrix A : DenseMatrix 4 x 3 B : SparseMatrix 4 x 3 , 5 structural non-
zeros.

k = getNZDense(A) A[k] will contain the elements of A that are non- zero in
B ";

%feature("docstring")  CasADi::Interfaces::reshape "";

%feature("docstring")  CasADi::Interfaces::vec "";

%feature("docstring")  CasADi::Interfaces::trans "

\\\\ brief Return the transpose of the sparsity pattern ";

%feature("docstring")  CasADi::Interfaces::lowerSparsity "

Return the lower part of the sparsity pattern.

Parameters:
-----------

includeDiagonal:  specify wether the diagonal must be part of the result

See:   sp_tril ";

%feature("docstring")  CasADi::Interfaces::lowerNZ "

Return the non-zero entries that make up the lower part of the provided
matrix. ";

%feature("docstring")  CasADi::Interfaces::sp_triplet "

Create a sparsity pattern given the nonzeros in sparse triplet form. ";

%feature("docstring")  CasADi::Interfaces::sp_triplet "

Create a sparsity pattern given the nonzeros in sparse triplet form (no
nonzero mapping) columns_are_sorted==true means that the column entries
already in increasing order for each row and without any duplicates. ";

%feature("docstring")  CasADi::Interfaces::mul "

Get the sparsity resulting from a matrix multiplication. ";

%feature("docstring")  CasADi::Interfaces::vertcat "";

%feature("docstring")  CasADi::Interfaces::horzcat "";

%feature("docstring")  CasADi::Interfaces::vertcat "

concatenate vertically, two matrices ";

%feature("docstring")  CasADi::Interfaces::horzcat "

concatenate horizontally, two matrices ";

%feature("docstring")  CasADi::Interfaces::veccat "";

%feature("docstring")  CasADi::Interfaces::vecNZcat "";

%feature("docstring")  CasADi::Interfaces::applymap "";

%feature("docstring")  CasADi::Interfaces::applymap "";

%feature("docstring")  CasADi::Interfaces::norm_2 "

Take the 2-norm of a MX Internally represented by Norm2. ";

%feature("docstring")  CasADi::Interfaces::norm_1 "

Take the 1-norm of a MX Internally represented by Norm1. ";

%feature("docstring")  CasADi::Interfaces::norm_inf "

Take the infinity-norm of a MX Internally represented by NormInf. ";

%feature("docstring")  CasADi::Interfaces::mul "

Take the matrix product of 2 MX objects. ";

%feature("docstring")  CasADi::Interfaces::mul "

Take the matrix product of n MX objects. ";

%feature("docstring")  CasADi::Interfaces::isZero "

check if zero (note that false negative answers are possible) ";

%feature("docstring")  CasADi::Interfaces::isOne "

check if zero (note that false negative answers are possible) ";

%feature("docstring")  CasADi::Interfaces::isMinusOne "

check if zero (note that false negative answers are possible) ";

%feature("docstring")  CasADi::Interfaces::isIdentity "

check if identity ";

%feature("docstring")  CasADi::Interfaces::inner_prod "

Take the inner product of two vectors Equals.

with x and y vectors ";

%feature("docstring")  CasADi::Interfaces::outer_prod "

Take the outer product of two vectors Equals.

with x and y vectors ";

%feature("docstring")  CasADi::Interfaces::simplifyMapping "

Simplify a mapping, if possible. ";

%feature("docstring")  CasADi::Interfaces::isTranspose "

Is the expression a transpose? ";

%feature("docstring")  CasADi::Interfaces::trans "

Take the transpose of a MX Internally represented by Transpose. ";

%feature("docstring")  CasADi::Interfaces::reshape "

Returns a reshaped version of the MX, dimensions as a vector. ";

%feature("docstring")  CasADi::Interfaces::reshape "

Returns a reshaped version of the MX. ";

%feature("docstring")  CasADi::Interfaces::reshape "

Reshape the MX. ";

%feature("docstring")  CasADi::Interfaces::vec "

Returns a vectorized version of the MX Vectorizing is an expensive
operation, unlike flatten Same as reshape(trans(x), x.numel(),1)

a b c d

turns into

a c b d ";

%feature("docstring")  CasADi::Interfaces::flatten "

Returns a flattened version of the MX Flattening is a cheap (non-copying)
operation Same as reshape(x, x.numel(),1)

a b c d

turns into

a b c d ";

%feature("docstring")  CasADi::Interfaces::vecNZ "

Returns a flattened version of the MX, preserving only nonzeros. ";

%feature("docstring")  CasADi::Interfaces::if_else_zero "

Conditional evaluation cond ? if_true : 0. ";

%feature("docstring")  CasADi::Interfaces::if_else "

Branching on MX nodes Ternary operator, \"cond ? if_true : if_false\". ";

%feature("docstring")  CasADi::Interfaces::unite "

Unite two matrices no overlapping sparsity. ";

%feature("docstring")  CasADi::Interfaces::isSymbolic "

check if symbolic ";

%feature("docstring")  CasADi::Interfaces::isSymbolicSparse "

check if all nonzeros are symbolic (this function is currently identical to
isSymbolic) ";

%feature("docstring")  CasADi::Interfaces::trace "";

%feature("docstring")  CasADi::Interfaces::repmat "

Repeat matrix A n times vertically and m times horizontally. ";

%feature("docstring")  CasADi::Interfaces::densify "

Make the matrix dense.

MX clip(const MX& A, const CRSSparsity& sp) { Join the sparsity patterns
std::vector<int> mapping; CRSSparsity sp =
A.sparsity().patternIntersection(sp,mapping);

Split up the mapping std::vector<int> nzA,nzB;

Copy sparsity for(int k=0; k<mapping.size(); ++k){ if(mapping[k]<0){
nzA.push_back(k); } else if(mapping[k]>0){ nzB.push_back(k); } else { throw
CasadiException(\"Pattern intersection not empty\"); } }

Create mapping MX ret; ret.assignNode(new Mapping(sp));
ret->assign(A,range(nzA.size()),nzA); ret->assign(B,range(nzB.size()),nzB);
return ret;

} ";

%feature("docstring")  CasADi::Interfaces::makeDense "

create a clipped view into a matrix Create a sparse matrix from a dense
matrix A, with sparsity pattern sp

Make the matrix dense ";

%feature("docstring")  CasADi::Interfaces::createParent "

Create a parent MX on which all given MX's will depend.

In some sense, this function is the inverse of

Parameters:
-----------

deps:  Must all be symbolic matrices. ";

%feature("docstring")  CasADi::Interfaces::createParent "

Create a parent MX on which a bunch of MX's (sizes given as argument) will
depend. ";

%feature("docstring")  CasADi::Interfaces::createParent "

Create a parent MX on which a bunch of MX's (sizes given as argument) will
depend. ";

%feature("docstring")  CasADi::Interfaces::diag "

Get the diagonal of a matrix or construct a diagonal.

When the input is square, the diagonal elements are returned. If the input
is vector-like, a diagonal matrix is constructed with it. ";

%feature("docstring")  CasADi::Interfaces::countNodes "

Count number of nodes ";

%feature("docstring")  CasADi::Interfaces::sumRows "

Return a row-wise summation of elements. ";

%feature("docstring")  CasADi::Interfaces::sumCols "

Return a column-wise summation of elements. ";

%feature("docstring")  CasADi::Interfaces::sumAll "

Return summation of all elements. ";

%feature("docstring")  CasADi::Interfaces::polyval "

Evaluate a polynomial with coefficeints p in x. ";

%feature("docstring")  CasADi::Interfaces::isVector "

check if vector ";

%feature("docstring")  CasADi::Interfaces::isDense "

check if vector ";

%feature("docstring")  CasADi::Interfaces::isEqual "

Check if two expressions are equal. ";

%feature("docstring")  CasADi::Interfaces::getOperatorRepresentation "

Get a string representation for a binary MX, using custom arguments. ";

%feature("docstring")  CasADi::Interfaces::substituteInPlace "

Inplace substitution Substitute variables v out of the expressions vdef
sequentially. ";

%feature("docstring")  CasADi::Interfaces::substituteInPlace "

Inplace substitution with piggyback expressions Substitute variables v out
of the expressions vdef sequentially, as well as out of a number of other
expressions piggyback. ";

%feature("docstring")  CasADi::Interfaces::vertcat "

concatenate vertically ";

%feature("docstring")  CasADi::Interfaces::horzcat "

concatenate horizontally ";

%feature("docstring")  CasADi::Interfaces::veccat "

concatenate vertically while vectorizing all arguments with vec ";

%feature("docstring")  CasADi::Interfaces::vecNZcat "

concatenate vertically while vectorizing all arguments with vecNZ ";

%feature("docstring")  CasADi::Interfaces::applymap "

Apply a function f to each element in a vector ";

%feature("docstring")  CasADi::Interfaces::applymap "

Apply a function f to each element in a vector ";

%feature("docstring")  CasADi::Interfaces::sym "";

%feature("docstring")  CasADi::Interfaces::shared_cast "

Typecast a shared object to a base class to a shared object to a derived
class, cf. dynamic_cast.

Get a pointer to the node

Create a return object

Assign node of B and return

Null pointer if not pointing towards the right type of object ";

%feature("docstring")  CasADi::Interfaces::shared_cast "

Typecast a shared object to a base class to a shared object to a derived
class, cf. dynamic_cast (const) ";

%feature("docstring")  CasADi::Interfaces::range "

Range function

Parameters:
-----------

start:

stop:

step:

len:  Consider a infinitely long list [start, start+step, start+2*step, ...]
Elements larger than or equal to stop are chopped off. ";

%feature("docstring")  CasADi::Interfaces::range "

Range function

Parameters:
-----------

stop:

list [0,1,2...stop-1] ";

%feature("docstring")  CasADi::Interfaces::complement "

Returns the list of all i in [0,size[ not found in supplied list.

The supplied vector may contain duplicates and may be non-monotonous The
supplied vector will be checked for bounds The result vector is guaranteed
to be monotonously increasing ";

%feature("docstring")  CasADi::Interfaces::get_bvec_t "

Get an pointer of sets of booleans from a double vector. ";

%feature("docstring")  CasADi::Interfaces::get_bvec_t "

Get an pointer of sets of booleans from a double vector. ";

%feature("docstring")  CasADi::Interfaces::repr "

Print representation. ";

%feature("docstring")  CasADi::Interfaces::print "

Print description. ";

%feature("docstring")  CasADi::Interfaces::inBounds "

Check if for each element of v holds: v_i < upper. ";

%feature("docstring")  CasADi::Interfaces::inBounds "

Check if for each element of v holds: lower <= v_i < upper. ";

%feature("docstring")  CasADi::Interfaces::isIncreasing "

Check if the vector is strictly increasing. ";

%feature("docstring")  CasADi::Interfaces::isDecreasing "

Check if the vector is strictly decreasing. ";

%feature("docstring")  CasADi::Interfaces::isNonIncreasing "

Check if the vector is non-increasing. ";

%feature("docstring")  CasADi::Interfaces::isNonDecreasing "

Check if the vector is non-decreasing. ";

%feature("docstring")  CasADi::Interfaces::isMonotone "

Check if the vector is monotone. ";

%feature("docstring")  CasADi::Interfaces::isStrictlyMonotone "

Check if the vector is strictly monotone. ";

%feature("docstring")  CasADi::Interfaces::getRepresentation "

Print representation to string. ";

%feature("docstring")  CasADi::Interfaces::getDescription "

Print description to string. ";

%feature("docstring")  CasADi::Interfaces::write_matlab "

Print vector, matlab style. ";

%feature("docstring")  CasADi::Interfaces::write_matlab "

Print matrix, matlab style. ";

%feature("docstring")  CasADi::Interfaces::read_matlab "

Read vector, matlab style. ";

%feature("docstring")  CasADi::Interfaces::read_matlab "

Read matrix, matlab style. ";

%feature("docstring")  CasADi::Interfaces::linspace "

Matlab's linspace. ";

%feature("docstring")  CasADi::Interfaces::get_bvec_t "

Get an pointer of sets of booleans from a double vector. ";

%feature("docstring")  CasADi::Interfaces::get_bvec_t "

Get an pointer of sets of booleans from a double vector. ";

%feature("docstring")  CasADi::Interfaces::getPtr "

Get a pointer to the data contained in the vector. ";

%feature("docstring")  CasADi::Interfaces::getPtr "

Get a pointer to the data contained in the vector. ";

%feature("docstring")  CasADi::Interfaces::sort "

Sort the data in a vector.

Parameters:
-----------

values:  the vector that needs sorting

sorted_values:  the sorted vector

indices:  The indices into 'values' that cast it into 'sorted_values' ";

%feature("docstring")  CasADi::Interfaces::makeVector "

Make a vector of a certain length with its entries specified Usage C++:
makeVector<ClassName>(LENGTH, ENTRY_INDEX_1, ENTRY_VALUE_1, ENTRY_INDEX_2,
ENTRY_VALUE_2, ...) Usage Python: makeVector(ClassName,(LENGTH,
ENTRY_INDEX_1, ENTRY_VALUE_1, ENTRY_INDEX_2, ENTRY_VALUE_2 ...) ";

%feature("docstring")  CasADi::Interfaces::if_else "";

%feature("docstring")  CasADi::Interfaces::typeName< SX > " ";

%feature("docstring")  CasADi::Interfaces::gauss_quadrature "

Integrate f from a to b using Gaussian quadrature with n points. ";

%feature("docstring")  CasADi::Interfaces::pw_const "

Create a piecewise constant function Create a piecewise constant function
with n=val.size() intervals.

Inputs:

Parameters:
-----------

t:  a scalar variable (e.g. time)

tval:  vector with the discrete values of t at the interval transitions
(length n-1)

val:  vector with the value of the function for each interval (length n) ";

%feature("docstring")  CasADi::Interfaces::pw_lin "

t a scalar variable (e.g. time)

Create a piecewise linear function Create a piecewise linear function:

Inputs: tval vector with the the discrete values of t (monotonically
increasing) val vector with the corresponding function values (same length
as tval) ";

%feature("docstring")  CasADi::Interfaces::if_else "";

%feature("docstring")  CasADi::Interfaces::heaviside "

Heaviside function.

\\\\[ \\\\begin{cases} H(x) = 0 & x<0 \\\\\\\\ H(x) = 1/2 & x=0 \\\\\\\\
H(x) = 1 & x>0 \\\\\\\\ \\\\end{cases} \\\\] ";

%feature("docstring")  CasADi::Interfaces::ramp "

ramp function

\\\\[ \\\\begin{cases} R(x) = 0 & x <= 1 \\\\\\\\ R(x) = x & x > 1 \\\\\\\\
\\\\end{cases} \\\\]

Also called: slope function ";

%feature("docstring")  CasADi::Interfaces::rectangle "

rectangle function

\\\\[ \\\\begin{cases} \\\\Pi(x) = 1 & |x| < 1/2 \\\\\\\\ \\\\Pi(x) = 1/2 &
|x| = 1/2 \\\\\\\\ \\\\Pi(x) = 0 & |x| > 1/2 \\\\\\\\ \\\\end{cases} \\\\]

Also called: gate function, block function, band function, pulse function,
window function ";

%feature("docstring")  CasADi::Interfaces::triangle "

triangle function

\\\\[ \\\\begin{cases} \\\\Lambda(x) = 0 & |x| >= 1 \\\\\\\\ \\\\Lambda(x) =
1-|x| & |x| < 1 \\\\end{cases} \\\\] ";

%feature("docstring")  CasADi::Interfaces::contains "";

%feature("docstring")  CasADi::Interfaces::simplify "

Simplify an expression. ";

%feature("docstring")  CasADi::Interfaces::compress "

Remove identical calculations. ";

%feature("docstring")  CasADi::Interfaces::substitute "

Substitute variable var with expression expr in multiple expressions. ";

%feature("docstring")  CasADi::Interfaces::substitute "

Substitute variable v with expression vdef in an expression ex. ";

%feature("docstring")  CasADi::Interfaces::substituteInPlace "

Substitute variable var out of or into an expression expr. ";

%feature("docstring")  CasADi::Interfaces::substituteInPlace "

Substitute variable var out of or into an expression expr, with an arbitrary
number of other expressions piggyback. ";

%feature("docstring")  CasADi::Interfaces::spy "

Get the sparsity pattern of a matrix. ";

%feature("docstring")  CasADi::Interfaces::dependsOn "

Check dependency: very inefficient algorithm. ";

%feature("docstring")  CasADi::Interfaces::isSmooth "

check if smooth ";

%feature("docstring")  CasADi::Interfaces::isSymbolic "

check if symbolic (Dense)

Sparse matrices invariable return false ";

%feature("docstring")  CasADi::Interfaces::isSymbolicSparse "

check if symbolic

Sparse matrices can return true if all non-zero elements are symbolic ";

%feature("docstring")  CasADi::Interfaces::getValue "

Obtain the values of a constant expression. ";

%feature("docstring")  CasADi::Interfaces::getIntValue "";

%feature("docstring")  CasADi::Interfaces::getValue "";

%feature("docstring")  CasADi::Interfaces::getIntValue "";

%feature("docstring")  CasADi::Interfaces::getName "";

%feature("docstring")  CasADi::Interfaces::expand "

Expand the expression as a weighted sum (with constant weights) ";

%feature("docstring")  CasADi::Interfaces::simplify "

Simplify the expression: formulates the expression as and eliminates terms.
";

%feature("docstring")  CasADi::Interfaces::fill "

Fill the matrix with the value val, make empty sparse if zero. ";

%feature("docstring")  CasADi::Interfaces::taylor "

univariate taylor series expansion

Calculate the taylor expansion of expression 'ex' up to order 'order' with
repsect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:>>   x ";

%feature("docstring")  CasADi::Interfaces::mtaylor "

multivariate taylor series expansion

Do taylor expansions until the aggregated order of a term is equal to
'order'. The aggregated order of $x^n y^m$ equals $n+m$. ";

%feature("docstring")  CasADi::Interfaces::mtaylor "

multivariate taylor series expansion

Do taylor expansions until the aggregated order of a term is equal to
'order'. The aggregated order of $x^n y^m$ equals $n+m$.

The argument order_contributions can denote how match each variable
contributes to the aggregated order. If x=[x,y] and
order_contributions=[1,2], then the aggregated order of $x^n y^m$ equals
$1n+2m$.

Example usage

$ \\\\sin(b+a)+\\\\cos(b+a)(x-a)+\\\\cos(b+a)(y-b) $ $ y+x-(x^3+3y x^2+3 y^2
x+y^3)/6 $ $ (-3 x^2 y-x^3)/6+y+x $ ";

%feature("docstring")  CasADi::Interfaces::countNodes "

Count number of nodes. ";

%feature("docstring")  CasADi::Interfaces::getOperatorRepresentation "

Get a string representation for a binary SX, using custom arguments. ";

%feature("docstring")  CasADi::Interfaces::makeSemiExplicit "";

%feature("docstring")  CasADi::Interfaces::getFree "

Get all the free variables in an expression. ";

%feature("docstring")  CasADi::Interfaces::contains "

Returns true if at least one element in list contains the scalar e. ";

%feature("docstring")  CasADi::Interfaces::if_else "

Make the expression smooth by replacing non-smooth nodes with binary
variables.

Substitute derivatives with variables void replaceDerivatives(Matrix<SX>
&ex, const Matrix<SX> &var, const Matrix<SX> &dvar); ";

%feature("docstring")  CasADi::Interfaces::blockmatrix "

Create a block matrix.

Return matrix

loop over rows

Create a row

append components to the row

append row to matrix ";

%feature("docstring")  CasADi::Interfaces::blockmatrix "

Create a block matrix (vector)

Return matrix

loop over rows

append components ";

%feature("docstring")  CasADi::Interfaces::sym "";

%feature("docstring")  CasADi::Interfaces::print_dat "

Write a vector valued entry to file ";

%feature("docstring")  CasADi::Interfaces::print_dat "

Write a scalar valued entry to file ";

%feature("docstring")  CasADi::Interfaces::print_dat "

Write a scalar/vector valued entry with an index argument to file ";

%feature("docstring")  CasADi::Interfaces::print_dat "

Write a scalar/vector valued entry with two index arguments to file ";

%feature("docstring")  CasADi::Interfaces::getFunctionPtrs "";

%feature("docstring")  CasADi::Interfaces::getFunctionPtrs< 0 > " ";

%feature("docstring")  CasADi::Interfaces::fcn_template "

Each class instance must have its own function pointer, it is not possible
to pass pointers to member functions. ";

%feature("docstring")  CasADi::Interfaces::updateDependent "

Update dependent variables in an OCP. ";

%feature("docstring")  CasADi::Interfaces::var "";

%feature("docstring")  CasADi::Interfaces::der "";

%feature("docstring")  CasADi::Interfaces::highest "";

%feature("docstring")  CasADi::Interfaces::binding "";

%feature("docstring")  CasADi::Interfaces::getNominal "";

%feature("docstring")  CasADi::Interfaces::getAll "

Call a member function for all members of a vector (note: fcn pointer to
member function) ";

%feature("docstring")  CasADi::Interfaces::getStart "";

%feature("docstring")  CasADi::Interfaces::getDerivativeStart "";

%feature("docstring")  CasADi::Interfaces::getMin "";

%feature("docstring")  CasADi::Interfaces::getMax "";

%feature("docstring")  CasADi::Interfaces::getInitialGuess "";

%feature("docstring")  CasADi::Interfaces::var "

Get a vector of expressions from a vector of variables. ";

%feature("docstring")  CasADi::Interfaces::der "

Get a vector of derivative expressions from a vector of variables. ";

%feature("docstring")  CasADi::Interfaces::highest "

Get a vector of highest order undetermined expression from a vector of
variables. ";

%feature("docstring")  CasADi::Interfaces::binding "

Get a vector of binding expressions from a vector of variables. ";

%feature("docstring")  CasADi::Interfaces::getNominal "

Get a vector of the nominal values of a vector of variables. ";

%feature("docstring")  CasADi::Interfaces::getStart "

Get a vector of the values at the initial time for a vector of variables. ";

%feature("docstring")  CasADi::Interfaces::getDerivativeStart "

Get a vector of the values of the derivative at the initial time for a
vector of variables. ";

%feature("docstring")  CasADi::Interfaces::getMax "

Get a upper bounds. ";

%feature("docstring")  CasADi::Interfaces::getMin "

Get a lower bounds. ";

%feature("docstring")  CasADi::Interfaces::getInitialGuess "

Get the initial guess. ";


// File: namespaceCasADi_1_1Interfaces.xml
%feature("docstring")  CasADi::Interfaces::dgetrf_ "

LU-Factorize dense matrix (lapack) ";

%feature("docstring")  CasADi::Interfaces::dgetrs_ "

Solve a system of equation using an LU-factorized matrix (lapack) ";

%feature("docstring")  CasADi::Interfaces::dgeequ_ "

Calculate row and column scalings. ";

%feature("docstring")  CasADi::Interfaces::dlaqge_ "

Equilibriate the system. ";

%feature("docstring")  CasADi::Interfaces::dgeqrf_ "

QR-factorize dense matrix (lapack) ";

%feature("docstring")  CasADi::Interfaces::dormqr_ "

Multiply right hand side with Q-transpose (lapack) ";

%feature("docstring")  CasADi::Interfaces::dtrsm_ "

Solve upper triangular system (lapack) ";


// File: namespaceCasADi_1_1OptimalControl.xml
%feature("docstring")  CasADi::OptimalControl::get_collocation_coeff "";

%feature("docstring")  CasADi::OptimalControl::collocate "";

%feature("docstring")  CasADi::OptimalControl::collocate "";

%feature("docstring")  CasADi::OptimalControl::collocate_final "";

%feature("docstring")  CasADi::OptimalControl::tarjan "

Tarjan's algorithm. ";

%feature("docstring")  CasADi::OptimalControl::get_collocation_coeff "";

%feature("docstring")  CasADi::OptimalControl::collocate "";

%feature("docstring")  CasADi::OptimalControl::collocate "";


// File: namespaceCasADi_1_1Sundials.xml


// File: namespaceIpopt.xml


// File: namespaceKINEMATICS.xml
%feature("docstring")  KINEMATICS::norm "";

%feature("docstring")  KINEMATICS::Rperm "

Make a 3x3 rotation matrix that expresses a permutation of the axes.

Make a 3x3 rotation matrix that expresses a permutation if the axes.

Axes x,y,z are labeled as integers 1,2,3. A minus sign indicates a reversed
direction

Parameters:
-----------

a:  The new 1-axis is the old a-axis

a:  The new 2-axis is the old b-axis

a:  The new 3-axis is the old c-axis

The following example expresses a mirror operation around the z=0 plane:
Note that this would shift handedness of the frame. Not a good idea in
mechanics. Better stick to conventional right-handed frames. ";

%feature("docstring")  KINEMATICS::cosquadrant "";

%feature("docstring")  KINEMATICS::sinquadrant "";

%feature("docstring")  KINEMATICS::Rxp "

creates a 3x3 rotation matrix for a rotation about the x-axis with an angle
that is a multiple of PI/2

Parameters:
-----------

quadrant:  rotate over PI/2*quadrant ";

%feature("docstring")  KINEMATICS::Rx "

creates a 3x3 rotation matrix for a rotation about the x-axis

SXMatrix rotate(AXIS X,const SXMatrix &angle); // Rotate about an axis.

creates 3x3 rotation matrix for a rotation about the x-axis

Parameters:
-----------

angle:  angle for which to rotate in radians Looking from the origin towards
the endpoint of the x-defining unit vector, a positive rotation is clockwise

ca = cos(angle) sa = sin(angle)

creates a 3x3 rotation matrix for a rotation about the x-axis

creates 3x3 rotation matrix for a rotation about the x-axis

Parameters:
-----------

angle:  angle for which to rotate in radians Looking from the origin towards
the endpoint of the x-defining unit vector, a positive rotation is clockwise

ca = cos(angle) sa = sin(angle) ";

%feature("docstring")  KINEMATICS::Ryp "

creates a 3x3 rotation matrix for a rotation about the y-axis with an angle
that is a multiple of PI/2

Parameters:
-----------

quadrant:  rotate over PI/2*quadrant ";

%feature("docstring")  KINEMATICS::Ry "

creates a 3x3 rotation matrix for a rotation about the y-axis

creates 3x3 rotation matrix for a rotation about the y-axis

Parameters:
-----------

angle:  angle for which to rotate in radians Looking from the origin towards
the endpoint of the y-defining unit vector, a positive rotation is clockwise

ca = cos(angle) sa = sin(angle) ";

%feature("docstring")  KINEMATICS::Rzp "

creates a 3x3 rotation matrix for a rotation about the z-axis with an angle
that is a multiple of PI/2

Parameters:
-----------

quadrant:  rotate over PI/2*quadrant ";

%feature("docstring")  KINEMATICS::Rz "

creates a 3x3 rotation matrix for a rotation about the z-axis

creates 3x3 rotation matrix for a rotation about the z-axis

Parameters:
-----------

angle:  angle for which to rotate in radians Looking from the origin towards
the endpoint of the z-defining unit vector, a positive rotation is clockwise

ca = cos(angle) sa = sin(angle) ";

%feature("docstring")  KINEMATICS::TRx "";

%feature("docstring")  KINEMATICS::TRy "";

%feature("docstring")  KINEMATICS::TRz "";

%feature("docstring")  KINEMATICS::TRxp "";

%feature("docstring")  KINEMATICS::TRyp "";

%feature("docstring")  KINEMATICS::TRzp "";

%feature("docstring")  KINEMATICS::TRperm "

Make a 4x4 transformation matrix that expresses a permutation of the axes.

The new 1-axis is the old a-axis.

See:   Rperm(int a,int b,int c)  The new 2-axis is the old b-axis The new
3-axis is the old c-axis Make a 4x4 transformation matrix that expresses a
permutation of the axes

See:   Rperm(int a,int b,int c) ";

%feature("docstring")  KINEMATICS::tr "

shorter notation for translate() ";

%feature("docstring")  KINEMATICS::translate "

creates a 4x4 transformation matrix for a translation

Parameters:
-----------

x:  The amount to shift over the x-axis

y:  The amount to shift over the y-axis

z:  The amount to shift over the z-axis ";

%feature("docstring")  KINEMATICS::pos "

Create a kinvec.

Get properties of the origin Get the 1-vector that defines the position a
frame f expressed it in another frame ei

Get the 1-vector that defines the position a frame f expressed it in another
frame ei

Example usage: ";

%feature("docstring")  KINEMATICS::vel "

Get the linear velocity of the origin of frame f with respect to frame wt,
expressed in frame ei.

Get the velocity of the origin of frame f with respect to frame wt,
expressed in frame ei

Parameters:
-----------

q:  nx1 expression containg the n time-dependant symbols

dq:  nx1 expression containg the derivatives of the n time-dependant symbols

ddq:  nx1 expression containg the second derivatives of the n time-dependant
variables ";

%feature("docstring")  KINEMATICS::acc "";

%feature("docstring")  KINEMATICS::rotVel "";

%feature("docstring")  KINEMATICS::rotAcc "";

%feature("docstring")  KINEMATICS::vel "

Get the linear velocity of the origin of frame f with respect to frame wt,
expressed in frame ei using default time-dependence.

Get the velocity of the origin of frame f with respect to frame wt,
expressed in frame ei

The default time-dependant symbols are taking from the world frame

Example usage:

Note that - in general - velocity is not just the component-wise time
derivative of positition. This only holds if ei equals wt ";

%feature("docstring")  KINEMATICS::acc "

Get the linear acceleration of the origin of frame f with respect to frame
wt, expressed in frame ei using default time-dependence.

Get the linear acceleration of the origin of frame f with respect to frame
wt, expressed in frame ei

The default time-dependant symbols are taking from the world frame

Note that - in general - acceleration is not just the component-wise time
derivative of velocity. This only holds if ei equals wt ";

%feature("docstring")  KINEMATICS::rotVel "

Get the rotational velocity of the origin of frame f with respect to frame
wt, expressed in frame ei using default time-dependence.

Get the rotational of the origin of frame f with respect to frame wt,
expressed in frame ei

The default time-dependant symbols are taking from the world frame.

The rotational velocity is defined by its skew-symmetric matrix form: W_10 =
dot(R_10)*R_01

with R_10 the 3x3 rotation matrix that transforms from frame 0 to 1. ";

%feature("docstring")  KINEMATICS::rotAcc "

Get the rotational acceleration of the origin of frame f with respect to
frame wt, expressed in frame ei using default time-dependence.

Get the rotational acceleration of the origin of frame f with respect to
frame wt, expressed in frame ei

The default time-dependant symbols are taking from the world frame

Note that - contrary to the case with linear acceleration - rotational
acceleration IS just the component-wise time derivative of rotational
velocity. ";

%feature("docstring")  KINEMATICS::ex "

Get the 0-vector that defines the x-axis of a frame f.

Get the 0-vector that defines the x-axis of a frame f ";

%feature("docstring")  KINEMATICS::ey "

Get the 0-vector that defines the y-axis of a frame f.

Get the 0-vector that defines the x-axis of a frame f ";

%feature("docstring")  KINEMATICS::ez "

Get the 0-vector that defines the z-axis of a frame f.

Get the 0-vector that defines the x-axis of a frame f ";

%feature("docstring")  KINEMATICS::ex "

Get the 0-vector that defines the x-axis of a frame f, but express it in
another frame ei.

Get the 0-vector that defines the x-axis of a frame f, but express it in
another frame ei ";

%feature("docstring")  KINEMATICS::ey "

Get the 0-vector that defines the y-axis of a frame f, but express it in
another frame ei.

Get the 0-vector that defines the y-axis of a frame f, but express it in
another frame ei ";

%feature("docstring")  KINEMATICS::ez "

Get the 0-vector that defines the z-axis of a frame f, but express it in
another frame ei.

Get the 0-vector that defines the z-axis of a frame f, but express it in
another frame ei ";

%feature("docstring")  KINEMATICS::expressCommon "

Take two vectors, express them in a common frame and return this common
frame.

Will change the KinVecs passed to it ";

%feature("docstring")  KINEMATICS::norm "";

%feature("docstring")  KINEMATICS::cross "";

%feature("docstring")  KINEMATICS::acc "

Get the linear acceleration of the origin of frame f with respect to frame
wt, expressed in frame ei.

Get the acceleration of the origin of frame f with respect to frame wt,
expressed in frame ei

Parameters:
-----------

q:  nx1 expression containg the n time-dependant symbols

dq:  nx1 expression containg the derivatives of the n time-dependant symbols

ddq:  nx1 expression containg the second derivatives of the n time-dependant
variables ";

%feature("docstring")  KINEMATICS::rotVel "

Get the rotational velocity of the origin of frame f with respect to frame
wt, expressed in frame ei.

Get the rotational velocity of the origin of frame f with respect to frame
wt, expressed in frame ei

Parameters:
-----------

q:  nx1 expression containg the n time-dependant symbols

dq:  nx1 expression containg the derivatives of the n time-dependant symbols

ddq:  nx1 expression containg the second derivatives of the n time-dependant
variables ";

%feature("docstring")  KINEMATICS::rotAcc "

Get the rotational acceleration of the origin of frame f with respect to
frame wt, expressed in frame ei.

Get the rotational acceleration of the origin of frame f with respect to
frame wt, expressed in frame ei

Parameters:
-----------

q:  nx1 expression containg the n time-dependant symbols

dq:  nx1 expression containg the derivatives of the n time-dependant symbols

ddq:  nx1 expression containg the second derivatives of the n time-dependant
variables ";

%feature("docstring")  KINEMATICS::ff1 "";

%feature("docstring")  KINEMATICS::ff2 "";

%feature("docstring")  KINEMATICS::splitdep "";

%feature("docstring")  KINEMATICS::ode "

Parameters:

t:  time

q:  states of the system delta, r, phi, theta, R, P, Y; ddelta, dr, dphi,
dtheta, dR, dP, dY; E; mu,nu

p:  parameters of the system

d:  disturbances on the system

u:  Input of the system dddelta,ddr,dmu,dnu

h:  internal expressions which the user may wish to inspect ";


// File: namespaceOPTICON.xml


// File: namespacestd.xml


// File: 01_8dox.xml


// File: 02_8dox.xml


// File: 03_8dox.xml


// File: 04_8dox.xml


// File: 05_8dox.xml


// File: 06_8dox.xml


// File: a0__schemes_8hpp.xml


// File: acado__forward__declarations_8hpp.xml


// File: acado__function_8cpp.xml


// File: acado__function_8hpp.xml


// File: acado__integrator_8cpp.xml


// File: acado__integrator_8hpp.xml


// File: acado__integrator__backend_8cpp.xml


// File: acado__integrator__backend_8hpp.xml


// File: acado__integrator__internal_8cpp.xml


// File: acado__integrator__internal_8hpp.xml


// File: acado__ocp_8cpp.xml


// File: acado__ocp_8hpp.xml


// File: acado__ocp__internal_8cpp.xml


// File: acado__ocp__internal_8hpp.xml


// File: aeroplane_8cpp.xml
%feature("docstring")  main "";


// File: all_8hpp.xml


// File: aux__output__sx_8hpp.xml


// File: b0__options_8hpp.xml


// File: binary__mx_8cpp.xml


// File: binary__mx_8hpp.xml


// File: binary__sx_8hpp.xml


// File: c0__monitors_8hpp.xml


// File: c__function_8cpp.xml


// File: c__function_8hpp.xml


// File: c__function__internal_8cpp.xml


// File: c__function__internal_8hpp.xml


// File: cached__object_8cpp.xml


// File: cached__object_8hpp.xml


// File: callback_8hpp.xml


// File: cartpendulum_8cpp.xml
%feature("docstring")  main "";


// File: casadi_8hpp.xml


// File: casadi__calculus_8hpp.xml


// File: casadi__exception_8hpp.xml


// File: casadi__lifter_8cpp.xml


// File: casadi__lifter_8hpp.xml


// File: casadi__limits_8hpp.xml


// File: casadi__math_8hpp.xml


// File: casadi__options_8cpp.xml


// File: casadi__options_8hpp.xml


// File: casadi__types_8cpp.xml


// File: casadi__types_8hpp.xml


// File: collocation_8cpp.xml


// File: collocation_8hpp.xml


// File: collocation__integrator_8cpp.xml


// File: collocation__integrator_8hpp.xml


// File: collocation__integrator__internal_8cpp.xml


// File: collocation__integrator__internal_8hpp.xml


// File: collocation__internal_8cpp.xml


// File: collocation__internal_8hpp.xml


// File: constant__mx_8cpp.xml


// File: constant__mx_8hpp.xml


// File: constant__sx_8hpp.xml


// File: control__simulator_8cpp.xml


// File: control__simulator_8hpp.xml


// File: control__simulator__internal_8cpp.xml


// File: control__simulator__internal_8hpp.xml


// File: controlsimulator_8hpp.xml


// File: countNodes_8hpp.xml


// File: cplex__internal_8cpp.xml


// File: cplex__internal_8hpp.xml


// File: cplex__solver_8cpp.xml


// File: cplex__solver_8hpp.xml


// File: createParent_8hpp.xml


// File: crs__sparsity_8cpp.xml


// File: crs__sparsity_8hpp.xml


// File: crs__sparsity__internal_8cpp.xml


// File: crs__sparsity__internal_8hpp.xml


// File: csparse_8cpp.xml


// File: csparse_8hpp.xml


// File: csparse__internal_8cpp.xml


// File: csparse__internal_8hpp.xml


// File: ctemplate_8cpp.xml
%feature("docstring")  main "

This file does absolutely nothing but including all headers ";


// File: cvodes__integrator_8cpp.xml


// File: cvodes__integrator_8hpp.xml


// File: cvodes__internal_8cpp.xml


// File: cvodes__internal_8hpp.xml


// File: d0__stats_8hpp.xml


// File: densification_8cpp.xml


// File: densification_8hpp.xml


// File: dotdraw_8hpp.xml


// File: evaluation__mx_8cpp.xml


// File: evaluation__mx_8hpp.xml


// File: evaluation__sx_8hpp.xml


// File: exacthessian_8hpp.xml


// File: expand_8hpp.xml


// File: expression__tools_8hpp.xml


// File: external__function_8cpp.xml


// File: external__function_8hpp.xml


// File: external__function__internal_8cpp.xml


// File: external__function__internal_8hpp.xml


// File: frame_8cpp.xml


// File: frame_8hpp.xml


// File: frame__node_8cpp.xml


// File: frame__node_8hpp.xml


// File: fx_8cpp.xml


// File: fx_8hpp.xml


// File: fx__internal_8cpp.xml


// File: fx__internal_8hpp.xml


// File: fx__tools_8cpp.xml


// File: fx__tools_8hpp.xml


// File: generateCode_8hpp.xml


// File: generic__expression_8hpp.xml


// File: generic__matrix_8hpp.xml


// File: generic__matrix__tools_8hpp.xml


// File: generic__type_8cpp.xml


// File: generic__type_8hpp.xml


// File: generic__type__internal_8cpp.xml


// File: generic__type__internal_8hpp.xml


// File: idas_8hpp.xml


// File: idas__integrator_8cpp.xml


// File: idas__integrator_8hpp.xml


// File: idas__internal_8cpp.xml


// File: idas__internal_8hpp.xml


// File: if__else__node_8cpp.xml


// File: if__else__node_8hpp.xml


// File: implicit__function_8cpp.xml


// File: implicit__function_8hpp.xml


// File: implicit__function__internal_8cpp.xml


// File: implicit__function__internal_8hpp.xml


// File: import__xml__file_8cpp.xml
%feature("docstring")  OPTICON::main "";


// File: integrator_8cpp.xml


// File: integrator_8hpp.xml


// File: integrator__internal_8cpp.xml


// File: integrator__internal_8hpp.xml


// File: ip__internal_8cpp.xml


// File: ip__internal_8hpp.xml


// File: ip__method_8cpp.xml


// File: ip__method_8hpp.xml


// File: ipopt_8hpp.xml


// File: ipopt__internal_8cpp.xml


// File: ipopt__internal_8hpp.xml


// File: ipopt__nlp_8cpp.xml


// File: ipopt__nlp_8hpp.xml


// File: ipopt__qp__internal_8cpp.xml


// File: ipopt__qp__internal_8hpp.xml


// File: ipopt__qp__solver_8cpp.xml


// File: ipopt__qp__solver_8hpp.xml


// File: ipopt__solver_8cpp.xml


// File: ipopt__solver_8hpp.xml


// File: jacobian_8cpp.xml


// File: jacobian_8hpp.xml


// File: jacobian__internal_8cpp.xml


// File: jacobian__internal_8hpp.xml


// File: jacobian__reference_8cpp.xml


// File: jacobian__reference_8hpp.xml


// File: jacSparsity_8hpp.xml


// File: kinetics_8cpp.xml


// File: kinetics_8hpp.xml


// File: kinsol__internal_8cpp.xml


// File: kinsol__internal_8hpp.xml


// File: kinsol__solver_8cpp.xml


// File: kinsol__solver_8hpp.xml


// File: KinsolSolver_8hpp.xml


// File: kinvec_8cpp.xml


// File: kinvec_8hpp.xml


// File: kite_8cpp.xml
%feature("docstring")  ff1 "";

%feature("docstring")  ff2 "";

%feature("docstring")  splitdep "";

%feature("docstring")  numeval "";

%feature("docstring")  numeval "";

%feature("docstring")  main "";


// File: kite__integrate_8cpp.xml
%feature("docstring")  main "";


// File: kiteode_8cpp.xml


// File: kiteode_8hpp.xml


// File: knitro__internal_8cpp.xml


// File: knitro__internal_8hpp.xml


// File: knitro__solver_8cpp.xml


// File: knitro__solver_8hpp.xml


// File: lapack__lu__dense_8cpp.xml


// File: lapack__lu__dense_8hpp.xml


// File: lapack__qr__dense_8cpp.xml


// File: lapack__qr__dense_8hpp.xml


// File: lifted__sqp_8cpp.xml


// File: lifted__sqp_8hpp.xml


// File: lifted__sqp__internal_8cpp.xml


// File: lifted__sqp__internal_8hpp.xml


// File: liftopt__internal_8cpp.xml


// File: liftopt__internal_8hpp.xml


// File: liftopt__solver_8cpp.xml


// File: liftopt__solver_8hpp.xml


// File: limitPrinting_8hpp.xml


// File: limitPrinting__c_8hpp.xml


// File: linear__solver_8cpp.xml


// File: linear__solver_8hpp.xml


// File: linear__solver__internal_8cpp.xml


// File: linear__solver__internal_8hpp.xml


// File: LinearSolver_8hpp.xml


// File: main_8dox.xml


// File: mapping_8cpp.xml


// File: casadi_2mx_2mapping_8hpp.xml


// File: documentation_2examples_2MX_2mapping_8hpp.xml


// File: matrix_8hpp.xml


// File: matrix__impl_8hpp.xml


// File: matrix__tools_8cpp.xml


// File: matrix__tools_8hpp.xml


// File: MX_2minmax_8hpp.xml


// File: SX_2minmax_8hpp.xml


// File: multiple__output_8cpp.xml


// File: multiple__output_8hpp.xml


// File: multiple__shooting_8cpp.xml


// File: multiple__shooting_8hpp.xml


// File: multiple__shooting__internal_8cpp.xml


// File: multiple__shooting__internal_8hpp.xml


// File: multiplication_8cpp.xml


// File: multiplication_8hpp.xml


// File: muscod__aux_8cpp.xml


// File: muscod__aux_8hpp.xml


// File: muscod__function_8cpp.xml


// File: muscod__function_8hpp.xml


// File: muscod__interface_8cpp.xml


// File: muscod__interface_8hpp.xml


// File: muscod__internal_8cpp.xml


// File: muscod__internal_8hpp.xml


// File: mx_8cpp.xml


// File: mx_8hpp.xml


// File: mx__function_8cpp.xml


// File: mx__function_8hpp.xml


// File: mx__function__internal_8cpp.xml


// File: mx__function__internal_8hpp.xml


// File: mx__node_8cpp.xml


// File: mx__node_8hpp.xml


// File: mx__tools_8cpp.xml


// File: mx__tools_8hpp.xml


// File: nlp__solver_8cpp.xml


// File: nlp__solver_8hpp.xml


// File: nlp__solver__internal_8cpp.xml


// File: nlp__solver__internal_8hpp.xml


// File: nonzeros_8hpp.xml


// File: norm_8cpp.xml


// File: norm_8hpp.xml


// File: ocp__solver_8cpp.xml


// File: ocp__solver_8hpp.xml


// File: ocp__solver__internal_8cpp.xml


// File: ocp__solver__internal_8hpp.xml


// File: ocp__tools_8cpp.xml


// File: ocp__tools_8hpp.xml


// File: ooqp__internal_8cpp.xml


// File: ooqp__internal_8hpp.xml


// File: ooqp__solver_8cpp.xml


// File: ooqp__solver_8hpp.xml


// File: options__functionality_8cpp.xml


// File: options__functionality_8hpp.xml


// File: parallelizer_8cpp.xml


// File: casadi_2fx_2parallelizer_8hpp.xml


// File: documentation_2examples_2FX_2parallelizer_8hpp.xml


// File: parallelizer__internal_8cpp.xml


// File: parallelizer__internal_8hpp.xml


// File: printable__object_8cpp.xml


// File: printable__object_8hpp.xml


// File: printme_8hpp.xml


// File: pyfunction_8hpp.xml


// File: qp__solver_8cpp.xml


// File: qp__solver_8hpp.xml


// File: qp__solver__internal_8cpp.xml


// File: qp__solver__internal_8hpp.xml


// File: qpoases__internal_8cpp.xml


// File: qpoases__internal_8hpp.xml


// File: qpoases__solver_8cpp.xml


// File: qpoases__solver_8hpp.xml


// File: range_8hpp.xml


// File: rk__integrator_8cpp.xml


// File: rk__integrator_8hpp.xml


// File: rk__integrator__internal_8cpp.xml


// File: rk__integrator__internal_8hpp.xml


// File: shared__object_8cpp.xml


// File: shared__object_8hpp.xml


// File: casadi_2fx_2simulator_8cpp.xml


// File: toolboxes_2kinematics_2test_2simulator_8cpp.xml
%feature("docstring")  main "";


// File: casadi_2fx_2simulator_8hpp.xml


// File: toolboxes_2kinematics_2test_2simulator_8hpp.xml


// File: documentation_2examples_2integrators_2simulator_8hpp.xml


// File: simulator__internal_8cpp.xml


// File: simulator__internal_8hpp.xml


// File: slice_8cpp.xml


// File: slice_8hpp.xml


// File: sparsity__tools_8cpp.xml


// File: sparsity__tools_8hpp.xml


// File: spinningtop_8cpp.xml
%feature("docstring")  main "";


// File: sqp__internal_8cpp.xml


// File: sqp__internal_8hpp.xml


// File: sqp__method_8cpp.xml


// File: sqp__method_8hpp.xml


// File: ssym_8hpp.xml


// File: stl__vector__tools_8cpp.xml


// File: stl__vector__tools_8hpp.xml


// File: submatrix_8hpp.xml


// File: sundials__integrator_8cpp.xml


// File: sundials__integrator_8hpp.xml


// File: sundials__internal_8cpp.xml


// File: sundials__internal_8hpp.xml


// File: superlu_8cpp.xml


// File: superlu_8hpp.xml


// File: superlu__internal_8cpp.xml


// File: superlu__internal_8hpp.xml


// File: sx_8cpp.xml


// File: sx_8hpp.xml


// File: sx__function_8cpp.xml


// File: sx__function_8hpp.xml


// File: sx__function__internal_8cpp.xml


// File: sx__function__internal_8hpp.xml


// File: sx__node_8cpp.xml


// File: sx__node_8hpp.xml


// File: sx__tools_8cpp.xml


// File: sx__tools_8hpp.xml


// File: SXaddition_8hpp.xml


// File: SXFunction__constr__oct_8hpp.xml


// File: SXFunction__constr__py_8hpp.xml


// File: symbolic__mx_8cpp.xml


// File: symbolic__mx_8hpp.xml


// File: symbolic__nlp_8cpp.xml


// File: symbolic__nlp_8hpp.xml


// File: symbolic__ocp_8cpp.xml


// File: symbolic__ocp_8hpp.xml


// File: symbolic__sx_8hpp.xml


// File: symbolicsubstitution_8hpp.xml


// File: test__frames_8cpp.xml
%feature("docstring")  main "";


// File: test__kinvec_8cpp.xml
%feature("docstring")  main "";


// File: tolerance_8hpp.xml


// File: unary__mx_8cpp.xml


// File: unary__mx_8hpp.xml


// File: unary__sx_8hpp.xml


// File: unittest__kinvec_8cpp.xml
%feature("docstring")  utest "";

%feature("docstring")  main "";


// File: variable_8cpp.xml


// File: variable_8hpp.xml


// File: variable__internal_8cpp.xml


// File: variable__internal_8hpp.xml


// File: variable__tools_8cpp.xml


// File: variable__tools_8hpp.xml


// File: veccat_8hpp.xml


// File: worhp__internal_8cpp.xml


// File: worhp__internal_8hpp.xml


// File: worhp__solver_8cpp.xml


// File: worhp__solver_8hpp.xml


// File: x__function__internal_8hpp.xml


// File: xfunction__tools_8cpp.xml


// File: xfunction__tools_8hpp.xml


// File: xml__arg_8cpp.xml


// File: xml__arg_8hpp.xml


// File: xml__node_8cpp.xml


// File: xml__node_8hpp.xml


// File: group__DAE__doc.xml


// File: group__ODE__doc.xml


// File: group__LinearSolver__doc.xml


// File: group__NLPSolver__doc.xml


// File: group__QPSolver__doc.xml


// File: group__AcadoIntegrator__doc.xml


// File: group__IdasIntegrator__doc.xml


// File: group__scheme__IntegratorOutput.xml


// File: group__scheme__QPInput.xml


// File: group__scheme__ACADO__Input.xml


// File: group__scheme__ACADO__FCN__Input.xml


// File: group__scheme__RDAEInput.xml


// File: group__scheme__MUSCOD__FCN__Output.xml


// File: group__scheme__QPOutput.xml


// File: group__scheme__NLPOutput.xml


// File: group__scheme__DAEInput.xml


// File: group__scheme__ACADO__Output.xml


// File: group__scheme__DAEOutput.xml


// File: group__scheme__MayerInput.xml


// File: group__scheme__ControlledDAEInput.xml


// File: group__scheme__NLPInput.xml


// File: group__scheme__IntegratorInput.xml


// File: group__scheme__MUSCOD__FCN__Input.xml


// File: group__scheme__RDAEOutput.xml


// File: group__scheme__OCPInput.xml


// File: group__scheme__ControlSimulatorInput.xml


// File: group__scheme__OCPOutput.xml


// File: chapter1.xml


// File: chapter2.xml


// File: chapter3.xml


// File: chapter4.xml


// File: chapter5.xml


// File: chapter6.xml


// File: dir_5f4c7cd1f6b9eee860ac338ff55150b6.xml


// File: dir_d129cc46d7790994f9fa41dacdc8cdd0.xml


// File: dir_865eb757bba684eb6d1347e34b8809e7.xml


// File: dir_67795830a2aff23d4db649a7dad3b6de.xml


// File: dir_07667afcc54a3bd5f9392469a42306ce.xml


// File: dir_2542617892b3a023bc434c6b60ff06e5.xml


// File: dir_39ebeabde9ffd9671e679aba8c65a4f4.xml


// File: dir_81b37fa3dda04a022977f2518a724110.xml


// File: dir_2fa25e4320617cf715dbed18b9666d8f.xml


// File: dir_175c682169f8cb2d8be7cdcb2e1e51ac.xml


// File: dir_83090a96a9fe9e7cedbddcc3be5ec814.xml


// File: dir_40ab3712138edabde036ea115a67fc6f.xml


// File: dir_058b2f3a951ec00fa39cf0545c3e2ccf.xml


// File: dir_e3dc74ca6b43151164e0d6c6e7047cff.xml


// File: dir_2253d5d42cec80472dd941fe4c8903da.xml


// File: dir_1e7ed285b743725a577c6cdf380cf322.xml


// File: dir_72ce9df779fc5a96499c342902ceb3c3.xml


// File: dir_d790cb618900a80a39e3632f9daecf12.xml


// File: dir_c71fb2832026713371646abde24bfd25.xml


// File: dir_d56e93be877b863cf9966fb9e2678201.xml


// File: dir_52716d91148b44f9f495ff6980fe4c6c.xml


// File: dir_1a721c701b31175e0568393aba0e53e3.xml


// File: dir_dbaa90f951dc9534ec0d08a32fbac487.xml


// File: dir_7f254306f700f86e9d25bb4c7da01fee.xml


// File: dir_f6c3917dea5dc437f04400da98ad0624.xml


// File: dir_c7dc30330ad0826e0fa37794c96f7db1.xml


// File: dir_6d9c90fb6a18a4aeca18e5a8ba207929.xml


// File: dir_22ffb6e97fd8d8f27d934c12d720294b.xml


// File: dir_28893b33c9e4942b75198c25801a7c28.xml


// File: dir_03a2db6a2c60634108499884643ac0ad.xml


// File: dir_2daa5eef6a1edf30bcc7ac3938210574.xml


// File: dir_c5bd38fabe1208ba040e35d87361c2b7.xml


// File: dir_a80281c4544000787d65e06d44e540f9.xml


// File: dir_268364c87bf6acef376d9d04ccfac8e7.xml


// File: dir_c871556992ed7d284c48cca58151ed6e.xml


// File: dir_ca41ca4ddf2381bca8b68fc15872bab5.xml


// File: dir_bf0fc637c79f11d27bc15c119d3b78fe.xml


// File: dir_315a04cf4185d821d7d871ea462d0256.xml


// File: dir_df3e323757f171bb9cc08f0857fdb687.xml


// File: dir_98534246d9c54ffabe5ab5a74c66a5d8.xml


// File: algebra_2LinearSolver_8py-example.xml


// File: FX_2expand_8py-example.xml


// File: FX_2parallelizer_8py-example.xml


// File: FX_2pyfunction_8py-example.xml


// File: integrators_2controlsimulator_8py-example.xml


// File: integrators_2idas_8py-example.xml


// File: integrators_2simulator_8py-example.xml


// File: integrators_2tolerance_8py-example.xml


// File: misc_2all_8cc-example.xml


// File: misc_2dotdraw_8py-example.xml


// File: misc_2limitPrinting_8py-example.xml


// File: misc_2limitPrinting_c_8cc-example.xml


// File: misc_2printme_8py-example.xml


// File: misc_2range_8cc-example.xml


// File: MX_2createParent_8py-example.xml


// File: MX_2mapping_8py-example.xml


// File: MX_2veccat_8py-example.xml


// File: operators_2MX_2minmax_8py-example.xml


// File: operators_2SX_2minmax_8py-example.xml


// File: solvers_2callback_8py-example.xml


// File: solvers_2exacthessian_8py-example.xml


// File: solvers_2ipopt_8py-example.xml


// File: solvers_2KinsolSolver_8py-example.xml


// File: SX_2countNodes_8py-example.xml


// File: SX_2generateCode_8py-example.xml


// File: SX_2jacSparsity_8py-example.xml


// File: SX_2ssym_8py-example.xml


// File: SX_2SXaddition_8cc-example.xml


// File: SX_2SXFunction_constr_oct_8m-example.xml


// File: SX_2SXFunction_constr_py_8py-example.xml


// File: SX_2symbolicsubstitution_8py-example.xml


// File: indexpage.xml

