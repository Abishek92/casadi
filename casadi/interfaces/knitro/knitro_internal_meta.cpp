/*
 *    This file is part of CasADi.
 *
 *    CasADi -- A symbolic framework for dynamic optimization.
 *    Copyright (C) 2010 by Joel Andersson, Moritz Diehl, K.U.Leuven. All rights reserved.
 *
 *    CasADi is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 3 of the License, or (at your option) any later version.
 *
 *    CasADi is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with CasADi; if not, write to the Free Software
 *    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 */


      #include "knitro_internal.hpp"
      #include <string>

      const std::string casadi::KnitroInternal::meta_doc=
      "\n"
"\n"
">List of available options\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"|       Id        |      Type       |     Default     |   Description   |\n"
"+=================+=================+=================+=================+\n"
"| BarRule         | OT_INTEGER      | 0               | Barrier Rule    |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Debug           | OT_INTEGER      | 0               | Debug level     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Delta           | OT_REAL         | 1               | Initial region  |\n"
"|                 |                 |                 | scaling factor  |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| FeasModeTol     | OT_REAL         | 0.000           | Feasible mode   |\n"
"|                 |                 |                 | tolerance       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| FeasTol         | OT_REAL         | 0.000           | Feasible        |\n"
"|                 |                 |                 | tolerance       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| FeasTolAbs      | OT_REAL         | 1               | Absolute        |\n"
"|                 |                 |                 | feasible        |\n"
"|                 |                 |                 | tolerance       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Feasible        | OT_BOOLEAN      | 0               | Allow           |\n"
"|                 |                 |                 | infeasible      |\n"
"|                 |                 |                 | iterations      |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| GradOpt         | OT_INTEGER      | 1               | Gradient        |\n"
"|                 |                 |                 | calculation     |\n"
"|                 |                 |                 | method          |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| HessOpt         | OT_INTEGER      | 1               | Hessian         |\n"
"|                 |                 |                 | calculation     |\n"
"|                 |                 |                 | method          |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| HonorBnds       | OT_BOOLEAN      | 0               | Enforce bounds  |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| InitPt          | OT_BOOLEAN      | 0               | Use initial     |\n"
"|                 |                 |                 | point strategy  |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| LmSize          | OT_INTEGER      | 10              | Memory pairsize |\n"
"|                 |                 |                 | limit           |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| LpSolver        | OT_BOOLEAN      | 0               | Use LpSolver    |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| MaxCgIt         | OT_INTEGER      | 0               | Maximum         |\n"
"|                 |                 |                 | conjugate       |\n"
"|                 |                 |                 | gradient        |\n"
"|                 |                 |                 | iterations      |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| MaxIt           | OT_INTEGER      | 10000           | Iteration limit |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Mu              | OT_REAL         | 0.100           | Initial barrier |\n"
"|                 |                 |                 | parameter       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Multistart      | OT_BOOLEAN      | 0               | Use multistart  |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| NewPoint        | OT_BOOLEAN      | 0               | Select new-     |\n"
"|                 |                 |                 | point feature   |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| ObjRange        | OT_REAL         | 0.000           | Maximum         |\n"
"|                 |                 |                 | objective value |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| OptTol          | OT_REAL         | 0.000           | Relative        |\n"
"|                 |                 |                 | optimality      |\n"
"|                 |                 |                 | tolerance       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| OptTolAbs       | OT_REAL         | 0               | Absolute        |\n"
"|                 |                 |                 | optimality      |\n"
"|                 |                 |                 | tolerance       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| OutLev          | OT_INTEGER      | 2               | Log output      |\n"
"|                 |                 |                 | level           |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Pivot           | OT_REAL         | 0.000           | Initial pivot   |\n"
"|                 |                 |                 | threshold       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Scale           | OT_BOOLEAN      | 1               | Perform scaling |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| ShiftInit       | OT_BOOLEAN      | 1               | Interior-point  |\n"
"|                 |                 |                 | shifting        |\n"
"|                 |                 |                 | initial point   |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| Soc             | OT_INTEGER      | 1               | Second order    |\n"
"|                 |                 |                 | correction      |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| XTol            | OT_REAL         | 0.000           | Relative        |\n"
"|                 |                 |                 | solution change |\n"
"|                 |                 |                 | tolerance       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| ad_mode         | OT_STRING       | \"automatic\"     | How to          |\n"
"|                 |                 |                 | calculate the   |\n"
"|                 |                 |                 | Jacobians.      |\n"
"|                 |                 |                 | (forward: only  |\n"
"|                 |                 |                 | forward         |\n"
"|                 |                 |                 | mode|reverse:   |\n"
"|                 |                 |                 | only adjoint    |\n"
"|                 |                 |                 | mode|automatic: |\n"
"|                 |                 |                 | a heuristic     |\n"
"|                 |                 |                 | decides which   |\n"
"|                 |                 |                 | is more         |\n"
"|                 |                 |                 | appropriate)    |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| contype         | OT_INTEGERVECTO |                 |                 |\n"
"|                 | R               |                 |                 |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| derivative_gene | OT_DERIVATIVEGE | GenericType()   | Function that   |\n"
"| rator           | NERATOR         |                 | returns a       |\n"
"|                 |                 |                 | derivative      |\n"
"|                 |                 |                 | function given  |\n"
"|                 |                 |                 | a number of     |\n"
"|                 |                 |                 | forward and     |\n"
"|                 |                 |                 | reverse         |\n"
"|                 |                 |                 | directional     |\n"
"|                 |                 |                 | derivative,     |\n"
"|                 |                 |                 | overrides       |\n"
"|                 |                 |                 | internal        |\n"
"|                 |                 |                 | routines. Check |\n"
"|                 |                 |                 | documentation   |\n"
"|                 |                 |                 | of DerivativeGe |\n"
"|                 |                 |                 | nerator.        |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| eval_errors_fat | OT_BOOLEAN      | false           | When errors     |\n"
"| al              |                 |                 | occur during    |\n"
"|                 |                 |                 | evaluation of   |\n"
"|                 |                 |                 | f,g,...,stop    |\n"
"|                 |                 |                 | the iterations  |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| expand          | OT_BOOLEAN      | false           | Expand the NLP  |\n"
"|                 |                 |                 | function in     |\n"
"|                 |                 |                 | terms of scalar |\n"
"|                 |                 |                 | operations,     |\n"
"|                 |                 |                 | i.e. MX->SX     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| gather_stats    | OT_BOOLEAN      | false           | Flag to         |\n"
"|                 |                 |                 | indicate        |\n"
"|                 |                 |                 | whether         |\n"
"|                 |                 |                 | statistics must |\n"
"|                 |                 |                 | be gathered     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| grad_f          | OT_FUNCTION     | GenericType()   | Function for    |\n"
"|                 |                 |                 | calculating the |\n"
"|                 |                 |                 | gradient of the |\n"
"|                 |                 |                 | objective       |\n"
"|                 |                 |                 | (column,        |\n"
"|                 |                 |                 | autogenerated   |\n"
"|                 |                 |                 | by default)     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| grad_lag        | OT_FUNCTION     | GenericType()   | Function for    |\n"
"|                 |                 |                 | calculating the |\n"
"|                 |                 |                 | gradient of the |\n"
"|                 |                 |                 | Lagrangian      |\n"
"|                 |                 |                 | (autogenerated  |\n"
"|                 |                 |                 | by default)     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| hess_lag        | OT_FUNCTION     | GenericType()   | Function for    |\n"
"|                 |                 |                 | calculating the |\n"
"|                 |                 |                 | Hessian of the  |\n"
"|                 |                 |                 | Lagrangian      |\n"
"|                 |                 |                 | (autogenerated  |\n"
"|                 |                 |                 | by default)     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| ignore_check_ve | OT_BOOLEAN      | false           | If set to true, |\n"
"| c               |                 |                 | the input shape |\n"
"|                 |                 |                 | of F will not   |\n"
"|                 |                 |                 | be checked.     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| inputs_check    | OT_BOOLEAN      | true            | Throw           |\n"
"|                 |                 |                 | exceptions when |\n"
"|                 |                 |                 | the numerical   |\n"
"|                 |                 |                 | values of the   |\n"
"|                 |                 |                 | inputs don't    |\n"
"|                 |                 |                 | make sense      |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| iteration_callb | OT_CALLBACK     | GenericType()   | A function that |\n"
"| ack             |                 |                 | will be called  |\n"
"|                 |                 |                 | at each         |\n"
"|                 |                 |                 | iteration with  |\n"
"|                 |                 |                 | the solver as   |\n"
"|                 |                 |                 | input. Check    |\n"
"|                 |                 |                 | documentation   |\n"
"|                 |                 |                 | of Callback.    |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| iteration_callb | OT_BOOLEAN      | false           | If set to true, |\n"
"| ack_ignore_erro |                 |                 | errors thrown   |\n"
"| rs              |                 |                 | by iteration_ca |\n"
"|                 |                 |                 | llback will be  |\n"
"|                 |                 |                 | ignored.        |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| iteration_callb | OT_INTEGER      | 1               | Only call the   |\n"
"| ack_step        |                 |                 | callback        |\n"
"|                 |                 |                 | function every  |\n"
"|                 |                 |                 | few iterations. |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| jac_f           | OT_FUNCTION     | GenericType()   | Function for    |\n"
"|                 |                 |                 | calculating the |\n"
"|                 |                 |                 | jacobian of the |\n"
"|                 |                 |                 | objective       |\n"
"|                 |                 |                 | (sparse row,    |\n"
"|                 |                 |                 | autogenerated   |\n"
"|                 |                 |                 | by default)     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| jac_g           | OT_FUNCTION     | GenericType()   | Function for    |\n"
"|                 |                 |                 | calculating the |\n"
"|                 |                 |                 | Jacobian of the |\n"
"|                 |                 |                 | constraints     |\n"
"|                 |                 |                 | (autogenerated  |\n"
"|                 |                 |                 | by default)     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| monitor         | OT_STRINGVECTOR | GenericType()   | Monitors to be  |\n"
"|                 |                 |                 | activated (inpu |\n"
"|                 |                 |                 | ts|outputs)  (e |\n"
"|                 |                 |                 | val_f|eval_g|ev |\n"
"|                 |                 |                 | al_jac_g|eval_g |\n"
"|                 |                 |                 | rad_f|eval_h)   |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| name            | OT_STRING       | \"unnamed_shared | name of the     |\n"
"|                 |                 | _object\"        | object          |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| regularity_chec | OT_BOOLEAN      | true            | Throw           |\n"
"| k               |                 |                 | exceptions when |\n"
"|                 |                 |                 | NaN or Inf      |\n"
"|                 |                 |                 | appears during  |\n"
"|                 |                 |                 | evaluation      |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| user_data       | OT_VOIDPTR      | GenericType()   | A user-defined  |\n"
"|                 |                 |                 | field that can  |\n"
"|                 |                 |                 | be used to      |\n"
"|                 |                 |                 | identify the    |\n"
"|                 |                 |                 | function or     |\n"
"|                 |                 |                 | pass additional |\n"
"|                 |                 |                 | information     |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| verbose         | OT_BOOLEAN      | false           | Verbose         |\n"
"|                 |                 |                 | evaluation  for |\n"
"|                 |                 |                 | debugging       |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"| warn_initial_bo | OT_BOOLEAN      | false           | Warn if the     |\n"
"| unds            |                 |                 | initial guess   |\n"
"|                 |                 |                 | does not        |\n"
"|                 |                 |                 | satisfy LBX and |\n"
"|                 |                 |                 | UBX             |\n"
"+-----------------+-----------------+-----------------+-----------------+\n"
"\n"
"\n"
">List of available monitors\n"
"+-------------+\n"
"|     Id      |\n"
"+=============+\n"
"| eval_f      |\n"
"+-------------+\n"
"| eval_g      |\n"
"+-------------+\n"
"| eval_grad_f |\n"
"+-------------+\n"
"| eval_h      |\n"
"+-------------+\n"
"| eval_jac_g  |\n"
"+-------------+\n"
"| inputs      |\n"
"+-------------+\n"
"| outputs     |\n"
"+-------------+\n"
"\n"
"\n"
"\n"
"\n"
;
